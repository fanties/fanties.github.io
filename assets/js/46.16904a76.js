(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{406:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("p",[s._v("相较于Java而言，Golang本身可以直接打包为各个平台的二进制文件，并不需要安装环境，所以直接采用虚拟机的方式部署也是非常方便的。")]),s._v(" "),a("p",[s._v("但是如今云原生时代，部署并不仅仅是跑起来这么简单，还包括动态扩缩容、状态监控、资源管控等能力，容器化基本上是最佳选择。")]),s._v(" "),a("p",[s._v("本文主要总结了Golang打包Docker的最佳实践，拥有非常小的体积，并且可以用于生产环境。")]),s._v(" "),a("h2",{attrs:{id:"一、最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、最佳实践"}},[s._v("#")]),s._v(" 一、最佳实践")]),s._v(" "),a("p",[s._v("话不多说，先上可用域生产环境使用的Dockerfile文件：")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" golang:1.19-alpine3.16 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" builder")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#更新Alpine的软件源为国内源，提高下载速度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://mirror.tuna.tsinghua.edu.cn/alpine/v3.16/main/"')]),s._v(" > /etc/apk/repositories")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apk add --no-cache tzdata")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /build")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" adduser -u 10001 -D app-runner")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" GOPROXY https://goproxy.cn")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" go.mod .")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" go.sum .")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" go mod download")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -a -o httpserver .")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" alpine:3.16 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" final")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /build/httpserver /app/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#COPY --from=builder /build/config /app/config")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /etc/passwd /etc/passwd")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置时区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" TZ Asia/Shanghai")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token options"}},[a("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /usr/share/zoneinfo/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TZ}")]),s._v(" /usr/share/zoneinfo/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TZ}")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" app-runner")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app/httpserver"')]),s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("我们实际上使用的是分阶段打包镜像")]),s._v(" "),a("p",[s._v("其实我们也可以先打包为Linux二进制文件，Dockerfile只把二进制文件COPY到镜像，但是这种方式打包环境和容器基础镜像提供的环境有所不同，而且还要首先安装golang环境，所以并不推荐采用这种方式。")])]),s._v(" "),a("h2",{attrs:{id:"二、讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、讲解"}},[s._v("#")]),s._v(" 二、讲解")]),s._v(" "),a("ol",[a("li",[s._v("Golang运行只需要Linux内核")]),s._v(" "),a("li",[s._v("Docker分阶段构建")]),s._v(" "),a("li",[s._v("使用最小镜像alpha")])]),s._v(" "),a("h2",{attrs:{id:"_2-1-添加时区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-添加时区"}},[s._v("#")]),s._v(" 2.1 添加时区")]),s._v(" "),a("p",[s._v("aplha镜像默认时区是UTC，如果我们需要改为中国的时区，需要安装tzdata")]),s._v(" "),a("p",[s._v("为了加速流水线下载速度，我添加镜像加速地址：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('RUN echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.16/main/" > /etc/apk/repositories\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后执行alpha镜像的安装命令：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("RUN apk add --no-cache tzdata\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("由于我们是在第一阶段的构建镜像中安装的时区，我们在第二阶段构建最终竟像时，需要把安装好的时区拷贝过去：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ENV TZ Asia/Shanghai\nCOPY --from=builder /usr/share/zoneinfo/${TZ} /usr/share/zoneinfo/${TZ}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("我们通过ENV TZ的方式声明我们使用上海的时区，也就是北京时间了")]),s._v(" "),a("h2",{attrs:{id:"_2-2-服务名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-服务名"}},[s._v("#")]),s._v(" 2.2 服务名")]),s._v(" "),a("p",[s._v("我们上面打包golang的二进制名字为httpserver，并且启动命令也是httpserver，我们实际上可以通过哦ARG命令把该名字传入进来")]),s._v(" "),a("p",[s._v("使用具体的具备业务含义的名字，这样的好处是查询对应的进程信息时，方便区分不同的服务容器")]),s._v(" "),a("h2",{attrs:{id:"_2-3-运行权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-运行权限"}},[s._v("#")]),s._v(" 2.3 运行权限")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('USER app-runner\nENTRYPOINT ["/app/httpserver"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在启动应用之前，先使用命令USER指定用户，这样后面运行的指令将只用指定用户的权限，可以增强安全性，避免应用漏洞导致服务器诶侵入。")]),s._v(" "),a("h3",{attrs:{id:"_2-3-1-linux-etc-passwd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-linux-etc-passwd"}},[s._v("#")]),s._v(" 2.3.1 Linux /etc/passwd")]),s._v(" "),a("p",[s._v("在Linux系统中，/etc/passwd是一个文件，存储基本用户信息，其中一行就代表一条用户信息。")]),s._v(" "),a("p",[s._v("我们通过cat /etc/passwd，可以查看到如下信息：\n"),a("img",{attrs:{src:"http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/20221202193957.png",alt:"20221202193957"}})]),s._v(" "),a("p",[s._v("其中每一行被:分割为7个部分，对应的含义为：")]),s._v(" "),a("blockquote",[a("p",[s._v("用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell")])]),s._v(" "),a("h2",{attrs:{id:"_2-4-docker分阶段构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-docker分阶段构建"}},[s._v("#")]),s._v(" 2.4 Docker分阶段构建")]),s._v(" "),a("p",[s._v("Docker 17.05版本以后，官方就提供了一个新的特性：Multi-stage builds（多阶段构建）。")]),s._v(" "),a("p",[s._v("利用多阶段构建，我们可以在一个 Dockerfile 中使用多个 FROM 语句。每个 FROM 指令都可以使用不同的基础镜像，并表示开始一个新的构建阶段。")]),s._v(" "),a("p",[s._v("我们可以很方便的将一个阶段的文件复制到另外一个阶段，在最终的镜像只需要保留必要的内容。")]),s._v(" "),a("p",[s._v("通过这种方式，我们可以很容易实现Docker镜像的瘦身，最终镜像只保留运行时需要的内容，而构建期间用到的内容都可以不保存。")]),s._v(" "),a("h2",{attrs:{id:"三、docker基础镜像-base-image-scratch-、busybox、alpine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、docker基础镜像-base-image-scratch-、busybox、alpine"}},[s._v("#")]),s._v(" 三、Docker基础镜像（base image）：scratch 、busybox、alpine")]),s._v(" "),a("h3",{attrs:{id:"scratch-空镜像-基础镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scratch-空镜像-基础镜像"}},[s._v("#")]),s._v(" scratch：空镜像，基础镜像")]),s._v(" "),a("p",[s._v("scratch是Docker中预留的最小的基础镜像。bosybox 、 Go语言编译打包的镜像都可以基于scratch来构建。")]),s._v(" "),a("p",[s._v("scratch镜像不在镜像仓库中，但是可以在Dockerfile引用。")]),s._v(" "),a("p",[s._v("如：")]),s._v(" "),a("div",{staticClass:"language-dockerfile line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" scratch")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"busybox"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#busybox"}},[s._v("#")]),s._v(" busybox")]),s._v(" "),a("p",[s._v("busybox镜像只有几兆。")]),s._v(" "),a("p",[s._v("BusyBox是一个集成了一百多个最常用Linux命令和工具（如cat、echo、grep、mount、telnet等）的精简工具箱，它只有几MB的大小，很方便进行各种快速验证，被誉为“Linux系统的瑞士军刀”。BusyBox可运行于多款POSIX环境的操作系统中，如Linux（包括Android）、Hurd、FreeBSD等。")]),s._v(" "),a("h3",{attrs:{id:"alpine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alpine"}},[s._v("#")]),s._v(" Alpine")]),s._v(" "),a("p",[s._v("Alpine镜像比busybox大一点，也只有几兆。")]),s._v(" "),a("p",[s._v("Alpine操作系统是一个面向安全的轻型Linux发行版。它不同于通常的Linux发行版，Alpine采用了musl libc和BusyBox以减小系统的体积和运行时资源消耗，但功能上比BusyBox又完善得多。在保持瘦身的同时，Alpine还提供了自己的包管理工具apk，可以通过https://pkgs.alpinelinux.org/packages查询包信息，也可以通过apk命令直接查询和安装各种软件。")]),s._v(" "),a("p",[s._v("Alpine Docker镜像也继承了Alpine Linux发行版的这些优势。相比于其他Docker镜像，它的容量非常小，仅仅只有5MB左右（Ubuntu系列镜像接近200MB），且拥有非常友好的包管理机制。官方镜像来自docker-alpine项目。")]),s._v(" "),a("p",[s._v("目前Docker官方已开始推荐使用Alpine替代之前的Ubuntu作为基础镜像环境。这样会带来多个好处，包括镜像下载速度加快，镜像安全性提高，主机之间的切换更方便，占用更少磁盘空间等。")]),s._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/kingu_crimson/article/details/126266971",target:"_blank",rel:"noopener noreferrer"}},[s._v("Golang Dockerfile的最佳实践"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/beatleC/p/16056315.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Golang - 如何使用Docker部署Go Web应用"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/jackluo/p/13576448.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("如何使用docker 部署 golang 编译环境最小版"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://www.asznl.com/post/48",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker基础镜像（base image）：scratch 、 busybox 、 alpine"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_34556414/article/details/78902662",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux /etc/passwd"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/zhongbeida_xue/article/details/105136672",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux中/etc/passwd文件详细解析"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/68c57153d968",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker多阶段构建"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);