(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,o,s=e[0],l=e[1],c=e[2],d=0,p=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(i,o)&&i[o]&&p.push(i[o][0]),i[o]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(u&&u(e);p.length;)p.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==i[l]&&(r=!1)}r&&(a.splice(e--,1),n=o(o.s=t[0]))}return n}var r={},i={1:0},a=[];function o(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=i[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=i[n]=[e,r]}));e.push(t[2]=r);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(n){return o.p+"assets/js/"+({}[n]||n)+"."+{2:"a2e47d19",3:"9db64edd",4:"8618805e",5:"04b89f6c",6:"92e03c58",7:"f7306d6f",8:"0c0b2ac3",9:"3a6ab990",10:"9471f815",11:"c8378516",12:"6ac8a5f0",13:"94a18eaf",14:"847033a3",15:"7c4325b5",16:"e96e5ab3",17:"7546f5a3",18:"be0fb2b2",19:"9ef95fcf",20:"5b6f55f6",21:"c02217b3",22:"9a7efe2f",23:"e8703be7",24:"bcb275f2",25:"ef52f3f4",26:"fc33ad9c",27:"247160fc",28:"85f03759",29:"70302fd1",30:"7df491ac",31:"9e12a9ab",32:"95df1632",33:"ebb35b81",34:"839bb7ff",35:"40eacfdf",36:"eddcdeb2",37:"6e1a687e",38:"4f3c4286",39:"03cf763c",40:"1393825d",41:"c965769a",42:"6085d2d8",43:"89210b28",44:"c4f41cdb",45:"47666a6a",46:"16904a76",47:"63a8e7d9",48:"74f5fefe",49:"ee37b28a",50:"82710bea",51:"04b5f741",52:"1297b7bc"}[n]+".js"}(n);var l=new Error;a=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=i[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+a+")",l.name="ChunkLoadError",l.type=r,l.request=a,t[1](l)}i[n]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(e)},o.m=n,o.c=r,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/",o.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var u=l;a.push([109,0]),t()}([function(n,e,t){"use strict";function r(n,e,t,r,i,a,o,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),i&&i.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},c._ssrRegister=l):i&&(l=s?function(){i.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:i),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(n,e){return l.call(e),u(n,e)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){var r=t(57),i=r.all;n.exports=r.IS_HTMLDDA?function(n){return"function"==typeof n||n===i}:function(n){return"function"==typeof n}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r=t(30),i=Function.prototype,a=i.call,o=r&&i.bind.bind(a,a);n.exports=r?o:function(n){return function(){return a.apply(n,arguments)}}},function(n,e,t){var r=t(3);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(4),i=t(32),a=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return a(i(n),e)}},function(n,e,t){var r=t(71),i="object"==typeof self&&self&&self.Object===Object&&self,a=r||i||Function("return this")();n.exports=a},function(n,e,t){var r=t(1),i=t(57),a=i.all;n.exports=i.IS_HTMLDDA?function(n){return"object"==typeof n?null!==n:r(n)||n===a}:function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){var r=t(168),i=t(171);n.exports=function(n,e){var t=i(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return a})),t.d(e,"j",(function(){return o})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return u})),t.d(e,"c",(function(){return d})),t.d(e,"f",(function(){return p})),t.d(e,"l",(function(){return h})),t.d(e,"m",(function(){return f})),t.d(e,"d",(function(){return v})),t.d(e,"k",(function(){return g})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return w}));t(16);const r=/#.*$/,i=/\.(md|html)$/,a=/\/$/,o=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(r,"").replace(i,"")}function l(n){return o.test(n)}function c(n){return/^mailto:/.test(n)}function u(n){return/^tel:/.test(n)}function d(n){if(l(n))return n;if(!n)return"404";const e=n.match(r),t=e?e[0]:"",i=s(n);return a.test(i)?n:i+".html"+t}function p(n,e){const t=n.hash,i=function(n){const e=n&&n.match(r);if(e)return e[0]}(e);if(i&&t!==i)return!1;return s(n.path)===s(e)}function h(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;const i=e.split("/");t&&i[i.length-1]||i.pop();const a=n.replace(/^\//,"").split("/");for(let n=0;n<a.length;n++){const e=a[n];".."===e?i.pop():"."!==e&&i.push(e)}""!==i[0]&&i.unshift("");return i.join("/")}(e,t));const r=s(e);for(let e=0;e<n.length;e++)if(s(n[e].regularPath)===r)return Object.assign({},n[e],{type:"page",path:d(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function f(n,e,t,r){const{pages:i,themeConfig:a}=t,o=r&&a.locales&&a.locales[r]||a;if("auto"===(n.frontmatter.sidebar||o.sidebar||a.sidebar))return m(n);const s=o.sidebar||a.sidebar;if(s){const{base:t,config:r}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const r in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(r)))return{base:r,config:e[r]};var t;return{}}(e,s);return"auto"===r?m(n):r?r.map(n=>function n(e,t,r,i=1){if("string"==typeof e)return h(t,e,r);if(Array.isArray(e))return Object.assign(h(t,e[0],r),{title:e[1]});{i>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const a=e.children||[];return 0===a.length&&e.path?Object.assign(h(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:a.map(e=>n(e,t,r,i+1)),collapsable:!1!==e.collapsable}}}(n,i,t)):[]}return[]}function m(n){const e=v(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function v(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function g(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function y(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function w(n,e){return y(e)-y(n)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){var r=t(5),i=t(66),a=t(105),o=t(29),s=t(56),l=TypeError,c=Object.defineProperty,u=Object.getOwnPropertyDescriptor;e.f=r?a?function(n,e,t){if(o(n),e=s(e),o(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=u(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(o(n),e=s(e),o(t),i)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(15),i=t(153),a=t(154),o=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?i(n):a(n)}},function(n,e,t){var r=t(8).Symbol;n.exports=r},function(n,e,t){"use strict";var r=t(17),i=t(32),a=t(33),o=t(134),s=t(136),l=t(3)((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:l||c},{push:function(n){var e=i(this),t=a(e),r=arguments.length;s(t+r);for(var l=0;l<r;l++)e[t]=arguments[l],t++;return o(e,t),t}})},function(n,e,t){var r=t(2),i=t(53).f,a=t(21),o=t(117),s=t(37),l=t(67),c=t(130);n.exports=function(n,e){var t,u,d,p,h,f=n.target,m=n.global,v=n.stat;if(t=m?r:v?r[f]||s(f,{}):(r[f]||{}).prototype)for(u in e){if(p=e[u],d=n.dontCallGetSet?(h=i(t,u))&&h.value:t[u],!c(m?u:f+(v?".":"#")+u,n.forced)&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(n.sham||d&&d.sham)&&a(p,"sham",!0),o(t,u,p,n)}}},function(n,e,t){var r=t(4),i=r({}.toString),a=r("".slice);n.exports=function(n){return a(i(n),8,-1)}},function(n,e,t){var r=t(2),i=t(1),a=function(n){return i(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?a(r[n]):r[n]&&r[n][e]}},function(n,e,t){var r=t(2),i=t(63),a=t(7),o=t(65),s=t(61),l=t(60),c=i("wks"),u=r.Symbol,d=u&&u.for,p=l?u:u&&u.withoutSetter||o;n.exports=function(n){if(!a(c,n)||!s&&"string"!=typeof c[n]){var e="Symbol."+n;s&&a(u,n)?c[n]=u[n]:c[n]=l&&d?d(e):p(e)}return c[n]}},function(n,e,t){var r=t(5),i=t(13),a=t(35);n.exports=r?function(n,e,t){return i.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(158),i=t(159),a=t(160),o=t(161),s=t(162);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(73);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(10)(Object,"create");n.exports=r},function(n,e,t){var r=t(180);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(45);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var r,i;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(i="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function i(n,e,t){return n<e?e:n>t?t:n}function a(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=i(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),u=r.speed,d=r.easing;return l.offsetWidth,o((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var i;return(i="translate3d"===r.positionUsing?{transform:"translate3d("+a(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(n)+"%,0)"}:{"margin-left":a(n)+"%"}).transition="all "+e+"ms "+t,i}(n,u,d)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*i(Math.random()*e,.1,.95)),e=i(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var i,o=e.querySelector(r.barSelector),l=n?"-100":a(t.status||0),u=document.querySelector(r.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(i=e.querySelector(r.spinnerSelector))&&p(i),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,i=n.length,a=e.charAt(0).toUpperCase()+e.slice(1);i--;)if((r=n[i]+a)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,i,a=arguments;if(2==a.length)for(t in e)void 0!==(i=e[t])&&e.hasOwnProperty(t)&&r(n,t,i);else r(n,a[1],a[2])}}();function l(n,e){return("string"==typeof n?n:d(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=d(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function u(n,e){var t,r=d(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function d(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=i)},function(n){n.exports=JSON.parse('{"_from":"vuepress-plugin-vdoing-comment@^1.0.3","_id":"vuepress-plugin-vdoing-comment@1.0.3","_inBundle":false,"_integrity":"sha512-FR9KRzp+izphAuVftXQPUMnOi92QJpxaWFd3zKOqww8EESCXUTmgIMGpfpOupfge004xPJUvVVjM+lEGeHpKEA==","_location":"/vuepress-plugin-vdoing-comment","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"vuepress-plugin-vdoing-comment@^1.0.3","name":"vuepress-plugin-vdoing-comment","escapedName":"vuepress-plugin-vdoing-comment","rawSpec":"^1.0.3","saveSpec":null,"fetchSpec":"^1.0.3"},"_requiredBy":["#DEV:/"],"_resolved":"https://registry.npmjs.org/vuepress-plugin-vdoing-comment/-/vuepress-plugin-vdoing-comment-1.0.3.tgz","_shasum":"bbcba708ac94fe32793ec7bd4e2ae85d1cb2d4d5","_spec":"vuepress-plugin-vdoing-comment@^1.0.3","_where":"/home/runner/work/fanties.github.io/fanties.github.io","author":{"name":"terwer"},"bugs":{"url":"https://github.com/terwer/vuepress-plugin-vdoing-comment/issues"},"bundleDependencies":false,"dependencies":{"artalk":"^2.4.3","ejs":"^2.6.1","gitalk":"^1.5.0","gitalk-fix":"^1.5.2","i":"^0.3.6","npm":"^6.9.0","valine":"^1.3.9"},"deprecated":false,"description":"Comment plugin in vuepress vdoing theme, supports Gitalk, Valine, Artalk...","homepage":"https://github.com/terwer/vuepress-plugin-vdoing-comment/blob/main/README.md","keywords":["vuepress","comment","plugin","vue","gitalk","valine","artalk"],"license":"MIT","main":"index.js","name":"vuepress-plugin-vdoing-comment","repository":{"type":"git","url":"git+ssh://git@github.com/terwer/vuepress-plugin-vdoing-comment.git"},"scripts":{"test":"echo \\"Error: no test specified\\" && exit 1"},"version":"1.0.3"}')},function(n,e,t){var r=t(9),i=String,a=TypeError;n.exports=function(n){if(r(n))return n;throw a(i(n)+" is not an object")}},function(n,e,t){var r=t(3);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){var r=t(48),i=t(54);n.exports=function(n){return r(i(n))}},function(n,e,t){var r=t(54),i=Object;n.exports=function(n){return i(r(n))}},function(n,e,t){var r=t(128);n.exports=function(n){return r(n.length)}},function(n,e,t){var r=t(30),i=Function.prototype.call;n.exports=r?i.bind(i):function(){return i.apply(i,arguments)}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var r=t(2),i=t(37),a=r["__core-js_shared__"]||i("__core-js_shared__",{});n.exports=a},function(n,e,t){var r=t(2),i=Object.defineProperty;n.exports=function(n,e){try{i(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(152),i=t(12),a=Object.prototype,o=a.hasOwnProperty,s=a.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return i(n)&&o.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(10)(t(8),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(172),i=t(179),a=t(181),o=t(182),s=t(183);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(6),i=t(45),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!i(n))||(o.test(n)||!a.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(14),i=t(12);n.exports=function(n){return"symbol"==typeof n||i(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.r(e);var r={name:"LastReadingPopup",data:()=>({lastReading:null,show:!1}),computed:{popupConfig(){const n={"/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"确定",cancelButtonText:"取消"},"/zh/":{message:"检测到您上一次阅读的位置，是否移至该位置？",sureButtonText:"前往",cancelButtonText:"取消"}};return n[`/${this.$lang.split("-")[0]}/`]||n[this.$localePath]||n},message(){const n=this.popupConfig;return n&&n.message||n["/"].message},sureButtonText(){const n=this.popupConfig;return n&&n.sureButtonText||n["/"].sureButtonText},cancelButtonText(){const n=this.popupConfig;return n&&n.cancelButtonText||n["/"].cancelButtonText}},mounted(){window.ActiveXObject||"ActiveXObject"in window?setTimeout(()=>{window.addEventListener("load",this.init())},1e3):setTimeout(()=>{window.addEventListener("load",this.init)},1e3)},methods:{init(){this.lastReading=JSON.parse(localStorage.getItem("lastReading")),this.lastReading&&(this.$route.path===this.lastReading.path?this.goto():(this.show=!0,setTimeout(this.clean,1e4)))},goto(){this.$route.path!==this.lastReading.path?this.$router.replace(this.lastReading.path).then(()=>{document.documentElement.scrollTop=this.lastReading.scrollTop,this.clean()}):this.$nextTick(()=>{document.documentElement.scrollTop=this.lastReading.scrollTop})},dontgoto(){this.clean()},clean(){this.show=!1,localStorage.removeItem("lastReading")}}},i=(t(246),t(0)),a=Object(i.a)(r,(function(){var n=this,e=n._self._c;return e("transition",{attrs:{name:"sw-update-popup"}},[n.show?e("div",{staticClass:"sw-update-popup"},[n._v("\n    "+n._s(n.message)+"\n\n    "),e("br"),n._v(" "),e("button",{on:{click:n.goto}},[n._v("\n      "+n._s(n.sureButtonText)+"\n    ")]),n._v(" "),e("button",{on:{click:n.dontgoto}},[n._v("\n      "+n._s(n.cancelButtonText)+"\n    ")])]):n._e()])}),[],!1,null,"181714f2",null);e.default=a.exports},function(n,e,t){var r=t(4),i=t(3),a=t(18),o=Object,s=r("".split);n.exports=i((function(){return!o("z").propertyIsEnumerable(0)}))?function(n){return"String"==a(n)?s(n,""):o(n)}:o},function(n,e,t){var r=t(1),i=t(115),a=TypeError;n.exports=function(n){if(r(n))return n;throw a(i(n)+" is not a function")}},function(n,e){n.exports={}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,i=/^0b[01]+$/i,a=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,h=function(){return c.Date.now()};function f(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function m(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(f(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=f(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=i.test(n);return s||a.test(n)?o(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,i,a,o,s,l,c=0,u=!1,v=!1,g=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,a=i;return r=i=void 0,c=e,o=n.apply(a,t)}function y(n){return c=n,s=setTimeout(k,e),u?b(n):o}function w(n){var t=n-l;return void 0===l||t>=e||t<0||v&&n-c>=a}function k(){var n=h();if(w(n))return x(n);s=setTimeout(k,function(n){var t=e-(n-l);return v?p(t,a-(n-c)):t}(n))}function x(n){return s=void 0,g&&r?b(n):(r=i=void 0,o)}function _(){var n=h(),t=w(n);if(r=arguments,i=this,l=n,t){if(void 0===s)return y(l);if(v)return s=setTimeout(k,e),b(l)}return void 0===s&&(s=setTimeout(k,e)),o}return e=m(e)||0,f(t)&&(u=!!t.leading,a=(v="maxWait"in t)?d(m(t.maxWait)||0,e):a,g="trailing"in t?!!t.trailing:g),_.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=i=s=void 0},_.flush=function(){return void 0===s?o:x(h())},_}},function(n,e,t){var r=t(5),i=t(34),a=t(111),o=t(35),s=t(31),l=t(56),c=t(7),u=t(66),d=Object.getOwnPropertyDescriptor;e.f=r?d:function(n,e){if(n=s(n),e=l(e),u)try{return d(n,e)}catch(n){}if(c(n,e))return o(!i(a.f,n,e),n[e])}},function(n,e,t){var r=t(55),i=TypeError;n.exports=function(n){if(r(n))throw i("Can't call method on "+n);return n}},function(n,e){n.exports=function(n){return null==n}},function(n,e,t){var r=t(112),i=t(58);n.exports=function(n){var e=r(n,"string");return i(e)?e:e+""}},function(n,e){var t="object"==typeof document&&document.all,r=void 0===t&&void 0!==t;n.exports={all:t,IS_HTMLDDA:r}},function(n,e,t){var r=t(19),i=t(1),a=t(59),o=t(60),s=Object;n.exports=o?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return i(e)&&a(e.prototype,s(n))}},function(n,e,t){var r=t(4);n.exports=r({}.isPrototypeOf)},function(n,e,t){var r=t(61);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(62),i=t(3);n.exports=!!Object.getOwnPropertySymbols&&!i((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){var r,i,a=t(2),o=t(113),s=a.process,l=a.Deno,c=s&&s.versions||l&&l.version,u=c&&c.v8;u&&(i=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!i&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(i=+r[1]),n.exports=i},function(n,e,t){var r=t(64),i=t(36);(n.exports=function(n,e){return i[n]||(i[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.26.1",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e){n.exports=!1},function(n,e,t){var r=t(4),i=0,a=Math.random(),o=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++i+a,36)}},function(n,e,t){var r=t(5),i=t(3),a=t(104);n.exports=!r&&!i((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(7),i=t(123),a=t(53),o=t(13);n.exports=function(n,e,t){for(var s=i(e),l=o.f,c=a.f,u=0;u<s.length;u++){var d=s[u];r(n,d)||t&&r(t,d)||l(n,d,c(e,d))}}},function(n,e,t){var r=t(127);n.exports=function(n){var e=+n;return e!=e||0===e?0:r(e)}},function(n,e,t){var r=t(4),i=t(29),a=t(140);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return i(t),a(r),e?n(t,r):t.__proto__=r,t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,i=n.length;++t<r;)n[i+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(22),i=t(163),a=t(164),o=t(165),s=t(166),l=t(167);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=i,c.prototype.delete=a,c.prototype.get=o,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(14),i=t(40);n.exports=function(n){if(!i(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(184),i=t(12);n.exports=function n(e,t,a,o,s){return e===t||(null==e||null==t||!i(e)&&!i(t)?e!=e&&t!=t:r(e,t,a,o,n,s))}},function(n,e,t){var r=t(78),i=t(187),a=t(79);n.exports=function(n,e,t,o,s,l){var c=1&t,u=n.length,d=e.length;if(u!=d&&!(c&&d>u))return!1;var p=l.get(n),h=l.get(e);if(p&&h)return p==e&&h==n;var f=-1,m=!0,v=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++f<u;){var g=n[f],b=e[f];if(o)var y=c?o(b,g,f,e,n,l):o(g,b,f,n,e,l);if(void 0!==y){if(y)continue;m=!1;break}if(v){if(!i(e,(function(n,e){if(!a(v,e)&&(g===n||s(g,n,t,o,l)))return v.push(e)}))){m=!1;break}}else if(g!==b&&!s(g,b,t,o,l)){m=!1;break}}return l.delete(n),l.delete(e),m}},function(n,e,t){var r=t(41),i=t(185),a=t(186);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=i,o.prototype.has=a,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(197),i=t(203),a=t(84);n.exports=function(n){return a(n)?r(n):i(n)}},function(n,e,t){(function(n){var r=t(8),i=t(199),a=e&&!e.nodeType&&e,o=a&&"object"==typeof n&&n&&!n.nodeType&&n,s=o&&o.exports===a?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||i;n.exports=l}).call(this,t(51)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(200),i=t(201),a=t(202),o=a&&a.isTypedArray,s=o?i(o):r;n.exports=s},function(n,e,t){var r=t(74),i=t(43);n.exports=function(n){return null!=n&&i(n.length)&&!r(n)}},function(n,e,t){var r=t(10)(t(8),"Set");n.exports=r},function(n,e,t){var r=t(40);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(89),i=t(26);n.exports=function(n,e){for(var t=0,a=(e=r(e,n)).length;null!=n&&t<a;)n=n[i(e[t++])];return t&&t==a?n:void 0}},function(n,e,t){var r=t(6),i=t(44),a=t(214),o=t(217);n.exports=function(n,e){return r(n)?n:i(n,e)?[n]:a(o(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(150),i=t(155),a=t(226),o=t(234),s=t(243),l=t(108),c=a((function(n){var e=l(n);return s(e)&&(e=void 0),o(r(n,1,s,!0),i(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,i=r.exec(t);if(!i)return t;var a="",o=0,s=0;for(o=i.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==o&&(a+=t.substring(s,o)),s=o+1,a+=e}return s!==o?a+t.substring(s,o):a}},function(n,e,t){"use strict";
/**
 * @file Embedded JavaScript templating engine. {@link http://ejs.co}
 * @author Matthew Eernisse <mde@fleegix.org>
 * @author Tiancheng "Timothy" Gu <timothygu99@gmail.com>
 * @project EJS
 * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}
 */var r=t(254),i=t(255),a=t(256),o=!1,s=t(257).version,l=["delimiter","scope","context","debug","compileDebug","client","_with","rmWhitespace","strict","filename","async"],c=l.concat("cache"),u=/^\uFEFF/;function d(n,t){var i,a,o=t.views,s=/^[A-Za-z]+:\\|^\//.exec(n);if(s&&s.length)i=e.resolveInclude(n.replace(/^\/*/,""),t.root||"/",!0);else if(t.filename&&(a=e.resolveInclude(n,t.filename),r.existsSync(a)&&(i=a)),i||Array.isArray(o)&&o.some((function(t){return a=e.resolveInclude(n,t,!0),r.existsSync(a)}))&&(i=a),!i)throw new Error('Could not find the include file "'+t.escapeFunction(n)+'"');return i}function p(n,t){var r,i=n.filename,a=arguments.length>1;if(n.cache){if(!i)throw new Error("cache option requires a filename");if(r=e.cache.get(i))return r;a||(t=f(i).toString().replace(u,""))}else if(!a){if(!i)throw new Error("Internal EJS error: no file name or template provided");t=f(i).toString().replace(u,"")}return r=e.compile(t,n),n.cache&&e.cache.set(i,r),r}function h(n,t,r){var i;if(!r){if("function"==typeof e.promiseImpl)return new e.promiseImpl((function(e,r){try{e(i=p(n)(t))}catch(n){r(n)}}));throw new Error("Please provide a callback function")}try{i=p(n)(t)}catch(n){return r(n)}r(null,i)}function f(n){return e.fileLoader(n)}function m(n,e,t,r,i){var a=e.split("\n"),o=Math.max(r-3,0),s=Math.min(a.length,r+3),l=i(t),c=a.slice(o,s).map((function(n,e){var t=e+o+1;return(t==r?" >> ":"    ")+t+"| "+n})).join("\n");throw n.path=l,n.message=(l||"ejs")+":"+r+"\n"+c+"\n\n"+n.message,n}function v(n){return n.replace(/;(\s*$)/,"$1")}function g(n,t){t=t||{};var r={};this.templateText=n,this.mode=null,this.truncate=!1,this.currentLine=1,this.source="",this.dependencies=[],r.client=t.client||!1,r.escapeFunction=t.escape||t.escapeFunction||a.escapeXML,r.compileDebug=!1!==t.compileDebug,r.debug=!!t.debug,r.filename=t.filename,r.openDelimiter=t.openDelimiter||e.openDelimiter||"<",r.closeDelimiter=t.closeDelimiter||e.closeDelimiter||">",r.delimiter=t.delimiter||e.delimiter||"%",r.strict=t.strict||!1,r.context=t.context,r.cache=t.cache||!1,r.rmWhitespace=t.rmWhitespace,r.root=t.root,r.outputFunctionName=t.outputFunctionName,r.localsName=t.localsName||e.localsName||"locals",r.views=t.views,r.async=t.async,r.destructuredLocals=t.destructuredLocals,r.legacyInclude=void 0===t.legacyInclude||!!t.legacyInclude,r.strict?r._with=!1:r._with=void 0===t._with||t._with,this.opts=r,this.regex=this.createRegex()}e.cache=a.cache,e.fileLoader=r.readFileSync,e.localsName="locals",e.promiseImpl=new Function("return this;")().Promise,e.resolveInclude=function(n,e,t){var r=i.dirname,a=i.extname,o=(0,i.resolve)(t?e:r(e),n);return a(n)||(o+=".ejs"),o},e.compile=function(n,e){return e&&e.scope&&(o||(console.warn("`scope` option is deprecated and will be removed in EJS 3"),o=!0),e.context||(e.context=e.scope),delete e.scope),new g(n,e).compile()},e.render=function(n,e,t){var r=e||{},i=t||{};return 2==arguments.length&&a.shallowCopyFromList(i,r,l),p(i,n)(r)},e.renderFile=function(){var n,e,t,r=Array.prototype.slice.call(arguments),i=r.shift(),o={filename:i};return"function"==typeof arguments[arguments.length-1]&&(n=r.pop()),r.length?(e=r.shift(),r.length?a.shallowCopy(o,r.pop()):(e.settings&&(e.settings.views&&(o.views=e.settings.views),e.settings["view cache"]&&(o.cache=!0),(t=e.settings["view options"])&&a.shallowCopy(o,t)),a.shallowCopyFromList(o,e,c)),o.filename=i):e={},h(o,e,n)},e.Template=g,e.clearCache=function(){e.cache.reset()},g.modes={EVAL:"eval",ESCAPED:"escaped",RAW:"raw",COMMENT:"comment",LITERAL:"literal"},g.prototype={createRegex:function(){var n="(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)",e=a.escapeRegExpChars(this.opts.delimiter),t=a.escapeRegExpChars(this.opts.openDelimiter),r=a.escapeRegExpChars(this.opts.closeDelimiter);return n=n.replace(/%/g,e).replace(/</g,t).replace(/>/g,r),new RegExp(n)},compile:function(){var n,e,t,r=this.opts,o="",s="",l=r.escapeFunction;if(!this.source){if(this.generateSource(),o+='  var __output = "";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n',r.outputFunctionName&&(o+="  var "+r.outputFunctionName+" = __append;\n"),r.destructuredLocals&&r.destructuredLocals.length){for(var c="  var __locals = ("+r.localsName+" || {}),\n",u=0;u<r.destructuredLocals.length;u++){var h=r.destructuredLocals[u];u>0&&(c+=",\n  "),c+=h+" = __locals."+h}o+=c+";\n"}!1!==r._with&&(o+="  with ("+r.localsName+" || {}) {\n",s+="  }\n"),s+="  return __output;\n",this.source=o+this.source+s}n=r.compileDebug?"var __line = 1\n  , __lines = "+JSON.stringify(this.templateText)+"\n  , __filename = "+(r.filename?JSON.stringify(r.filename):"undefined")+";\ntry {\n"+this.source+"} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n":this.source,r.client&&(n="escapeFn = escapeFn || "+l.toString()+";\n"+n,r.compileDebug&&(n="rethrow = rethrow || "+m.toString()+";\n"+n)),r.strict&&(n='"use strict";\n'+n),r.debug&&console.log(n),r.compileDebug&&r.filename&&(n=n+"\n//# sourceURL="+r.filename+"\n");try{if(r.async)try{t=new Function("return (async function(){}).constructor;")()}catch(n){throw n instanceof SyntaxError?new Error("This environment does not support async/await"):n}else t=Function;e=new t(r.localsName+", escapeFn, include, rethrow",n)}catch(n){throw n instanceof SyntaxError&&(r.filename&&(n.message+=" in "+r.filename),n.message+=" while compiling ejs\n\n",n.message+="If the above error is not helpful, you may want to try EJS-Lint:\n",n.message+="https://github.com/RyanZim/EJS-Lint",r.async||(n.message+="\n",n.message+="Or, if you meant to create an async function, pass `async: true` as an option.")),n}var f=r.client?e:function(n){return e.apply(r.context,[n||{},l,function(e,t){var i=a.shallowCopy({},n);return t&&(i=a.shallowCopy(i,t)),function(n,e){var t=a.shallowCopy({},e);return t.filename=d(n,t),p(t)}(e,r)(i)},m])};if(f.dependencies=this.dependencies,r.filename&&"function"==typeof Object.defineProperty){var v=r.filename,g=i.basename(v,i.extname(v));try{Object.defineProperty(f,"name",{value:g,writable:!1,enumerable:!1,configurable:!0})}catch(n){}}return f},generateSource:function(){var n=this.opts;n.rmWhitespace&&(this.templateText=this.templateText.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),this.templateText=this.templateText.replace(/[ \t]*<%_/gm,"<%_").replace(/_%>[ \t]*/gm,"_%>");var t=this,r=this.parseTemplateText(),i=this.opts.delimiter,o=this.opts.openDelimiter,s=this.opts.closeDelimiter;r&&r.length&&r.forEach((function(l,c){var p,h,m,v,b,y;if(0===l.indexOf(o+i)&&0!==l.indexOf(o+i+i)&&(h=r[c+2])!=i+s&&h!="-"+i+s&&h!="_"+i+s)throw new Error('Could not find matching close tag for "'+l+'".');if(n.legacyInclude&&(m=l.match(/^\s*include\s+(\S+)/))&&(p=r[c-1])&&(p==o+i||p==o+i+"-"||p==o+i+"_"))return v=a.shallowCopy({},t.opts),b=function(n,e){var t,r,i=a.shallowCopy({},e);r=f(t=d(n,i)).toString().replace(u,""),i.filename=t;var o=new g(r,i);return o.generateSource(),{source:o.source,filename:t,template:r}}(m[1],v),y=t.opts.compileDebug?"    ; (function(){\n      var __line = 1\n      , __lines = "+JSON.stringify(b.template)+"\n      , __filename = "+JSON.stringify(b.filename)+";\n      try {\n"+b.source+"      } catch (e) {\n        rethrow(e, __lines, __filename, __line, escapeFn);\n      }\n    ; }).call(this)\n":"    ; (function(){\n"+b.source+"    ; }).call(this)\n",t.source+=y,void t.dependencies.push(e.resolveInclude(m[1],v.filename));t.scanLine(l)}))},parseTemplateText:function(){for(var n,e=this.templateText,t=this.regex,r=t.exec(e),i=[];r;)0!==(n=r.index)&&(i.push(e.substring(0,n)),e=e.slice(n)),i.push(r[0]),e=e.slice(r[0].length),r=t.exec(e);return e&&i.push(e),i},_addOutput:function(n){if(this.truncate&&(n=n.replace(/^(?:\r\n|\r|\n)/,""),this.truncate=!1),!n)return n;n=(n=(n=(n=n.replace(/\\/g,"\\\\")).replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/"/g,'\\"'),this.source+='    ; __append("'+n+'")\n'},scanLine:function(n){var e,t=this.opts.delimiter,r=this.opts.openDelimiter,i=this.opts.closeDelimiter;switch(e=n.split("\n").length-1,n){case r+t:case r+t+"_":this.mode=g.modes.EVAL;break;case r+t+"=":this.mode=g.modes.ESCAPED;break;case r+t+"-":this.mode=g.modes.RAW;break;case r+t+"#":this.mode=g.modes.COMMENT;break;case r+t+t:this.mode=g.modes.LITERAL,this.source+='    ; __append("'+n.replace(r+t+t,r+t)+'")\n';break;case t+t+i:this.mode=g.modes.LITERAL,this.source+='    ; __append("'+n.replace(t+t+i,t+i)+'")\n';break;case t+i:case"-"+t+i:case"_"+t+i:this.mode==g.modes.LITERAL&&this._addOutput(n),this.mode=null,this.truncate=0===n.indexOf("-")||0===n.indexOf("_");break;default:if(this.mode){switch(this.mode){case g.modes.EVAL:case g.modes.ESCAPED:case g.modes.RAW:n.lastIndexOf("//")>n.lastIndexOf("\n")&&(n+="\n")}switch(this.mode){case g.modes.EVAL:this.source+="    ; "+n+"\n";break;case g.modes.ESCAPED:this.source+="    ; __append(escapeFn("+v(n)+"))\n";break;case g.modes.RAW:this.source+="    ; __append("+v(n)+")\n";break;case g.modes.COMMENT:break;case g.modes.LITERAL:this._addOutput(n)}}else this._addOutput(n)}this.opts.compileDebug&&e&&(this.currentLine+=e,this.source+="    ; __line = "+this.currentLine+"\n")}},e.escapeXML=a.escapeXML,e.__express=e.renderFile,e.VERSION=s,e.name="ejs","undefined"!=typeof window&&(window.ejs=e)},function(n,e,t){var r;"undefined"!=typeof self&&self,r=function(){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:r})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=7)}([function(n,e,t){n.exports=!t(6)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e){n.exports=function(n,e,t,r,i){var a,o=n=n||{},s=typeof n.default;"object"!==s&&"function"!==s||(a=n,o=n.default);var l,c="function"==typeof o?o.options:o;if(e&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns),r&&(c._scopeId=r),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),t&&t.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):t&&(l=t),l){var u=c.functional,d=u?c.render:c.beforeCreate;u?c.render=function(n,e){return l.call(e),d(n,e)}:c.beforeCreate=d?[].concat(d,l):[l]}return{esModule:a,exports:o,options:c}}},function(n,e){var t=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(n,e){var t=n.exports={version:"2.5.7"};"number"==typeof __e&&(__e=t)},function(n,e,t){var r=t(23),i=t(24),a=t(26),o=Object.defineProperty;e.f=t(0)?Object.defineProperty:function(n,e,t){if(r(n),e=a(e,!0),r(t),i)try{return o(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(n[e]=t.value),n}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r,i,a;i=[e,t(8),t(11)],void 0===(a="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Tabs=n.Tab=void 0;var r=a(e),i=a(t);function a(n){return n&&n.__esModule?n:{default:n}}n.default={install:function(n){n.component("tab",r.default),n.component("tabs",i.default)}},n.Tab=r.default,n.Tabs=i.default})?r.apply(e,i):r)||(n.exports=a)},function(n,e,t){var r=t(2)(t(9),t(10),null,null,null);n.exports=r.exports},function(n,e,t){var r,i,a;i=[e],void 0===(a="function"==typeof(r=function(n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{id:{default:null},name:{required:!0},prefix:{default:""},suffix:{default:""},isDisabled:{default:!1}},data:function(){return{isActive:!1,isVisible:!0}},computed:{header:function(){return this.prefix+this.name+this.suffix},computedId:function(){return this.id?this.id:this.name.toLowerCase().replace(/ /g,"-")},hash:function(){return this.isDisabled?"#":"#"+this.computedId}}}})?r.apply(e,i):r)||(n.exports=a)},function(n,e){n.exports={render:function(){var n=this.$createElement;return(this._self._c||n)("section",{directives:[{name:"show",rawName:"v-show",value:this.isActive,expression:"isActive"}],staticClass:"tabs-component-panel",attrs:{"aria-hidden":!this.isActive,id:this.computedId,role:"tabpanel"}},[this._t("default")],2)},staticRenderFns:[]}},function(n,e,t){var r=t(2)(t(12),t(29),null,null,null);n.exports=r.exports},function(n,e,t){var r,i,a;i=[e,t(13)],void 0===(a="function"==typeof(r=function(n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t,r=(t=e)&&t.__esModule?t:{default:t};n.default={props:{cacheLifetime:{default:5},options:{type:Object,required:!1,default:function(){return{useUrlFragment:!0,defaultTabHash:null}}}},data:function(){return{tabs:[],activeTabHash:"",activeTabIndex:0,lastActiveTabHash:""}},computed:{storageKey:function(){return"vue-tabs-component.cache."+window.location.host+window.location.pathname}},created:function(){this.tabs=this.$children},mounted:function(){var n=this;if(window.addEventListener("hashchange",(function(){return n.selectTab(window.location.hash)})),this.findTab(window.location.hash))this.selectTab(window.location.hash);else{var e=r.default.get(this.storageKey);this.findTab(e)?this.selectTab(e):null!==this.options.defaultTabHash&&this.findTab("#"+this.options.defaultTabHash)?this.selectTab("#"+this.options.defaultTabHash):this.tabs.length&&this.selectTab(this.tabs[0].hash)}},methods:{findTab:function(n){return this.tabs.find((function(e){return e.hash===n}))},selectTab:function(n,e){e&&!this.options.useUrlFragment&&e.preventDefault();var t=this.findTab(n);t&&(t.isDisabled?e.preventDefault():this.lastActiveTabHash!==t.hash?(this.tabs.forEach((function(n){n.isActive=n.hash===t.hash})),this.$emit("changed",{tab:t}),this.activeTabHash=t.hash,this.activeTabIndex=this.getTabIndex(n),this.lastActiveTabHash=this.activeTabHash=t.hash,r.default.set(this.storageKey,t.hash,this.cacheLifetime)):this.$emit("clicked",{tab:t}))},setTabVisible:function(n,e){var t=this.findTab(n);t&&(t.isVisible=e,t.isActive&&(t.isActive=e,this.tabs.every((function(n,e,t){return!n.isVisible||(n.isActive=!0,!1)}))))},getTabIndex:function(n){var e=this.findTab(n);return this.tabs.indexOf(e)},getTabHash:function(n){var e=this,t=this.tabs.find((function(t){return e.tabs.indexOf(t)===n}));if(t)return t.hash},getActiveTab:function(){return this.findTab(this.activeTabHash)},getActiveTabIndex:function(){return this.getTabIndex(this.activeTabHash)}}}})?r.apply(e,i):r)||(n.exports=a)},function(n,e,t){var r,i,a;i=[e,t(14),t(15)],void 0===(a="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=a(e),i=a(t);function a(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(){(0,r.default)(this,n)}return(0,i.default)(n,[{key:"get",value:function(n){var e=JSON.parse(localStorage.getItem(n));return e?new Date(e.expires)<new Date?(localStorage.removeItem(n),null):e.value:null}},{key:"set",value:function(n,e,t){var r=(new Date).getTime(),i=new Date(r+6e4*t);localStorage.setItem(n,JSON.stringify({value:e,expires:i}))}}]),n}();n.default=new o})?r.apply(e,i):r)||(n.exports=a)},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}},function(n,e,t){"use strict";e.__esModule=!0;var r,i=t(16),a=(r=i)&&r.__esModule?r:{default:r};e.default=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,a.default)(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}()},function(n,e,t){n.exports={default:t(17),__esModule:!0}},function(n,e,t){t(18);var r=t(4).Object;n.exports=function(n,e,t){return r.defineProperty(n,e,t)}},function(n,e,t){var r=t(19);r(r.S+r.F*!t(0),"Object",{defineProperty:t(5).f})},function(n,e,t){var r=t(3),i=t(4),a=t(20),o=t(22),s=t(28),l=function(n,e,t){var c,u,d,p=n&l.F,h=n&l.G,f=n&l.S,m=n&l.P,v=n&l.B,g=n&l.W,b=h?i:i[e]||(i[e]={}),y=b.prototype,w=h?r:f?r[e]:(r[e]||{}).prototype;for(c in h&&(t=e),t)(u=!p&&w&&void 0!==w[c])&&s(b,c)||(d=u?w[c]:t[c],b[c]=h&&"function"!=typeof w[c]?t[c]:v&&u?a(d,r):g&&w[c]==d?function(n){var e=function(e,t,r){if(this instanceof n){switch(arguments.length){case 0:return new n;case 1:return new n(e);case 2:return new n(e,t)}return new n(e,t,r)}return n.apply(this,arguments)};return e.prototype=n.prototype,e}(d):m&&"function"==typeof d?a(Function.call,d):d,m&&((b.virtual||(b.virtual={}))[c]=d,n&l.R&&y&&!y[c]&&o(y,c,d)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,n.exports=l},function(n,e,t){var r=t(21);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,i){return n.call(e,t,r,i)}}return function(){return n.apply(e,arguments)}}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},function(n,e,t){var r=t(5),i=t(27);n.exports=t(0)?function(n,e,t){return r.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(1);n.exports=function(n){if(!r(n))throw TypeError(n+" is not an object!");return n}},function(n,e,t){n.exports=!t(0)&&!t(6)((function(){return 7!=Object.defineProperty(t(25)("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(1),i=t(3).document,a=r(i)&&r(i.createElement);n.exports=function(n){return a?i.createElement(n):{}}},function(n,e,t){var r=t(1);n.exports=function(n,e){if(!r(n))return n;var t,i;if(e&&"function"==typeof(t=n.toString)&&!r(i=t.call(n)))return i;if("function"==typeof(t=n.valueOf)&&!r(i=t.call(n)))return i;if(!e&&"function"==typeof(t=n.toString)&&!r(i=t.call(n)))return i;throw TypeError("Can't convert object to primitive value")}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e){n.exports={render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"tabs-component"},[t("ul",{staticClass:"tabs-component-tabs",attrs:{role:"tablist"}},n._l(n.tabs,(function(e,r){return t("li",{directives:[{name:"show",rawName:"v-show",value:e.isVisible,expression:"tab.isVisible"}],key:r,staticClass:"tabs-component-tab",class:{"is-active":e.isActive,"is-disabled":e.isDisabled},attrs:{role:"presentation"}},[t("a",{staticClass:"tabs-component-tab-a",attrs:{"aria-controls":e.hash,"aria-selected":e.isActive,href:e.hash,role:"tab"},domProps:{innerHTML:n._s(e.header)},on:{click:function(t){n.selectTab(e.hash,t)}}})])}))),n._v(" "),t("div",{staticClass:"tabs-component-panels"},[n._t("default")],2)])},staticRenderFns:[]}}])},n.exports=r()},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},i=(t(248),t(0)),a=Object(i.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=a.exports},function(n,e,t){"use strict";t.r(e);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},i=(t(249),t(0)),a=Object(i.a)(r,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,r){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=a.exports},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var r=t(2),i=t(9),a=r.document,o=i(a)&&i(a.createElement);n.exports=function(n){return o?a.createElement(n):{}}},function(n,e,t){var r=t(5),i=t(3);n.exports=r&&i((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var r=t(63),i=t(65),a=r("keys");n.exports=function(n){return a[n]||(a[n]=i(n))}},function(n,e,t){var r=t(4),i=t(7),a=t(31),o=t(125).indexOf,s=t(50),l=r([].push);n.exports=function(n,e){var t,r=a(n),c=0,u=[];for(t in r)!i(s,t)&&i(r,t)&&l(u,t);for(;e.length>c;)i(r,t=e[c++])&&(~o(u,t)||l(u,t));return u}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(262)},function(n,e,t){"use strict";var r=t(17),i=t(131).left,a=t(132),o=t(62),s=t(133);r({target:"Array",proto:!0,forced:!a("reduce")||!s&&o>79&&o<83},{reduce:function(n){var e=arguments.length;return i(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,a=i&&!r.call({1:2},1);e.f=a?function(n){var e=i(this,n);return!!e&&e.enumerable}:r},function(n,e,t){var r=t(34),i=t(9),a=t(58),o=t(114),s=t(116),l=t(20),c=TypeError,u=l("toPrimitive");n.exports=function(n,e){if(!i(n)||a(n))return n;var t,l=o(n,u);if(l){if(void 0===e&&(e="default"),t=r(l,n,e),!i(t)||a(t))return t;throw c("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){var r=t(19);n.exports=r("navigator","userAgent")||""},function(n,e,t){var r=t(49),i=t(55);n.exports=function(n,e){var t=n[e];return i(t)?void 0:r(t)}},function(n,e){var t=String;n.exports=function(n){try{return t(n)}catch(n){return"Object"}}},function(n,e,t){var r=t(34),i=t(1),a=t(9),o=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&i(t=n.toString)&&!a(s=r(t,n)))return s;if(i(t=n.valueOf)&&!a(s=r(t,n)))return s;if("string"!==e&&i(t=n.toString)&&!a(s=r(t,n)))return s;throw o("Can't convert object to primitive value")}},function(n,e,t){var r=t(1),i=t(13),a=t(118),o=t(37);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:e;if(r(t)&&a(t,c,s),s.global)l?n[e]=t:o(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:i.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){var r=t(3),i=t(1),a=t(7),o=t(5),s=t(119).CONFIGURABLE,l=t(120),c=t(121),u=c.enforce,d=c.get,p=Object.defineProperty,h=o&&!r((function(){return 8!==p((function(){}),"length",{value:8}).length})),f=String(String).split("String"),m=n.exports=function(n,e,t){"Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!a(n,"name")||s&&n.name!==e)&&(o?p(n,"name",{value:e,configurable:!0}):n.name=e),h&&t&&a(t,"arity")&&n.length!==t.arity&&p(n,"length",{value:t.arity});try{t&&a(t,"constructor")&&t.constructor?o&&p(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var r=u(n);return a(r,"source")||(r.source=f.join("string"==typeof e?e:"")),n};Function.prototype.toString=m((function(){return i(this)&&d(this).source||l(this)}),"toString")},function(n,e,t){var r=t(5),i=t(7),a=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,s=i(a,"name"),l=s&&"something"===function(){}.name,c=s&&(!r||r&&o(a,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){var r=t(4),i=t(1),a=t(36),o=r(Function.toString);i(a.inspectSource)||(a.inspectSource=function(n){return o(n)}),n.exports=a.inspectSource},function(n,e,t){var r,i,a,o=t(122),s=t(2),l=t(9),c=t(21),u=t(7),d=t(36),p=t(106),h=t(50),f=s.TypeError,m=s.WeakMap;if(o||d.state){var v=d.state||(d.state=new m);v.get=v.get,v.has=v.has,v.set=v.set,r=function(n,e){if(v.has(n))throw f("Object already initialized");return e.facade=n,v.set(n,e),e},i=function(n){return v.get(n)||{}},a=function(n){return v.has(n)}}else{var g=p("state");h[g]=!0,r=function(n,e){if(u(n,g))throw f("Object already initialized");return e.facade=n,c(n,g,e),e},i=function(n){return u(n,g)?n[g]:{}},a=function(n){return u(n,g)}}n.exports={set:r,get:i,has:a,enforce:function(n){return a(n)?i(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=i(e)).type!==n)throw f("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var r=t(2),i=t(1),a=r.WeakMap;n.exports=i(a)&&/native code/.test(String(a))},function(n,e,t){var r=t(19),i=t(4),a=t(124),o=t(129),s=t(29),l=i([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=a.f(s(n)),t=o.f;return t?l(e,t(n)):e}},function(n,e,t){var r=t(107),i=t(103).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,i)}},function(n,e,t){var r=t(31),i=t(126),a=t(33),o=function(n){return function(e,t,o){var s,l=r(e),c=a(l),u=i(o,c);if(n&&t!=t){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((n||u in l)&&l[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e,t){var r=t(68),i=Math.max,a=Math.min;n.exports=function(n,e){var t=r(n);return t<0?i(t+e,0):a(t,e)}},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?r:t)(e)}},function(n,e,t){var r=t(68),i=Math.min;n.exports=function(n){return n>0?i(r(n),9007199254740991):0}},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(3),i=t(1),a=/#|\.prototype\./,o=function(n,e){var t=l[s(n)];return t==u||t!=c&&(i(e)?r(e):!!e)},s=o.normalize=function(n){return String(n).replace(a,".").toLowerCase()},l=o.data={},c=o.NATIVE="N",u=o.POLYFILL="P";n.exports=o},function(n,e,t){var r=t(49),i=t(32),a=t(48),o=t(33),s=TypeError,l=function(n){return function(e,t,l,c){r(t);var u=i(e),d=a(u),p=o(u),h=n?p-1:0,f=n?-1:1;if(l<2)for(;;){if(h in d){c=d[h],h+=f;break}if(h+=f,n?h<0:p<=h)throw s("Reduce of empty array with no initial value")}for(;n?h>=0:p>h;h+=f)h in d&&(c=t(c,d[h],h,u));return c}};n.exports={left:l(!1),right:l(!0)}},function(n,e,t){"use strict";var r=t(3);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){var r=t(18),i=t(2);n.exports="process"==r(i.process)},function(n,e,t){"use strict";var r=t(5),i=t(135),a=TypeError,o=Object.getOwnPropertyDescriptor,s=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=s?function(n,e){if(i(n)&&!o(n,"length").writable)throw a("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){var r=t(18);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e){var t=TypeError;n.exports=function(n){if(n>9007199254740991)throw t("Maximum allowed index exceeded");return n}},function(n,e,t){var r=t(17),i=t(2),a=t(138),o=t(139),s=i.WebAssembly,l=7!==Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=o(n,e,l),r({global:!0,constructor:!0,arity:1,forced:l},t)},u=function(n,e){if(s&&s[n]){var t={};t[n]=o("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return a(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return a(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return a(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return a(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return a(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return a(n,this,arguments)}})),c("URIError",(function(n){return function(e){return a(n,this,arguments)}})),u("CompileError",(function(n){return function(e){return a(n,this,arguments)}})),u("LinkError",(function(n){return function(e){return a(n,this,arguments)}})),u("RuntimeError",(function(n){return function(e){return a(n,this,arguments)}}))},function(n,e,t){var r=t(30),i=Function.prototype,a=i.apply,o=i.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(a):function(){return o.apply(a,arguments)})},function(n,e,t){"use strict";var r=t(19),i=t(7),a=t(21),o=t(59),s=t(69),l=t(67),c=t(141),u=t(142),d=t(143),p=t(147),h=t(148),f=t(149),m=t(5),v=t(64);n.exports=function(n,e,t,g){var b=g?2:1,y=n.split("."),w=y[y.length-1],k=r.apply(null,y);if(k){var x=k.prototype;if(!v&&i(x,"cause")&&delete x.cause,!t)return k;var _=r("Error"),T=e((function(n,e){var t=d(g?e:n,void 0),r=g?new k(n):new k;return void 0!==t&&a(r,"message",t),f&&a(r,"stack",h(r.stack,2)),this&&o(x,this)&&u(r,this,T),arguments.length>b&&p(r,arguments[b]),r}));if(T.prototype=x,"Error"!==w?s?s(T,_):l(T,_,{name:!0}):m&&"stackTraceLimit"in k&&(c(T,k,"stackTraceLimit"),c(T,k,"prepareStackTrace")),l(T,k),!v)try{x.name!==w&&a(x,"name",w),x.constructor=T}catch(n){}return T}}},function(n,e,t){var r=t(1),i=String,a=TypeError;n.exports=function(n){if("object"==typeof n||r(n))return n;throw a("Can't set "+i(n)+" as a prototype")}},function(n,e,t){var r=t(13).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){var r=t(1),i=t(9),a=t(69);n.exports=function(n,e,t){var o,s;return a&&r(o=e.constructor)&&o!==t&&i(s=o.prototype)&&s!==t.prototype&&a(n,s),n}},function(n,e,t){var r=t(144);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){var r=t(145),i=String;n.exports=function(n){if("Symbol"===r(n))throw TypeError("Cannot convert a Symbol value to a string");return i(n)}},function(n,e,t){var r=t(146),i=t(1),a=t(18),o=t(20)("toStringTag"),s=Object,l="Arguments"==a(function(){return arguments}());n.exports=r?a:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),o))?t:l?a(e):"Object"==(r=a(e))&&i(e.callee)?"Arguments":r}},function(n,e,t){var r={};r[t(20)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){var r=t(9),i=t(21);n.exports=function(n,e){r(e)&&"cause"in e&&i(n,"cause",e.cause)}},function(n,e,t){var r=t(4),i=Error,a=r("".replace),o=String(i("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(o);n.exports=function(n,e){if(l&&"string"==typeof n&&!i.prepareStackTrace)for(;e--;)n=a(n,s,"");return n}},function(n,e,t){var r=t(3),i=t(35);n.exports=!r((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",i(1,7)),7!==n.stack)}))},function(n,e,t){var r=t(70),i=t(151);n.exports=function n(e,t,a,o,s){var l=-1,c=e.length;for(a||(a=i),s||(s=[]);++l<c;){var u=e[l];t>0&&a(u)?t>1?n(u,t-1,a,o,s):r(s,u):o||(s[s.length]=u)}return s}},function(n,e,t){var r=t(15),i=t(38),a=t(6),o=r?r.isConcatSpreadable:void 0;n.exports=function(n){return a(n)||i(n)||!!(o&&n&&n[o])}},function(n,e,t){var r=t(14),i=t(12);n.exports=function(n){return i(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(15),i=Object.prototype,a=i.hasOwnProperty,o=i.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=a.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var i=o.call(n);return r&&(e?n[s]=t:delete n[s]),i}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(156),i=t(212),a=t(46),o=t(6),s=t(223);n.exports=function(n){return"function"==typeof n?n:null==n?a:"object"==typeof n?o(n)?i(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(157),i=t(211),a=t(87);n.exports=function(n){var e=i(n);return 1==e.length&&e[0][2]?a(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(72),i=t(76);n.exports=function(n,e,t,a){var o=t.length,s=o,l=!a;if(null==n)return!s;for(n=Object(n);o--;){var c=t[o];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++o<s;){var u=(c=t[o])[0],d=n[u],p=c[1];if(l&&c[2]){if(void 0===d&&!(u in n))return!1}else{var h=new r;if(a)var f=a(d,p,u,n,e,h);if(!(void 0===f?i(p,d,3,a,h):f))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(23),i=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():i.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(23);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(23);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(23);n.exports=function(n,e){var t=this.__data__,i=r(t,n);return i<0?(++this.size,t.push([n,e])):t[i][1]=e,this}},function(n,e,t){var r=t(22);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(22),i=t(39),a=t(41);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var o=t.__data__;if(!i||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new a(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(74),i=t(169),a=t(40),o=t(75),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!a(n)||i(n))&&(r(n)?p:s).test(o(n))}},function(n,e,t){var r,i=t(170),a=(r=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!a&&a in n}},function(n,e,t){var r=t(8)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(173),i=t(22),a=t(39);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||i),string:new r}}},function(n,e,t){var r=t(174),i=t(175),a=t(176),o=t(177),s=t(178);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=o,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(24);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(24),i=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return i.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(24),i=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:i.call(e,n)}},function(n,e,t){var r=t(24);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(25);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(25);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(25);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(25);n.exports=function(n,e){var t=r(this,n),i=t.size;return t.set(n,e),this.size+=t.size==i?0:1,this}},function(n,e,t){var r=t(72),i=t(77),a=t(188),o=t(191),s=t(207),l=t(6),c=t(81),u=t(83),d="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,h,f,m){var v=l(n),g=l(e),b=v?"[object Array]":s(n),y=g?"[object Array]":s(e),w=(b="[object Arguments]"==b?d:b)==d,k=(y="[object Arguments]"==y?d:y)==d,x=b==y;if(x&&c(n)){if(!c(e))return!1;v=!0,w=!1}if(x&&!w)return m||(m=new r),v||u(n)?i(n,e,t,h,f,m):a(n,e,b,t,h,f,m);if(!(1&t)){var _=w&&p.call(n,"__wrapped__"),T=k&&p.call(e,"__wrapped__");if(_||T){var S=_?n.value():n,E=T?e.value():e;return m||(m=new r),f(S,E,t,h,m)}}return!!x&&(m||(m=new r),o(n,e,t,h,f,m))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(15),i=t(189),a=t(73),o=t(77),s=t(190),l=t(42),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,d,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!d(new i(n),new i(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var h=s;case"[object Set]":var f=1&r;if(h||(h=l),n.size!=e.size&&!f)return!1;var m=p.get(n);if(m)return m==e;r|=2,p.set(n,e);var v=o(h(n),h(e),r,c,d,p);return p.delete(n),v;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var r=t(8).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(192),i=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,a,o,s){var l=1&t,c=r(n),u=c.length;if(u!=r(e).length&&!l)return!1;for(var d=u;d--;){var p=c[d];if(!(l?p in e:i.call(e,p)))return!1}var h=s.get(n),f=s.get(e);if(h&&f)return h==e&&f==n;var m=!0;s.set(n,e),s.set(e,n);for(var v=l;++d<u;){var g=n[p=c[d]],b=e[p];if(a)var y=l?a(b,g,p,e,n,s):a(g,b,p,n,e,s);if(!(void 0===y?g===b||o(g,b,t,a,s):y)){m=!1;break}v||(v="constructor"==p)}if(m&&!v){var w=n.constructor,k=e.constructor;w==k||!("constructor"in n)||!("constructor"in e)||"function"==typeof w&&w instanceof w&&"function"==typeof k&&k instanceof k||(m=!1)}return s.delete(n),s.delete(e),m}},function(n,e,t){var r=t(193),i=t(194),a=t(80);n.exports=function(n){return r(n,a,i)}},function(n,e,t){var r=t(70),i=t(6);n.exports=function(n,e,t){var a=e(n);return i(n)?a:r(a,t(n))}},function(n,e,t){var r=t(195),i=t(196),a=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(n){return null==n?[]:(n=Object(n),r(o(n),(function(e){return a.call(n,e)})))}:i;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,i=0,a=[];++t<r;){var o=n[t];e(o,t,n)&&(a[i++]=o)}return a}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(198),i=t(38),a=t(6),o=t(81),s=t(82),l=t(83),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=a(n),u=!t&&i(n),d=!t&&!u&&o(n),p=!t&&!u&&!d&&l(n),h=t||u||d||p,f=h?r(n.length,String):[],m=f.length;for(var v in n)!e&&!c.call(n,v)||h&&("length"==v||d&&("offset"==v||"parent"==v)||p&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,m))||f.push(v);return f}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(14),i=t(43),a=t(12),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return a(n)&&i(n.length)&&!!o[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(71),i=e&&!e.nodeType&&e,a=i&&"object"==typeof n&&n&&!n.nodeType&&n,o=a&&a.exports===i&&r.process,s=function(){try{var n=a&&a.require&&a.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=s}).call(this,t(51)(n))},function(n,e,t){var r=t(204),i=t(205),a=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return i(n);var e=[];for(var t in Object(n))a.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(206)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(208),i=t(39),a=t(209),o=t(85),s=t(210),l=t(14),c=t(75),u=c(r),d=c(i),p=c(a),h=c(o),f=c(s),m=l;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||i&&"[object Map]"!=m(new i)||a&&"[object Promise]"!=m(a.resolve())||o&&"[object Set]"!=m(new o)||s&&"[object WeakMap]"!=m(new s))&&(m=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case h:return"[object Set]";case f:return"[object WeakMap]"}return e}),n.exports=m},function(n,e,t){var r=t(10)(t(8),"DataView");n.exports=r},function(n,e,t){var r=t(10)(t(8),"Promise");n.exports=r},function(n,e,t){var r=t(10)(t(8),"WeakMap");n.exports=r},function(n,e,t){var r=t(86),i=t(80);n.exports=function(n){for(var e=i(n),t=e.length;t--;){var a=e[t],o=n[a];e[t]=[a,o,r(o)]}return e}},function(n,e,t){var r=t(76),i=t(213),a=t(220),o=t(44),s=t(86),l=t(87),c=t(26);n.exports=function(n,e){return o(n)&&s(e)?l(c(n),e):function(t){var o=i(t,n);return void 0===o&&o===e?a(t,n):r(e,o,3)}}},function(n,e,t){var r=t(88);n.exports=function(n,e,t){var i=null==n?void 0:r(n,e);return void 0===i?t:i}},function(n,e,t){var r=t(215),i=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,o=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(i,(function(n,t,r,i){e.push(r?i.replace(a,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var r=t(216);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(41);function i(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,i=e?e.apply(this,r):r[0],a=t.cache;if(a.has(i))return a.get(i);var o=n.apply(this,r);return t.cache=a.set(i,o)||a,o};return t.cache=new(i.Cache||r),t}i.Cache=r,n.exports=i},function(n,e,t){var r=t(218);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(15),i=t(219),a=t(6),o=t(45),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(a(e))return i(e,n)+"";if(o(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,i=Array(r);++t<r;)i[t]=e(n[t],t,n);return i}},function(n,e,t){var r=t(221),i=t(222);n.exports=function(n,e){return null!=n&&i(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(89),i=t(38),a=t(6),o=t(82),s=t(43),l=t(26);n.exports=function(n,e,t){for(var c=-1,u=(e=r(e,n)).length,d=!1;++c<u;){var p=l(e[c]);if(!(d=null!=n&&t(n,p)))break;n=n[p]}return d||++c!=u?d:!!(u=null==n?0:n.length)&&s(u)&&o(p,u)&&(a(n)||i(n))}},function(n,e,t){var r=t(224),i=t(225),a=t(44),o=t(26);n.exports=function(n){return a(n)?r(o(n)):i(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(88);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(46),i=t(227),a=t(229);n.exports=function(n,e){return a(i(n,e,r),n+"")}},function(n,e,t){var r=t(228),i=Math.max;n.exports=function(n,e,t){return e=i(void 0===e?n.length-1:e,0),function(){for(var a=arguments,o=-1,s=i(a.length-e,0),l=Array(s);++o<s;)l[o]=a[e+o];o=-1;for(var c=Array(e+1);++o<e;)c[o]=a[o];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(230),i=t(233)(r);n.exports=i},function(n,e,t){var r=t(231),i=t(232),a=t(46),o=i?function(n,e){return i(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:a;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(10),i=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=i},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var i=t(),a=16-(i-r);if(r=i,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(78),i=t(235),a=t(240),o=t(79),s=t(241),l=t(42);n.exports=function(n,e,t){var c=-1,u=i,d=n.length,p=!0,h=[],f=h;if(t)p=!1,u=a;else if(d>=200){var m=e?null:s(n);if(m)return l(m);p=!1,u=o,f=new r}else f=e?[]:h;n:for(;++c<d;){var v=n[c],g=e?e(v):v;if(v=t||0!==v?v:0,p&&g==g){for(var b=f.length;b--;)if(f[b]===g)continue n;e&&f.push(g),h.push(v)}else u(f,g,t)||(f!==h&&f.push(g),h.push(v))}return h}},function(n,e,t){var r=t(236);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(237),i=t(238),a=t(239);n.exports=function(n,e,t){return e==e?a(n,e,t):r(n,i,t)}},function(n,e){n.exports=function(n,e,t,r){for(var i=n.length,a=t+(r?1:-1);r?a--:++a<i;)if(e(n[a],a,n))return a;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,i=n.length;++r<i;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,i=null==n?0:n.length;++r<i;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(85),i=t(242),a=t(42),o=r&&1/a(new r([,-0]))[1]==1/0?function(n){return new r(n)}:i;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(84),i=t(12);n.exports=function(n){return i(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(90)},function(n,e,t){},function(n,e,t){"use strict";t(91)},function(n,e,t){"use strict";t(92)},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(17),i=t(2),a=t(253);r({global:!0},{Reflect:{}}),a(i.Reflect,"Reflect",!0)},function(n,e,t){var r=t(13).f,i=t(7),a=t(20)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!i(n,a)&&r(n,a,{configurable:!0,value:e})}},function(n,e){},function(n,e){function t(n,e){for(var t=0,r=n.length-1;r>=0;r--){var i=n[r];"."===i?n.splice(r,1):".."===i?(n.splice(r,1),t++):t&&(n.splice(r,1),t--)}if(e)for(;t--;t)n.unshift("..");return n}function r(n,e){if(n.filter)return n.filter(e);for(var t=[],r=0;r<n.length;r++)e(n[r],r,n)&&t.push(n[r]);return t}e.resolve=function(){for(var n="",e=!1,i=arguments.length-1;i>=-1&&!e;i--){var a=i>=0?arguments[i]:process.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(n=a+"/"+n,e="/"===a.charAt(0))}return(e?"/":"")+(n=t(r(n.split("/"),(function(n){return!!n})),!e).join("/"))||"."},e.normalize=function(n){var a=e.isAbsolute(n),o="/"===i(n,-1);return(n=t(r(n.split("/"),(function(n){return!!n})),!a).join("/"))||a||(n="."),n&&o&&(n+="/"),(a?"/":"")+n},e.isAbsolute=function(n){return"/"===n.charAt(0)},e.join=function(){var n=Array.prototype.slice.call(arguments,0);return e.normalize(r(n,(function(n,e){if("string"!=typeof n)throw new TypeError("Arguments to path.join must be strings");return n})).join("/"))},e.relative=function(n,t){function r(n){for(var e=0;e<n.length&&""===n[e];e++);for(var t=n.length-1;t>=0&&""===n[t];t--);return e>t?[]:n.slice(e,t-e+1)}n=e.resolve(n).substr(1),t=e.resolve(t).substr(1);for(var i=r(n.split("/")),a=r(t.split("/")),o=Math.min(i.length,a.length),s=o,l=0;l<o;l++)if(i[l]!==a[l]){s=l;break}var c=[];for(l=s;l<i.length;l++)c.push("..");return(c=c.concat(a.slice(s))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(n){if("string"!=typeof n&&(n+=""),0===n.length)return".";for(var e=n.charCodeAt(0),t=47===e,r=-1,i=!0,a=n.length-1;a>=1;--a)if(47===(e=n.charCodeAt(a))){if(!i){r=a;break}}else i=!1;return-1===r?t?"/":".":t&&1===r?"/":n.slice(0,r)},e.basename=function(n,e){var t=function(n){"string"!=typeof n&&(n+="");var e,t=0,r=-1,i=!0;for(e=n.length-1;e>=0;--e)if(47===n.charCodeAt(e)){if(!i){t=e+1;break}}else-1===r&&(i=!1,r=e+1);return-1===r?"":n.slice(t,r)}(n);return e&&t.substr(-1*e.length)===e&&(t=t.substr(0,t.length-e.length)),t},e.extname=function(n){"string"!=typeof n&&(n+="");for(var e=-1,t=0,r=-1,i=!0,a=0,o=n.length-1;o>=0;--o){var s=n.charCodeAt(o);if(47!==s)-1===r&&(i=!1,r=o+1),46===s?-1===e?e=o:1!==a&&(a=1):-1!==e&&(a=-1);else if(!i){t=o+1;break}}return-1===e||-1===r||0===a||1===a&&e===r-1&&e===t+1?"":n.slice(e,r)};var i="b"==="ab".substr(-1)?function(n,e,t){return n.substr(e,t)}:function(n,e,t){return e<0&&(e=n.length+e),n.substr(e,t)}},function(n,e,t){"use strict";var r=/[|\\{}()[\]^$+*?.]/g;e.escapeRegExpChars=function(n){return n?String(n).replace(r,"\\$&"):""};var i={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},a=/[&<>'"]/g;function o(n){return i[n]||n}e.escapeXML=function(n){return null==n?"":String(n).replace(a,o)},e.escapeXML.toString=function(){return Function.prototype.toString.call(this)+';\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n'},e.shallowCopy=function(n,e){for(var t in e=e||{})n[t]=e[t];return n},e.shallowCopyFromList=function(n,e,t){for(var r=0;r<t.length;r++){var i=t[r];void 0!==e[i]&&(n[i]=e[i])}return n},e.cache={_data:{},set:function(n,e){this._data[n]=e},get:function(n){return this._data[n]},remove:function(n){delete this._data[n]},reset:function(){this._data={}}}},function(n){n.exports=JSON.parse('{"_from":"ejs@^2.6.1","_id":"ejs@2.7.4","_inBundle":false,"_integrity":"sha512-7vmuyh5+kuUyJKePhQfRQBhXV5Ce+RnaeeQArKu1EAMpL3WbgMt5WG6uQZpEVvYSSsxMXRKOewtDk9RaTKXRlA==","_location":"/ejs","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"ejs@^2.6.1","name":"ejs","escapedName":"ejs","rawSpec":"^2.6.1","saveSpec":null,"fetchSpec":"^2.6.1"},"_requiredBy":["/vuepress-plugin-comment","/vuepress-plugin-vdoing-comment"],"_resolved":"https://registry.npmjs.org/ejs/-/ejs-2.7.4.tgz","_shasum":"48661287573dcc53e366c7a1ae52c3a120eec9ba","_spec":"ejs@^2.6.1","_where":"/home/runner/work/fanties.github.io/fanties.github.io/node_modules/vuepress-plugin-comment","author":{"name":"Matthew Eernisse","email":"mde@fleegix.org","url":"http://fleegix.org"},"bugs":{"url":"https://github.com/mde/ejs/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Embedded JavaScript templates","devDependencies":{"browserify":"^13.1.1","eslint":"^4.14.0","git-directory-deploy":"^1.5.1","jake":"^10.3.1","jsdoc":"^3.4.0","lru-cache":"^4.0.1","mocha":"^5.0.5","uglify-js":"^3.3.16"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/mde/ejs","keywords":["template","engine","ejs"],"license":"Apache-2.0","main":"./lib/ejs.js","name":"ejs","repository":{"type":"git","url":"git://github.com/mde/ejs.git"},"scripts":{"postinstall":"node ./postinstall.js","test":"mocha"},"version":"2.7.4"}')},function(n,e,t){"use strict";t(93)},function(n,e,t){"use strict";t(94)},function(n,e,t){"use strict";t(95)},function(n,e,t){"use strict";t(96)},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.7.14
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({}),i=Array.isArray;function a(n){return null==n}function o(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function u(n){return null!==n&&"object"==typeof n}var d=Object.prototype.toString;function p(n){return"[object Object]"===d.call(n)}function h(n){return"[object RegExp]"===d.call(n)}function f(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function v(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===d?JSON.stringify(n,null,2):String(n)}function g(n){var e=parseFloat(n);return isNaN(e)?n:e}function b(n,e){for(var t=Object.create(null),r=n.split(","),i=0;i<r.length;i++)t[r[i]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}b("slot,component",!0);var y=b("key,ref,slot,slot-scope,is");function w(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var r=n.indexOf(e);if(r>-1)return n.splice(r,1)}}var k=Object.prototype.hasOwnProperty;function x(n,e){return k.call(n,e)}function _(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var T=/-(\w)/g,S=_((function(n){return n.replace(T,(function(n,e){return e?e.toUpperCase():""}))})),E=_((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),C=/\B([A-Z])/g,A=_((function(n){return n.replace(C,"-$1").toLowerCase()}));var j=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function I(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function P(n,e){for(var t in e)n[t]=e[t];return n}function O(n){for(var e={},t=0;t<n.length;t++)n[t]&&P(e,n[t]);return e}function B(n,e,t){}var z=function(n,e,t){return!1},D=function(n){return n};function M(n,e){if(n===e)return!0;var t=u(n),r=u(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var i=Array.isArray(n),a=Array.isArray(e);if(i&&a)return n.length===e.length&&n.every((function(n,t){return M(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(i||a)return!1;var o=Object.keys(n),s=Object.keys(e);return o.length===s.length&&o.every((function(t){return M(n[t],e[t])}))}catch(n){return!1}}function $(n,e){for(var t=0;t<n.length;t++)if(M(n[t],e))return t;return-1}function R(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function L(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var N=["component","directive","filter"],U=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:z,isReservedAttr:z,isUnknownElement:z,getTagNamespace:B,parsePlatformTagName:D,mustUseProp:z,async:!0,_lifecycleHooks:U},J=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function V(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function q(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(J.source,".$_\\d]"));var G="__proto__"in{},H="undefined"!=typeof window,Q=H&&window.navigator.userAgent.toLowerCase(),K=Q&&/msie|trident/.test(Q),Z=Q&&Q.indexOf("msie 9.0")>0,X=Q&&Q.indexOf("edge/")>0;Q&&Q.indexOf("android");var Y=Q&&/iphone|ipad|ipod|ios/.test(Q);Q&&/chrome\/\d+/.test(Q),Q&&/phantomjs/.test(Q);var nn,en=Q&&Q.match(/firefox\/(\d+)/),tn={}.watch,rn=!1;if(H)try{var an={};Object.defineProperty(an,"passive",{get:function(){rn=!0}}),window.addEventListener("test-passive",null,an)}catch(vl){}var on=function(){return void 0===nn&&(nn=!H&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),nn},sn=H&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ln(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,un="undefined"!=typeof Symbol&&ln(Symbol)&&"undefined"!=typeof Reflect&&ln(Reflect.ownKeys);cn="undefined"!=typeof Set&&ln(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var dn=null;function pn(n){void 0===n&&(n=null),n||dn&&dn._scope.off(),dn=n,n&&n._scope.on()}var hn=function(){function n(n,e,t,r,i,a,o,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=i,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),fn=function(n){void 0===n&&(n="");var e=new hn;return e.text=n,e.isComment=!0,e};function mn(n){return new hn(void 0,void 0,void 0,String(n))}function vn(n){var e=new hn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var gn=0,bn=[],yn=function(){function n(){this._pending=!1,this.id=gn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,bn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,r=e.length;t<r;t++){0,e[t].update()}},n}();yn.target=null;var wn=[];function kn(n){wn.push(n),yn.target=n}function xn(){wn.pop(),yn.target=wn[wn.length-1]}var _n=Array.prototype,Tn=Object.create(_n);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=_n[n];q(Tn,n,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var i,a=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":i=t;break;case"splice":i=t.slice(2)}return i&&o.observeArray(i),o.dep.notify(),a}))}));var Sn=Object.getOwnPropertyNames(Tn),En={},Cn=!0;function An(n){Cn=n}var jn={notify:B,depend:B,addSub:B,removeSub:B},In=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?jn:new yn,this.vmCount=0,q(n,"__ob__",this),i(n)){if(!t)if(G)n.__proto__=Tn;else for(var r=0,a=Sn.length;r<a;r++){q(n,s=Sn[r],Tn[s])}e||this.observeArray(n)}else{var o=Object.keys(n);for(r=0;r<o.length;r++){var s;On(n,s=o[r],En,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Pn(n[e],!1,this.mock)},n}();function Pn(n,e,t){return n&&x(n,"__ob__")&&n.__ob__ instanceof In?n.__ob__:!Cn||!t&&on()||!i(n)&&!p(n)||!Object.isExtensible(n)||n.__v_skip||Ln(n)||n instanceof hn?void 0:new In(n,e,t)}function On(n,e,t,r,a,o){var s=new yn,l=Object.getOwnPropertyDescriptor(n,e);if(!l||!1!==l.configurable){var c=l&&l.get,u=l&&l.set;c&&!u||t!==En&&2!==arguments.length||(t=n[e]);var d=!a&&Pn(t,!1,o);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=c?c.call(n):t;return yn.target&&(s.depend(),d&&(d.dep.depend(),i(e)&&Dn(e))),Ln(e)&&!a?e.value:e},set:function(e){var r=c?c.call(n):t;if(L(r,e)){if(u)u.call(n,e);else{if(c)return;if(!a&&Ln(r)&&!Ln(e))return void(r.value=e);t=e}d=!a&&Pn(e,!1,o),s.notify()}}}),s}}function Bn(n,e,t){if(!Rn(n)){var r=n.__ob__;return i(n)&&f(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),r&&!r.shallow&&r.mock&&Pn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||r&&r.vmCount?t:r?(On(r.value,e,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(n[e]=t,t)}}function zn(n,e){if(i(n)&&f(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Rn(n)||x(n,e)&&(delete n[e],t&&t.dep.notify())}}function Dn(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),i(e)&&Dn(e)}function Mn(n){return $n(n,!0),q(n,"__v_isShallow",!0),n}function $n(n,e){if(!Rn(n)){Pn(n,e,on());0}}function Rn(n){return!(!n||!n.__v_isReadonly)}function Ln(n){return!(!n||!0!==n.__v_isRef)}function Nn(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Ln(n))return n.value;var r=n&&n.__ob__;return r&&r.dep.depend(),n},set:function(n){var r=e[t];Ln(r)&&!Ln(n)?r.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Un;var Fn=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Un,!n&&Un&&(this.index=(Un.scopes||(Un.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=Un;try{return Un=this,n()}finally{Un=e}}else 0},n.prototype.on=function(){Un=this},n.prototype.off=function(){Un=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Jn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Vn=_((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function qn(n,e){function t(){var n=t.fns;if(!i(n))return Ce(n,null,arguments,e,"v-on handler");for(var r=n.slice(),a=0;a<r.length;a++)Ce(r[a],null,arguments,e,"v-on handler")}return t.fns=n,t}function Wn(n,e,t,r,i,o){var l,c,u,d;for(l in n)c=n[l],u=e[l],d=Vn(l),a(c)||(a(u)?(a(c.fns)&&(c=n[l]=qn(c,o)),s(d.once)&&(c=n[l]=i(d.name,c,d.capture)),t(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,n[l]=u));for(l in e)a(n[l])&&r((d=Vn(l)).name,e[l],d.capture)}function Gn(n,e,t){var r;n instanceof hn&&(n=n.data.hook||(n.data.hook={}));var i=n[e];function l(){t.apply(this,arguments),w(r.fns,l)}a(i)?r=qn([l]):o(i.fns)&&s(i.merged)?(r=i).fns.push(l):r=qn([i,l]),r.merged=!0,n[e]=r}function Hn(n,e,t,r,i){if(o(e)){if(x(e,t))return n[t]=e[t],i||delete e[t],!0;if(x(e,r))return n[t]=e[r],i||delete e[r],!0}return!1}function Qn(n){return l(n)?[mn(n)]:i(n)?function n(e,t){var r,c,u,d,p=[];for(r=0;r<e.length;r++)a(c=e[r])||"boolean"==typeof c||(u=p.length-1,d=p[u],i(c)?c.length>0&&(Kn((c=n(c,"".concat(t||"","_").concat(r)))[0])&&Kn(d)&&(p[u]=mn(d.text+c[0].text),c.shift()),p.push.apply(p,c)):l(c)?Kn(d)?p[u]=mn(d.text+c):""!==c&&p.push(mn(c)):Kn(c)&&Kn(d)?p[u]=mn(d.text+c.text):(s(e._isVList)&&o(c.tag)&&a(c.key)&&o(t)&&(c.key="__vlist".concat(t,"_").concat(r,"__")),p.push(c)));return p}(n):void 0}function Kn(n){return o(n)&&o(n.text)&&function(n){return!1===n}(n.isComment)}function Zn(n,e){var t,r,a,s,l=null;if(i(n)||"string"==typeof n)for(l=new Array(n.length),t=0,r=n.length;t<r;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(u(n))if(un&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),d=c.next();!d.done;)l.push(e(d.value,l.length)),d=c.next()}else for(a=Object.keys(n),l=new Array(a.length),t=0,r=a.length;t<r;t++)s=a[t],l[t]=e(n[s],s,t);return o(l)||(l=[]),l._isVList=!0,l}function Xn(n,e,t,r){var i,a=this.$scopedSlots[n];a?(t=t||{},r&&(t=P(P({},r),t)),i=a(t)||(c(e)?e():e)):i=this.$slots[n]||(c(e)?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},i):i}function Yn(n){return It(this.$options,"filters",n,!0)||D}function ne(n,e){return i(n)?-1===n.indexOf(e):n!==e}function ee(n,e,t,r,i){var a=F.keyCodes[e]||t;return i&&r&&!F.keyCodes[e]?ne(i,r):a?ne(a,n):r?A(r)!==e:void 0===n}function te(n,e,t,r,a){if(t)if(u(t)){i(t)&&(t=O(t));var o=void 0,s=function(i){if("class"===i||"style"===i||y(i))o=n;else{var s=n.attrs&&n.attrs.type;o=r||F.mustUseProp(e,s,i)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=S(i),c=A(i);l in o||c in o||(o[i]=t[i],a&&((n.on||(n.on={}))["update:".concat(i)]=function(n){t[i]=n}))};for(var l in t)s(l)}else;return n}function re(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||ae(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),r}function ie(n,e,t){return ae(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ae(n,e,t){if(i(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&oe(n[r],"".concat(e,"_").concat(r),t);else oe(n,e,t)}function oe(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function se(n,e){if(e)if(p(e)){var t=n.on=n.on?P({},n.on):{};for(var r in e){var i=t[r],a=e[r];t[r]=i?[].concat(i,a):a}}else;return n}function le(n,e,t,r){e=e||{$stable:!t};for(var a=0;a<n.length;a++){var o=n[a];i(o)?le(o,e,t):o&&(o.proxy&&(o.fn.proxy=!0),e[o.key]=o.fn)}return r&&(e.$key=r),e}function ce(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function ue(n,e){return"string"==typeof n?e+n:n}function de(n){n._o=ie,n._n=g,n._s=v,n._l=Zn,n._t=Xn,n._q=M,n._i=$,n._m=re,n._f=Yn,n._k=ee,n._b=te,n._v=mn,n._e=fn,n._u=le,n._g=se,n._d=ce,n._p=ue}function pe(n,e){if(!n||!n.length)return{};for(var t={},r=0,i=n.length;r<i;r++){var a=n[r],o=a.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,a.context!==e&&a.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(a);else{var s=o.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in t)t[c].every(he)&&delete t[c];return t}function he(n){return n.isComment&&!n.asyncFactory||" "===n.text}function fe(n){return n.isComment&&n.asyncFactory}function me(n,e,t,i){var a,o=Object.keys(t).length>0,s=e?!!e.$stable:!o,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&i&&i!==r&&l===i.$key&&!o&&!i.$hasNormal)return i;for(var c in a={},e)e[c]&&"$"!==c[0]&&(a[c]=ve(n,t,c,e[c]))}else a={};for(var u in t)u in a||(a[u]=ge(t,u));return e&&Object.isExtensible(e)&&(e._normalized=a),q(a,"$stable",s),q(a,"$key",l),q(a,"$hasNormal",o),a}function ve(n,e,t,r){var a=function(){var e=dn;pn(n);var t=arguments.length?r.apply(null,arguments):r({}),a=(t=t&&"object"==typeof t&&!i(t)?[t]:Qn(t))&&t[0];return pn(e),t&&(!a||1===t.length&&a.isComment&&!fe(a))?void 0:t};return r.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function ge(n,e){return function(){return n[e]}}function be(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};q(e,"_v_attr_proxy",!0),ye(e,n.$attrs,r,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||ye(n._listenersProxy={},n.$listeners,r,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||ke(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:j(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return Nn(n,e,t)}))}}}function ye(n,e,t,r,i){var a=!1;for(var o in e)o in n?e[o]!==t[o]&&(a=!0):(a=!0,we(n,o,r,i));for(var o in n)o in e||(a=!0,delete n[o]);return a}function we(n,e,t,r){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[r][e]}})}function ke(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var xe=null;function _e(n,e){return(n.__esModule||un&&"Module"===n[Symbol.toStringTag])&&(n=n.default),u(n)?e.extend(n):n}function Te(n){if(i(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||fe(t)))return t}}function Se(n,e,t,r,d,p){return(i(t)||l(t))&&(d=r,r=t,t=void 0),s(p)&&(d=2),function(n,e,t,r,l){if(o(t)&&o(t.__ob__))return fn();o(t)&&o(t.is)&&(e=t.is);if(!e)return fn();0;i(r)&&c(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===l?r=Qn(r):1===l&&(r=function(n){for(var e=0;e<n.length;e++)if(i(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var d,p;if("string"==typeof e){var h=void 0;p=n.$vnode&&n.$vnode.ns||F.getTagNamespace(e),d=F.isReservedTag(e)?new hn(F.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!o(h=It(n.$options,"components",e))?new hn(e,t,r,void 0,void 0,n):wt(h,t,n,r,e)}else d=wt(e,t,n,r);return i(d)?d:o(d)?(o(p)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(o(e.children))for(var i=0,l=e.children.length;i<l;i++){var c=e.children[i];o(c.tag)&&(a(c.ns)||s(r)&&"svg"!==c.tag)&&n(c,t,r)}}(d,p),o(t)&&function(n){u(n.style)&&Fe(n.style);u(n.class)&&Fe(n.class)}(t),d):fn()}(n,e,t,r,d)}function Ee(n,e,t){kn();try{if(e)for(var r=e;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var a=0;a<i.length;a++)try{if(!1===i[a].call(r,n,e,t))return}catch(n){Ae(n,r,"errorCaptured hook")}}Ae(n,e,t)}finally{xn()}}function Ce(n,e,t,r,i){var a;try{(a=t?n.apply(e,t):n.call(e))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(n){return Ee(n,r,i+" (Promise/async)")})),a._handled=!0)}catch(n){Ee(n,r,i)}return a}function Ae(n,e,t){if(F.errorHandler)try{return F.errorHandler.call(null,n,e,t)}catch(e){e!==n&&je(e,null,"config.errorHandler")}je(n,e,t)}function je(n,e,t){if(!H||"undefined"==typeof console)throw n;console.error(n)}var Ie,Pe=!1,Oe=[],Be=!1;function ze(){Be=!1;var n=Oe.slice(0);Oe.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&ln(Promise)){var De=Promise.resolve();Ie=function(){De.then(ze),Y&&setTimeout(B)},Pe=!0}else if(K||"undefined"==typeof MutationObserver||!ln(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ie="undefined"!=typeof setImmediate&&ln(setImmediate)?function(){setImmediate(ze)}:function(){setTimeout(ze,0)};else{var Me=1,$e=new MutationObserver(ze),Re=document.createTextNode(String(Me));$e.observe(Re,{characterData:!0}),Ie=function(){Me=(Me+1)%2,Re.data=String(Me)},Pe=!0}function Le(n,e){var t;if(Oe.push((function(){if(n)try{n.call(e)}catch(n){Ee(n,e,"nextTick")}else t&&t(e)})),Be||(Be=!0,Ie()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Ne(n){return function(e,t){if(void 0===t&&(t=dn),t)return function(n,e,t){var r=n.$options;r[e]=Et(r[e],t)}(t,n,e)}}Ne("beforeMount"),Ne("mounted"),Ne("beforeUpdate"),Ne("updated"),Ne("beforeDestroy"),Ne("destroyed"),Ne("activated"),Ne("deactivated"),Ne("serverPrefetch"),Ne("renderTracked"),Ne("renderTriggered"),Ne("errorCaptured");var Ue=new cn;function Fe(n){return function n(e,t){var r,a,o=i(e);if(!o&&!u(e)||e.__v_skip||Object.isFrozen(e)||e instanceof hn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(o)for(r=e.length;r--;)n(e[r],t);else if(Ln(e))n(e.value,t);else for(a=Object.keys(e),r=a.length;r--;)n(e[a[r]],t)}(n,Ue),Ue.clear(),n}var Je,Ve=0,qe=function(){function n(n,e,t,r,i){var a,o;a=this,void 0===(o=Un&&!Un._vm?Un:n?n._scope:void 0)&&(o=Un),o&&o.active&&o.effects.push(a),(this.vm=n)&&i&&(n._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Ve,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!W.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=B)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;kn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Ee(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Fe(n),xn(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():pt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||u(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ce(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&w(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function We(n,e){Je.$on(n,e)}function Ge(n,e){Je.$off(n,e)}function He(n,e){var t=Je;return function r(){var i=e.apply(null,arguments);null!==i&&t.$off(n,r)}}function Qe(n,e,t){Je=n,Wn(e,t||{},We,Ge,He,n),Je=void 0}var Ke=null;function Ze(n){var e=Ke;return Ke=n,function(){Ke=e}}function Xe(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function Ye(n,e){if(e){if(n._directInactive=!1,Xe(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)Ye(n.$children[t]);nt(n,"activated")}}function nt(n,e,t,r){void 0===r&&(r=!0),kn();var i=dn;r&&pn(n);var a=n.$options[e],o="".concat(e," hook");if(a)for(var s=0,l=a.length;s<l;s++)Ce(a[s],n,t||null,n,o);n._hasHookEvent&&n.$emit("hook:"+e),r&&pn(i),xn()}var et=[],tt=[],rt={},it=!1,at=!1,ot=0;var st=0,lt=Date.now;if(H&&!K){var ct=window.performance;ct&&"function"==typeof ct.now&&lt()>document.createEvent("Event").timeStamp&&(lt=function(){return ct.now()})}var ut=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function dt(){var n,e;for(st=lt(),at=!0,et.sort(ut),ot=0;ot<et.length;ot++)(n=et[ot]).before&&n.before(),e=n.id,rt[e]=null,n.run();var t=tt.slice(),r=et.slice();ot=et.length=tt.length=0,rt={},it=at=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,Ye(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&nt(r,"updated")}}(r),function(){for(var n=0;n<bn.length;n++){var e=bn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}bn.length=0}(),sn&&F.devtools&&sn.emit("flush")}function pt(n){var e=n.id;if(null==rt[e]&&(n!==yn.target||!n.noRecurse)){if(rt[e]=!0,at){for(var t=et.length-1;t>ot&&et[t].id>n.id;)t--;et.splice(t+1,0,n)}else et.push(n);it||(it=!0,Le(dt))}}function ht(n,e){if(n){for(var t=Object.create(null),r=un?Reflect.ownKeys(n):Object.keys(n),i=0;i<r.length;i++){var a=r[i];if("__ob__"!==a){var o=n[a].from;if(o in e._provided)t[a]=e._provided[o];else if("default"in n[a]){var s=n[a].default;t[a]=c(s)?s.call(e):s}else 0}}return t}}function ft(n,e,t,a,o){var l,c=this,u=o.options;x(a,"_uid")?(l=Object.create(a))._original=a:(l=a,a=a._original);var d=s(u._compiled),p=!d;this.data=n,this.props=e,this.children=t,this.parent=a,this.listeners=n.on||r,this.injections=ht(u.inject,a),this.slots=function(){return c.$slots||me(a,n.scopedSlots,c.$slots=pe(t,a)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return me(a,n.scopedSlots,this.slots())}}),d&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=me(a,n.scopedSlots,this.$slots)),u._scopeId?this._c=function(n,e,t,r){var o=Se(l,n,e,t,r,p);return o&&!i(o)&&(o.fnScopeId=u._scopeId,o.fnContext=a),o}:this._c=function(n,e,t,r){return Se(l,n,e,t,r,p)}}function mt(n,e,t,r,i){var a=vn(n);return a.fnContext=t,a.fnOptions=r,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function vt(n,e){for(var t in e)n[S(t)]=e[t]}function gt(n){return n.name||n.__name||n._componentTag}de(ft.prototype);var bt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;bt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;o(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ke)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,i,a){var o=i.data.scopedSlots,s=n.$scopedSlots,l=!!(o&&!o.$stable||s!==r&&!s.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),c=!!(a||n.$options._renderChildren||l),u=n.$vnode;n.$options._parentVnode=i,n.$vnode=i,n._vnode&&(n._vnode.parent=i),n.$options._renderChildren=a;var d=i.data.attrs||r;n._attrsProxy&&ye(n._attrsProxy,d,u.data&&u.data.attrs||r,n,"$attrs")&&(c=!0),n.$attrs=d,t=t||r;var p=n.$options._parentListeners;if(n._listenersProxy&&ye(n._listenersProxy,t,p||r,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,Qe(n,t,p),e&&n.$options.props){An(!1);for(var h=n._props,f=n.$options._propKeys||[],m=0;m<f.length;m++){var v=f[m],g=n.$options.props;h[v]=Pt(v,g,e,n)}An(!0),n.$options.propsData=e}c&&(n.$slots=pe(a,i.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,nt(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,tt.push(e)):Ye(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,Xe(e))||e._inactive)){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);nt(e,"deactivated")}}(e,!0):e.$destroy())}},yt=Object.keys(bt);function wt(n,e,t,l,c){if(!a(n)){var d=t.$options._base;if(u(n)&&(n=d.extend(n)),"function"==typeof n){var p;if(a(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=xe;if(t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var r=n.owners=[t],i=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return w(r,t)}));var d=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},p=R((function(t){n.resolved=_e(t,e),i?r.length=0:d(!0)})),h=R((function(e){o(n.errorComp)&&(n.error=!0,d(!0))})),f=n(p,h);return u(f)&&(m(f)?a(n.resolved)&&f.then(p,h):m(f.component)&&(f.component.then(p,h),o(f.error)&&(n.errorComp=_e(f.error,e)),o(f.loading)&&(n.loadingComp=_e(f.loading,e),0===f.delay?n.loading=!0:l=setTimeout((function(){l=null,a(n.resolved)&&a(n.error)&&(n.loading=!0,d(!1))}),f.delay||200)),o(f.timeout)&&(c=setTimeout((function(){c=null,a(n.resolved)&&h(null)}),f.timeout)))),i=!1,n.loading?n.loadingComp:n.resolved}}(p=n,d)))return function(n,e,t,r,i){var a=fn();return a.asyncFactory=n,a.asyncMeta={data:e,context:t,children:r,tag:i},a}(p,e,t,l,c);e=e||{},qt(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var a=e.on||(e.on={}),s=a[r],l=e.model.callback;o(s)?(i(s)?-1===s.indexOf(l):s!==l)&&(a[r]=[l].concat(s)):a[r]=l}(n.options,e);var h=function(n,e,t){var r=e.options.props;if(!a(r)){var i={},s=n.attrs,l=n.props;if(o(s)||o(l))for(var c in r){var u=A(c);Hn(i,l,c,u,!0)||Hn(i,s,c,u,!1)}return i}}(e,n);if(s(n.options.functional))return function(n,e,t,a,s){var l=n.options,c={},u=l.props;if(o(u))for(var d in u)c[d]=Pt(d,u,e||r);else o(t.attrs)&&vt(c,t.attrs),o(t.props)&&vt(c,t.props);var p=new ft(t,c,s,a,n),h=l.render.call(null,p._c,p);if(h instanceof hn)return mt(h,t,p.parent,l,p);if(i(h)){for(var f=Qn(h)||[],m=new Array(f.length),v=0;v<f.length;v++)m[v]=mt(f[v],t,p.parent,l,p);return m}}(n,h,e,t,l);var f=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var v=e.slot;e={},v&&(e.slot=v)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<yt.length;t++){var r=yt[t],i=e[r],a=bt[r];i===a||i&&i._merged||(e[r]=i?kt(a,i):a)}}(e);var g=gt(n.options)||c;return new hn("vue-component-".concat(n.cid).concat(g?"-".concat(g):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:h,listeners:f,tag:c,children:l},p)}}}function kt(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}var xt=B,_t=F.optionMergeStrategies;function Tt(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var r,i,a,o=un?Reflect.ownKeys(e):Object.keys(e),s=0;s<o.length;s++)"__ob__"!==(r=o[s])&&(i=n[r],a=e[r],t&&x(n,r)?i!==a&&p(i)&&p(a)&&Tt(i,a):Bn(n,r,a));return n}function St(n,e,t){return t?function(){var r=c(e)?e.call(t,t):e,i=c(n)?n.call(t,t):n;return r?Tt(r,i):i}:e?n?function(){return Tt(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function Et(n,e){var t=e?n?n.concat(e):i(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Ct(n,e,t,r){var i=Object.create(n||null);return e?P(i,e):i}_t.data=function(n,e,t){return t?St(n,e,t):e&&"function"!=typeof e?n:St(n,e)},U.forEach((function(n){_t[n]=Et})),N.forEach((function(n){_t[n+"s"]=Ct})),_t.watch=function(n,e,t,r){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var a={};for(var o in P(a,n),e){var s=a[o],l=e[o];s&&!i(s)&&(s=[s]),a[o]=s?s.concat(l):i(l)?l:[l]}return a},_t.props=_t.methods=_t.inject=_t.computed=function(n,e,t,r){if(!n)return e;var i=Object.create(null);return P(i,n),e&&P(i,e),i},_t.provide=function(n,e){return n?function(){var t=Object.create(null);return Tt(t,c(n)?n.call(this):n),e&&Tt(t,c(e)?e.call(this):e,!1),t}:e};var At=function(n,e){return void 0===e?n:e};function jt(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var r,a,o={};if(i(t))for(r=t.length;r--;)"string"==typeof(a=t[r])&&(o[S(a)]={type:null});else if(p(t))for(var s in t)a=t[s],o[S(s)]=p(a)?a:{type:a};else 0;n.props=o}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(i(t))for(var a=0;a<t.length;a++)r[t[a]]={from:t[a]};else if(p(t))for(var o in t){var s=t[o];r[o]=p(s)?P({from:o},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];c(r)&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=jt(n,e.extends,t)),e.mixins))for(var r=0,a=e.mixins.length;r<a;r++)n=jt(n,e.mixins[r],t);var o,s={};for(o in n)l(o);for(o in e)x(n,o)||l(o);function l(r){var i=_t[r]||At;s[r]=i(n[r],e[r],t,r)}return s}function It(n,e,t,r){if("string"==typeof t){var i=n[e];if(x(i,t))return i[t];var a=S(t);if(x(i,a))return i[a];var o=E(a);return x(i,o)?i[o]:i[t]||i[a]||i[o]}}function Pt(n,e,t,r){var i=e[n],a=!x(t,n),o=t[n],s=Dt(Boolean,i.type);if(s>-1)if(a&&!x(i,"default"))o=!1;else if(""===o||o===A(n)){var l=Dt(String,i.type);(l<0||s<l)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!x(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(r)&&"Function"!==Bt(e.type)?r.call(n):r}(r,i,n);var u=Cn;An(!0),Pn(o),An(u)}return o}var Ot=/^\s*function (\w+)/;function Bt(n){var e=n&&n.toString().match(Ot);return e?e[1]:""}function zt(n,e){return Bt(n)===Bt(e)}function Dt(n,e){if(!i(e))return zt(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(zt(e[t],n))return t;return-1}var Mt={enumerable:!0,configurable:!0,get:B,set:B};function $t(n,e,t){Mt.get=function(){return this[e][t]},Mt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Mt)}function Rt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props=Mn({}),i=n.$options._propKeys=[];n.$parent&&An(!1);var a=function(a){i.push(a);var o=Pt(a,e,t,n);On(r,a,o),a in n||$t(n,"_props",a)};for(var o in e)a(o);An(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var r=n._setupContext=be(n);pn(n),kn();var i=Ce(t,null,[n._props||Mn({}),r],n,"setup");if(xn(),pn(),c(i))e.render=i;else if(u(i))if(n._setupState=i,i.__sfc){var a=n._setupProxy={};for(var o in i)"__sfc"!==o&&Nn(a,i,o)}else for(var o in i)V(o)||Nn(n,i,o);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?B:j(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;p(e=n._data=c(e)?function(n,e){kn();try{return n.call(e,e)}catch(n){return Ee(n,e,"data()"),{}}finally{xn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,i=(n.$options.methods,t.length);for(;i--;){var a=t[i];0,r&&x(r,a)||V(a)||$t(n,"_data",a)}var o=Pn(e);o&&o.vmCount++}(n);else{var t=Pn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=on();for(var i in e){var a=e[i],o=c(a)?a:a.get;0,r||(t[i]=new qe(n,o||B,B,Lt)),i in n||Nt(n,i,a)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var t in e){var r=e[t];if(i(r))for(var a=0;a<r.length;a++)Jt(n,t,r[a]);else Jt(n,t,r)}}(n,e.watch)}var Lt={lazy:!0};function Nt(n,e,t){var r=!on();c(t)?(Mt.get=r?Ut(e):Ft(t),Mt.set=B):(Mt.get=t.get?r&&!1!==t.cache?Ut(e):Ft(t.get):B,Mt.set=t.set||B),Object.defineProperty(n,e,Mt)}function Ut(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),yn.target&&e.depend(),e.value}}function Ft(n){return function(){return n.call(this,this)}}function Jt(n,e,t,r){return p(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Vt=0;function qt(n){var e=n.options;if(n.super){var t=qt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var i in t)t[i]!==r[i]&&(e||(e={}),e[i]=t[i]);return e}(n);r&&P(n.extendOptions,r),(e=n.options=jt(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Wt(n){this._init(n)}function Gt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,i=n._Ctor||(n._Ctor={});if(i[r])return i[r];var a=gt(n)||gt(t.options);var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=jt(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)$t(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)Nt(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,N.forEach((function(n){o[n]=t[n]})),a&&(o.options.components[a]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=P({},o.options),i[r]=o,o}}function Ht(n){return n&&(gt(n.Ctor.options)||n.tag)}function Qt(n,e){return i(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!h(n)&&n.test(e)}function Kt(n,e){var t=n.cache,r=n.keys,i=n._vnode;for(var a in t){var o=t[a];if(o){var s=o.name;s&&!e(s)&&Zt(t,a,r,i)}}}function Zt(n,e,t,r){var i=n[e];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),n[e]=null,w(t,e)}Wt.prototype._init=function(n){var e=this;e._uid=Vt++,e._isVue=!0,e.__v_skip=!0,e._scope=new Fn(!0),e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var i=r.componentOptions;t.propsData=i.propsData,t._parentListeners=i.listeners,t._renderChildren=i.children,t._componentTag=i.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=jt(qt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Qe(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,i=t&&t.context;n.$slots=pe(e._renderChildren,i),n.$scopedSlots=t?me(n.$parent,t.data.scopedSlots,n.$slots):r,n._c=function(e,t,r,i){return Se(n,e,t,r,i,!1)},n.$createElement=function(e,t,r,i){return Se(n,e,t,r,i,!0)};var a=t&&t.data;On(n,"$attrs",a&&a.attrs||r,null,!0),On(n,"$listeners",e._parentListeners||r,null,!0)}(e),nt(e,"beforeCreate",void 0,!1),function(n){var e=ht(n.$options.inject,n);e&&(An(!1),Object.keys(e).forEach((function(t){On(n,t,e[t])})),An(!0))}(e),Rt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!u(t))return;for(var r=Jn(n),i=un?Reflect.ownKeys(t):Object.keys(t),a=0;a<i.length;a++){var o=i[a];Object.defineProperty(r,o,Object.getOwnPropertyDescriptor(t,o))}}}(e),nt(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Bn,n.prototype.$delete=zn,n.prototype.$watch=function(n,e,t){if(p(e))return Jt(this,n,e,t);(t=t||{}).user=!0;var r=new qe(this,n,e,t);if(t.immediate){var i='callback for immediate watcher "'.concat(r.expression,'"');kn(),Ce(e,this,[r.value],this,i),xn()}return function(){r.teardown()}}}(Wt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(i(n))for(var a=0,o=n.length;a<o;a++)r.$on(n[a],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(i(n)){for(var r=0,a=n.length;r<a;r++)t.$off(n[r],e);return t}var o,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var l=s.length;l--;)if((o=s[l])===e||o.fn===e){s.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?I(t):t;for(var r=I(arguments,1),i='event handler for "'.concat(n,'"'),a=0,o=t.length;a<o;a++)Ce(t[a],e,r,e,i)}return e}}(Wt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,i=t._vnode,a=Ze(t);t._vnode=n,t.$el=i?t.__patch__(i,n):t.__patch__(t.$el,n,e,!1),a(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var o=t;o&&o.$vnode&&o.$parent&&o.$vnode===o.$parent._vnode;)o.$parent.$el=o.$el,o=o.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){nt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||w(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),nt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Wt),function(n){de(n.prototype),n.prototype.$nextTick=function(n){return Le(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,a=t._parentVnode;a&&e._isMounted&&(e.$scopedSlots=me(e.$parent,a.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&ke(e._slotsProxy,e.$scopedSlots)),e.$vnode=a;try{pn(e),xe=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Ee(t,e,"render"),n=e._vnode}finally{xe=null,pn()}return i(n)&&1===n.length&&(n=n[0]),n instanceof hn||(n=fn()),n.parent=a,n}}(Wt);var Xt=[String,RegExp,Array],Yt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Xt,exclude:Xt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var i=t.tag,a=t.componentInstance,o=t.componentOptions;n[r]={name:Ht(o),tag:i,componentInstance:a},e.push(r),this.max&&e.length>parseInt(this.max)&&Zt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Zt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Kt(n,(function(n){return Qt(e,n)}))})),this.$watch("exclude",(function(e){Kt(n,(function(n){return!Qt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Te(n),t=e&&e.componentOptions;if(t){var r=Ht(t),i=this.include,a=this.exclude;if(i&&(!r||!Qt(i,r))||a&&r&&Qt(a,r))return e;var o=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;o[l]?(e.componentInstance=o[l].componentInstance,w(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return F}};Object.defineProperty(n,"config",e),n.util={warn:xt,extend:P,mergeOptions:jt,defineReactive:On},n.set=Bn,n.delete=zn,n.nextTick=Le,n.observable=function(n){return Pn(n),n},n.options=Object.create(null),N.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,P(n.options.components,Yt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=I(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=jt(this.options,n),this}}(n),Gt(n),function(n){N.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Wt),Object.defineProperty(Wt.prototype,"$isServer",{get:on}),Object.defineProperty(Wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wt,"FunctionalRenderContext",{value:ft}),Wt.version="2.7.14";var nr=b("style,class"),er=b("input,textarea,option,select,progress"),tr=b("contenteditable,draggable,spellcheck"),rr=b("events,caret,typing,plaintext-only"),ir=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ar="http://www.w3.org/1999/xlink",or=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},sr=function(n){return or(n)?n.slice(6,n.length):""},lr=function(n){return null==n||!1===n};function cr(n){for(var e=n.data,t=n,r=n;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=ur(r.data,e));for(;o(t=t.parent);)t&&t.data&&(e=ur(e,t.data));return function(n,e){if(o(n)||o(e))return dr(n,pr(e));return""}(e.staticClass,e.class)}function ur(n,e){return{staticClass:dr(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function dr(n,e){return n?e?n+" "+e:n:e||""}function pr(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,i=n.length;r<i;r++)o(e=pr(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):u(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var hr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},fr=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),mr=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),vr=function(n){return fr(n)||mr(n)};var gr=Object.create(null);var br=b("text,number,password,search,email,tel,url");var yr=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(hr[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),wr={create:function(n,e){kr(e)},update:function(n,e){n.data.ref!==e.data.ref&&(kr(n,!0),kr(e))},destroy:function(n){kr(n,!0)}};function kr(n,e){var t=n.data.ref;if(o(t)){var r=n.context,a=n.componentInstance||n.elm,s=e?null:a,l=e?void 0:a;if(c(t))Ce(t,r,[s],r,"template ref function");else{var u=n.data.refInFor,d="string"==typeof t||"number"==typeof t,p=Ln(t),h=r.$refs;if(d||p)if(u){var f=d?h[t]:t.value;e?i(f)&&w(f,a):i(f)?f.includes(a)||f.push(a):d?(h[t]=[a],xr(r,t,h[t])):t.value=[a]}else if(d){if(e&&h[t]!==a)return;h[t]=l,xr(r,t,s)}else if(p){if(e&&t.value!==a)return;t.value=s}else 0}}}function xr(n,e,t){var r=n._setupState;r&&x(r,e)&&(Ln(r[e])?r[e].value=t:r[e]=t)}var _r=new hn("",{},[]),Tr=["create","activate","update","remove","destroy"];function Sr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=o(t=n.data)&&o(t=t.attrs)&&t.type,i=o(t=e.data)&&o(t=t.attrs)&&t.type;return r===i||br(r)&&br(i)}(n,e)||s(n.isAsyncPlaceholder)&&a(e.asyncFactory.error))}function Er(n,e,t){var r,i,a={};for(r=e;r<=t;++r)o(i=n[r].key)&&(a[i]=r);return a}var Cr={create:Ar,update:Ar,destroy:function(n){Ar(n,_r)}};function Ar(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,i,a=n===_r,o=e===_r,s=Ir(n.data.directives,n.context),l=Ir(e.data.directives,e.context),c=[],u=[];for(t in l)r=s[t],i=l[t],r?(i.oldValue=r.value,i.oldArg=r.arg,Or(i,"update",e,n),i.def&&i.def.componentUpdated&&u.push(i)):(Or(i,"bind",e,n),i.def&&i.def.inserted&&c.push(i));if(c.length){var d=function(){for(var t=0;t<c.length;t++)Or(c[t],"inserted",e,n)};a?Gn(e,"insert",d):d()}u.length&&Gn(e,"postpatch",(function(){for(var t=0;t<u.length;t++)Or(u[t],"componentUpdated",e,n)}));if(!a)for(t in s)l[t]||Or(s[t],"unbind",n,n,o)}(n,e)}var jr=Object.create(null);function Ir(n,e){var t,r,i=Object.create(null);if(!n)return i;for(t=0;t<n.length;t++){if((r=n[t]).modifiers||(r.modifiers=jr),i[Pr(r)]=r,e._setupState&&e._setupState.__sfc){var a=r.def||It(e,"_setupState","v-"+r.name);r.def="function"==typeof a?{bind:a,update:a}:a}r.def=r.def||It(e.$options,"directives",r.name)}return i}function Pr(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Or(n,e,t,r,i){var a=n.def&&n.def[e];if(a)try{a(t.elm,n,t,r,i)}catch(r){Ee(r,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Br=[wr,Cr];function zr(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||a(n.data.attrs)&&a(e.data.attrs))){var r,i,l=e.elm,c=n.data.attrs||{},u=e.data.attrs||{};for(r in(o(u.__ob__)||s(u._v_attr_proxy))&&(u=e.data.attrs=P({},u)),u)i=u[r],c[r]!==i&&Dr(l,r,i,e.data.pre);for(r in(K||X)&&u.value!==c.value&&Dr(l,"value",u.value),c)a(u[r])&&(or(r)?l.removeAttributeNS(ar,sr(r)):tr(r)||l.removeAttribute(r))}}function Dr(n,e,t,r){r||n.tagName.indexOf("-")>-1?Mr(n,e,t):ir(e)?lr(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):tr(e)?n.setAttribute(e,function(n,e){return lr(e)||"false"===e?"false":"contenteditable"===n&&rr(e)?e:"true"}(e,t)):or(e)?lr(t)?n.removeAttributeNS(ar,sr(e)):n.setAttributeNS(ar,e,t):Mr(n,e,t)}function Mr(n,e,t){if(lr(t))n.removeAttribute(e);else{if(K&&!Z&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var $r={create:zr,update:zr};function Rr(n,e){var t=e.elm,r=e.data,i=n.data;if(!(a(r.staticClass)&&a(r.class)&&(a(i)||a(i.staticClass)&&a(i.class)))){var s=cr(e),l=t._transitionClasses;o(l)&&(s=dr(s,pr(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Lr,Nr={create:Rr,update:Rr};function Ur(n,e,t){var r=Lr;return function i(){var a=e.apply(null,arguments);null!==a&&Vr(n,i,t,r)}}var Fr=Pe&&!(en&&Number(en[1])<=53);function Jr(n,e,t,r){if(Fr){var i=st,a=e;e=a._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=i||n.timeStamp<=0||n.target.ownerDocument!==document)return a.apply(this,arguments)}}Lr.addEventListener(n,e,rn?{capture:t,passive:r}:t)}function Vr(n,e,t,r){(r||Lr).removeEventListener(n,e._wrapper||e,t)}function qr(n,e){if(!a(n.data.on)||!a(e.data.on)){var t=e.data.on||{},r=n.data.on||{};Lr=e.elm||n.elm,function(n){if(o(n.__r)){var e=K?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Wn(t,r,Jr,Vr,Ur,e.context),Lr=void 0}}var Wr,Gr={create:qr,update:qr,destroy:function(n){return qr(n,_r)}};function Hr(n,e){if(!a(n.data.domProps)||!a(e.data.domProps)){var t,r,i=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(o(c.__ob__)||s(c._v_attr_proxy))&&(c=e.data.domProps=P({},c)),l)t in c||(i[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===l[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=r;var u=a(r)?"":String(r);Qr(i,u)&&(i.value=u)}else if("innerHTML"===t&&mr(i.tagName)&&a(i.innerHTML)){(Wr=Wr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var d=Wr.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;d.firstChild;)i.appendChild(d.firstChild)}else if(r!==l[t])try{i[t]=r}catch(n){}}}}function Qr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(o(r)){if(r.number)return g(t)!==g(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Kr={create:Hr,update:Hr},Zr=_((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Xr(n){var e=Yr(n.style);return n.staticStyle?P(n.staticStyle,e):e}function Yr(n){return Array.isArray(n)?O(n):"string"==typeof n?Zr(n):n}var ni,ei=/^--/,ti=/\s*!important$/,ri=function(n,e,t){if(ei.test(e))n.style.setProperty(e,t);else if(ti.test(t))n.style.setProperty(A(e),t.replace(ti,""),"important");else{var r=ai(e);if(Array.isArray(t))for(var i=0,a=t.length;i<a;i++)n.style[r]=t[i];else n.style[r]=t}},ii=["Webkit","Moz","ms"],ai=_((function(n){if(ni=ni||document.createElement("div").style,"filter"!==(n=S(n))&&n in ni)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<ii.length;t++){var r=ii[t]+e;if(r in ni)return r}}));function oi(n,e){var t=e.data,r=n.data;if(!(a(t.staticStyle)&&a(t.style)&&a(r.staticStyle)&&a(r.style))){var i,s,l=e.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},d=c||u,p=Yr(e.data.style)||{};e.data.normalizedStyle=o(p.__ob__)?P({},p):p;var h=function(n,e){var t,r={};if(e)for(var i=n;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(t=Xr(i.data))&&P(r,t);(t=Xr(n.data))&&P(r,t);for(var a=n;a=a.parent;)a.data&&(t=Xr(a.data))&&P(r,t);return r}(e,!0);for(s in d)a(h[s])&&ri(l,s,"");for(s in h)(i=h[s])!==d[s]&&ri(l,s,null==i?"":i)}}var si={create:oi,update:oi},li=/\s+/;function ci(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(li).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function ui(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(li).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function di(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&P(e,pi(n.name||"v")),P(e,n),e}return"string"==typeof n?pi(n):void 0}}var pi=_((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),hi=H&&!Z,fi="transition",mi="transitionend",vi="animation",gi="animationend";hi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(fi="WebkitTransition",mi="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(vi="WebkitAnimation",gi="webkitAnimationEnd"));var bi=H?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function yi(n){bi((function(){bi(n)}))}function wi(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),ci(n,e))}function ki(n,e){n._transitionClasses&&w(n._transitionClasses,e),ui(n,e)}function xi(n,e,t){var r=Ti(n,e),i=r.type,a=r.timeout,o=r.propCount;if(!i)return t();var s="transition"===i?mi:gi,l=0,c=function(){n.removeEventListener(s,u),t()},u=function(e){e.target===n&&++l>=o&&c()};setTimeout((function(){l<o&&c()}),a+1),n.addEventListener(s,u)}var _i=/\b(transform|all)(,|$)/;function Ti(n,e){var t,r=window.getComputedStyle(n),i=(r[fi+"Delay"]||"").split(", "),a=(r[fi+"Duration"]||"").split(", "),o=Si(i,a),s=(r[vi+"Delay"]||"").split(", "),l=(r[vi+"Duration"]||"").split(", "),c=Si(s,l),u=0,d=0;return"transition"===e?o>0&&(t="transition",u=o,d=a.length):"animation"===e?c>0&&(t="animation",u=c,d=l.length):d=(t=(u=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:u,propCount:d,hasTransform:"transition"===t&&_i.test(r[fi+"Property"])}}function Si(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Ei(e)+Ei(n[t])})))}function Ei(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Ci(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=di(n.data.transition);if(!a(r)&&!o(t._enterCb)&&1===t.nodeType){for(var i=r.css,s=r.type,l=r.enterClass,d=r.enterToClass,p=r.enterActiveClass,h=r.appearClass,f=r.appearToClass,m=r.appearActiveClass,v=r.beforeEnter,b=r.enter,y=r.afterEnter,w=r.enterCancelled,k=r.beforeAppear,x=r.appear,_=r.afterAppear,T=r.appearCancelled,S=r.duration,E=Ke,C=Ke.$vnode;C&&C.parent;)E=C.context,C=C.parent;var A=!E._isMounted||!n.isRootInsert;if(!A||x||""===x){var j=A&&h?h:l,I=A&&m?m:p,P=A&&f?f:d,O=A&&k||v,B=A&&c(x)?x:b,z=A&&_||y,D=A&&T||w,M=g(u(S)?S.enter:S);0;var $=!1!==i&&!Z,L=Ii(B),N=t._enterCb=R((function(){$&&(ki(t,P),ki(t,I)),N.cancelled?($&&ki(t,j),D&&D(t)):z&&z(t),t._enterCb=null}));n.data.show||Gn(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),B&&B(t,N)})),O&&O(t),$&&(wi(t,j),wi(t,I),yi((function(){ki(t,j),N.cancelled||(wi(t,P),L||(ji(M)?setTimeout(N,M):xi(t,s,N)))}))),n.data.show&&(e&&e(),B&&B(t,N)),$||L||N()}}}function Ai(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=di(n.data.transition);if(a(r)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var i=r.css,s=r.type,l=r.leaveClass,c=r.leaveToClass,d=r.leaveActiveClass,p=r.beforeLeave,h=r.leave,f=r.afterLeave,m=r.leaveCancelled,v=r.delayLeave,b=r.duration,y=!1!==i&&!Z,w=Ii(h),k=g(u(b)?b.leave:b);0;var x=t._leaveCb=R((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(ki(t,c),ki(t,d)),x.cancelled?(y&&ki(t,l),m&&m(t)):(e(),f&&f(t)),t._leaveCb=null}));v?v(_):_()}function _(){x.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),y&&(wi(t,l),wi(t,d),yi((function(){ki(t,l),x.cancelled||(wi(t,c),w||(ji(k)?setTimeout(x,k):xi(t,s,x)))}))),h&&h(t,x),y||w||x())}}function ji(n){return"number"==typeof n&&!isNaN(n)}function Ii(n){if(a(n))return!1;var e=n.fns;return o(e)?Ii(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Pi(n,e){!0!==e.data.show&&Ci(e)}var Oi=function(n){var e,t,r={},c=n.modules,u=n.nodeOps;for(e=0;e<Tr.length;++e)for(r[Tr[e]]=[],t=0;t<c.length;++t)o(c[t][Tr[e]])&&r[Tr[e]].push(c[t][Tr[e]]);function d(n){var e=u.parentNode(n);o(e)&&u.removeChild(e,n)}function p(n,e,t,i,a,l,c){if(o(n.elm)&&o(l)&&(n=l[c]=vn(n)),n.isRootInsert=!a,!function(n,e,t,i){var a=n.data;if(o(a)){var l=o(n.componentInstance)&&a.keepAlive;if(o(a=a.hook)&&o(a=a.init)&&a(n,!1),o(n.componentInstance))return h(n,e),f(t,n.elm,i),s(l)&&function(n,e,t,i){var a,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(a=s.data)&&o(a=a.transition)){for(a=0;a<r.activate.length;++a)r.activate[a](_r,s);e.push(s);break}f(t,n.elm,i)}(n,e,t,i),!0}}(n,e,t,i)){var d=n.data,p=n.children,v=n.tag;o(v)?(n.elm=n.ns?u.createElementNS(n.ns,v):u.createElement(v,n),y(n),m(n,p,e),o(d)&&g(n,e),f(t,n.elm,i)):s(n.isComment)?(n.elm=u.createComment(n.text),f(t,n.elm,i)):(n.elm=u.createTextNode(n.text),f(t,n.elm,i))}}function h(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,v(n)?(g(n,e),y(n)):(kr(n),e.push(n))}function f(n,e,t){o(n)&&(o(t)?u.parentNode(t)===n&&u.insertBefore(n,e,t):u.appendChild(n,e))}function m(n,e,t){if(i(e)){0;for(var r=0;r<e.length;++r)p(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&u.appendChild(n.elm,u.createTextNode(String(n.text)))}function v(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function g(n,t){for(var i=0;i<r.create.length;++i)r.create[i](_r,n);o(e=n.data.hook)&&(o(e.create)&&e.create(_r,n),o(e.insert)&&t.push(n))}function y(n){var e;if(o(e=n.fnScopeId))u.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e),t=t.parent;o(e=Ke)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&u.setStyleScope(n.elm,e)}function w(n,e,t,r,i,a){for(;r<=i;++r)p(t[r],a,n,e,!1,t,r)}function k(n){var e,t,i=n.data;if(o(i))for(o(e=i.hook)&&o(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)k(n.children[t])}function x(n,e,t){for(;e<=t;++e){var r=n[e];o(r)&&(o(r.tag)?(_(r),k(r)):d(r.elm))}}function _(n,e){if(o(e)||o(n.data)){var t,i=r.remove.length+1;for(o(e)?e.listeners+=i:e=function(n,e){function t(){0==--t.listeners&&d(n)}return t.listeners=e,t}(n.elm,i),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&_(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else d(n.elm)}function T(n,e,t,r){for(var i=t;i<r;i++){var a=e[i];if(o(a)&&Sr(n,a))return i}}function S(n,e,t,i,l,c){if(n!==e){o(e.elm)&&o(i)&&(e=i[l]=vn(e));var d=e.elm=n.elm;if(s(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?A(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var h,f=e.data;o(f)&&o(h=f.hook)&&o(h=h.prepatch)&&h(n,e);var m=n.children,g=e.children;if(o(f)&&v(e)){for(h=0;h<r.update.length;++h)r.update[h](n,e);o(h=f.hook)&&o(h=h.update)&&h(n,e)}a(e.text)?o(m)&&o(g)?m!==g&&function(n,e,t,r,i){var s,l,c,d=0,h=0,f=e.length-1,m=e[0],v=e[f],g=t.length-1,b=t[0],y=t[g],k=!i;for(0;d<=f&&h<=g;)a(m)?m=e[++d]:a(v)?v=e[--f]:Sr(m,b)?(S(m,b,r,t,h),m=e[++d],b=t[++h]):Sr(v,y)?(S(v,y,r,t,g),v=e[--f],y=t[--g]):Sr(m,y)?(S(m,y,r,t,g),k&&u.insertBefore(n,m.elm,u.nextSibling(v.elm)),m=e[++d],y=t[--g]):Sr(v,b)?(S(v,b,r,t,h),k&&u.insertBefore(n,v.elm,m.elm),v=e[--f],b=t[++h]):(a(s)&&(s=Er(e,d,f)),a(l=o(b.key)?s[b.key]:T(b,e,d,f))?p(b,r,n,m.elm,!1,t,h):Sr(c=e[l],b)?(S(c,b,r,t,h),e[l]=void 0,k&&u.insertBefore(n,c.elm,m.elm)):p(b,r,n,m.elm,!1,t,h),b=t[++h]);d>f?w(n,a(t[g+1])?null:t[g+1].elm,t,h,g,r):h>g&&x(e,d,f)}(d,m,g,t,c):o(g)?(o(n.text)&&u.setTextContent(d,""),w(d,null,g,0,g.length-1,t)):o(m)?x(m,0,m.length-1):o(n.text)&&u.setTextContent(d,""):n.text!==e.text&&u.setTextContent(d,e.text),o(f)&&o(h=f.hook)&&o(h=h.postpatch)&&h(n,e)}}}function E(n,e,t){if(s(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var C=b("attrs,class,staticClass,staticStyle,key");function A(n,e,t,r){var i,a=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,s(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(i=l.hook)&&o(i=i.init)&&i(e,!0),o(i=e.componentInstance)))return h(e,t),!0;if(o(a)){if(o(c))if(n.hasChildNodes())if(o(i=l)&&o(i=i.domProps)&&o(i=i.innerHTML)){if(i!==n.innerHTML)return!1}else{for(var u=!0,d=n.firstChild,p=0;p<c.length;p++){if(!d||!A(d,c[p],t,r)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else m(e,c,t);if(o(l)){var f=!1;for(var v in l)if(!C(v)){f=!0,g(e,t);break}!f&&l.class&&Fe(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,i){if(!a(e)){var l,c=!1,d=[];if(a(n))c=!0,p(e,d);else{var h=o(n.nodeType);if(!h&&Sr(n,e))S(n,e,d,null,null,i);else{if(h){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&A(n,e,d))return E(e,d,!0),n;l=n,n=new hn(u.tagName(l).toLowerCase(),{},[],void 0,l)}var f=n.elm,m=u.parentNode(f);if(p(e,d,f._leaveCb?null:m,u.nextSibling(f)),o(e.parent))for(var g=e.parent,b=v(e);g;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](g);if(g.elm=e.elm,b){for(var w=0;w<r.create.length;++w)r.create[w](_r,g);var _=g.data.hook.insert;if(_.merged)for(var T=1;T<_.fns.length;T++)_.fns[T]()}else kr(g);g=g.parent}o(m)?x([n],0,0):o(n.tag)&&k(n)}}return E(e,d,c),e.elm}o(n)&&k(n)}}({nodeOps:yr,modules:[$r,Nr,Gr,Kr,si,H?{create:Pi,activate:Pi,remove:function(n,e){!0!==n.data.show?Ai(n,e):e()}}:{}].concat(Br)});Z&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Ni(n,"input")}));var Bi={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?Gn(t,"postpatch",(function(){Bi.componentUpdated(n,e,t)})):zi(n,e,t.context),n._vOptions=[].map.call(n.options,$i)):("textarea"===t.tag||br(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Ri),n.addEventListener("compositionend",Li),n.addEventListener("change",Li),Z&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){zi(n,e,t.context);var r=n._vOptions,i=n._vOptions=[].map.call(n.options,$i);if(i.some((function(n,e){return!M(n,r[e])})))(n.multiple?e.value.some((function(n){return Mi(n,i)})):e.value!==e.oldValue&&Mi(e.value,i))&&Ni(n,"change")}}};function zi(n,e,t){Di(n,e,t),(K||X)&&setTimeout((function(){Di(n,e,t)}),0)}function Di(n,e,t){var r=e.value,i=n.multiple;if(!i||Array.isArray(r)){for(var a,o,s=0,l=n.options.length;s<l;s++)if(o=n.options[s],i)a=$(r,$i(o))>-1,o.selected!==a&&(o.selected=a);else if(M($i(o),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));i||(n.selectedIndex=-1)}}function Mi(n,e){return e.every((function(e){return!M(e,n)}))}function $i(n){return"_value"in n?n._value:n.value}function Ri(n){n.target.composing=!0}function Li(n){n.target.composing&&(n.target.composing=!1,Ni(n.target,"input"))}function Ni(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Ui(n){return!n.componentInstance||n.data&&n.data.transition?n:Ui(n.componentInstance._vnode)}var Fi={model:Bi,show:{bind:function(n,e,t){var r=e.value,i=(t=Ui(t)).data&&t.data.transition,a=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&i?(t.data.show=!0,Ci(t,(function(){n.style.display=a}))):n.style.display=r?a:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=Ui(t)).data&&t.data.transition?(t.data.show=!0,r?Ci(t,(function(){n.style.display=n.__vOriginalDisplay})):Ai(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,i){i||(n.style.display=n.__vOriginalDisplay)}}},Ji={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Vi(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Vi(Te(e.children)):n}function qi(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var i=t._parentListeners;for(var r in i)e[S(r)]=i[r];return e}function Wi(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Gi=function(n){return n.tag||fe(n)},Hi=function(n){return"show"===n.name},Qi={name:"transition",props:Ji,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Gi)).length){0;var r=this.mode;0;var i=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return i;var a=Vi(i);if(!a)return i;if(this._leaving)return Wi(n,i);var o="__transition-".concat(this._uid,"-");a.key=null==a.key?a.isComment?o+"comment":o+a.tag:l(a.key)?0===String(a.key).indexOf(o)?a.key:o+a.key:a.key;var s=(a.data||(a.data={})).transition=qi(this),c=this._vnode,u=Vi(c);if(a.data.directives&&a.data.directives.some(Hi)&&(a.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(a,u)&&!fe(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=P({},s);if("out-in"===r)return this._leaving=!0,Gn(d,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Wi(n,i);if("in-out"===r){if(fe(a))return c;var p,h=function(){p()};Gn(s,"afterEnter",h),Gn(s,"enterCancelled",h),Gn(d,"delayLeave",(function(n){p=n}))}}return i}}},Ki=P({tag:String,moveClass:String},Ji);function Zi(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Xi(n){n.data.newPos=n.elm.getBoundingClientRect()}function Yi(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,i=e.top-t.top;if(r||i){n.data.moved=!0;var a=n.elm.style;a.transform=a.WebkitTransform="translate(".concat(r,"px,").concat(i,"px)"),a.transitionDuration="0s"}}delete Ki.mode;var na={Transition:Qi,TransitionGroup:{props:Ki,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var i=Ze(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,i(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],a=this.children=[],o=qi(this),s=0;s<i.length;s++){if((u=i[s]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))a.push(u),t[u.key]=u,(u.data||(u.data={})).transition=o;else;}if(r){var l=[],c=[];for(s=0;s<r.length;s++){var u;(u=r[s]).data.transition=o,u.data.pos=u.elm.getBoundingClientRect(),t[u.key]?l.push(u):c.push(u)}this.kept=n(e,null,l),this.removed=c}return n(e,null,a)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Zi),n.forEach(Xi),n.forEach(Yi),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;wi(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(mi,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(mi,n),t._moveCb=null,ki(t,e))})}})))},methods:{hasMove:function(n,e){if(!hi)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){ui(t,n)})),ci(t,e),t.style.display="none",this.$el.appendChild(t);var r=Ti(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};function ea(n,e){for(var t in e)n[t]=e[t];return n}Wt.config.mustUseProp=function(n,e,t){return"value"===t&&er(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Wt.config.isReservedTag=vr,Wt.config.isReservedAttr=nr,Wt.config.getTagNamespace=function(n){return mr(n)?"svg":"math"===n?"math":void 0},Wt.config.isUnknownElement=function(n){if(!H)return!0;if(vr(n))return!1;if(n=n.toLowerCase(),null!=gr[n])return gr[n];var e=document.createElement(n);return n.indexOf("-")>-1?gr[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:gr[n]=/HTMLUnknownElement/.test(e.toString())},P(Wt.options.directives,Fi),P(Wt.options.components,na),Wt.prototype.__patch__=H?Oi:B,Wt.prototype.$mount=function(n,e){return function(n,e,t){var r;n.$el=e,n.$options.render||(n.$options.render=fn),nt(n,"beforeMount"),r=function(){n._update(n._render(),t)},new qe(n,r,B,{before:function(){n._isMounted&&!n._isDestroyed&&nt(n,"beforeUpdate")}},!0),t=!1;var i=n._preWatchers;if(i)for(var a=0;a<i.length;a++)i[a].run();return null==n.$vnode&&(n._isMounted=!0,nt(n,"mounted")),n}(this,n=n&&H?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},H&&setTimeout((function(){F.devtools&&sn&&sn.emit("init",Wt)}),0);var ta=/[!'()*]/g,ra=function(n){return"%"+n.charCodeAt(0).toString(16)},ia=/%2C/g,aa=function(n){return encodeURIComponent(n).replace(ta,ra).replace(ia,",")};function oa(n){try{return decodeURIComponent(n)}catch(n){0}return n}var sa=function(n){return null==n||"object"==typeof n?n:String(n)};function la(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=oa(t.shift()),i=t.length>0?oa(t.join("=")):null;void 0===e[r]?e[r]=i:Array.isArray(e[r])?e[r].push(i):e[r]=[e[r],i]})),e):e}function ca(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return aa(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(aa(e)):r.push(aa(e)+"="+aa(n)))})),r.join("&")}return aa(e)+"="+aa(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var ua=/\/?$/;function da(n,e,t,r){var i=r&&r.options.stringifyQuery,a=e.query||{};try{a=pa(a)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:ma(e,i),matched:n?fa(n):[]};return t&&(o.redirectedFrom=ma(t,i)),Object.freeze(o)}function pa(n){if(Array.isArray(n))return n.map(pa);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=pa(n[t]);return e}return n}var ha=da(null,{path:"/"});function fa(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function ma(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var i=n.hash;return void 0===i&&(i=""),(t||"/")+(e||ca)(r)+i}function va(n,e,t){return e===ha?n===e:!!e&&(n.path&&e.path?n.path.replace(ua,"")===e.path.replace(ua,"")&&(t||n.hash===e.hash&&ga(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&ga(n.query,e.query)&&ga(n.params,e.params))))}function ga(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,i){var a=n[t];if(r[i]!==t)return!1;var o=e[t];return null==a||null==o?a===o:"object"==typeof a&&"object"==typeof o?ga(a,o):String(a)===String(o)}))}function ba(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var i=t.instances[r],a=t.enteredCbs[r];if(i&&a){delete t.enteredCbs[r];for(var o=0;o<a.length;o++)i._isBeingDestroyed||a[o](i)}}}}var ya={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,i=e.parent,a=e.data;a.routerView=!0;for(var o=i.$createElement,s=t.name,l=i.$route,c=i._routerViewCache||(i._routerViewCache={}),u=0,d=!1;i&&i._routerRoot!==i;){var p=i.$vnode?i.$vnode.data:{};p.routerView&&u++,p.keepAlive&&i._directInactive&&i._inactive&&(d=!0),i=i.$parent}if(a.routerViewDepth=u,d){var h=c[s],f=h&&h.component;return f?(h.configProps&&wa(f,a,h.route,h.configProps),o(f,a,r)):o()}var m=l.matched[u],v=m&&m.components[s];if(!m||!v)return c[s]=null,o();c[s]={component:v},a.registerRouteInstance=function(n,e){var t=m.instances[s];(e&&t!==n||!e&&t===n)&&(m.instances[s]=e)},(a.hook||(a.hook={})).prepatch=function(n,e){m.instances[s]=e.componentInstance},a.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==m.instances[s]&&(m.instances[s]=n.componentInstance),ba(l)};var g=m.props&&m.props[s];return g&&(ea(c[s],{route:l,configProps:g}),wa(v,a,l,g)),o(v,a,r)}};function wa(n,e,t,r){var i=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(i){i=e.props=ea({},i);var a=e.attrs=e.attrs||{};for(var o in i)n.props&&o in n.props||(a[o]=i[o],delete i[o])}}function ka(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var i=e.split("/");t&&i[i.length-1]||i.pop();for(var a=n.replace(/^\//,"").split("/"),o=0;o<a.length;o++){var s=a[o];".."===s?i.pop():"."!==s&&i.push(s)}return""!==i[0]&&i.unshift(""),i.join("/")}function xa(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var _a=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},Ta=Ra,Sa=Ia,Ea=function(n,e){return Oa(Ia(n,e),e)},Ca=Oa,Aa=$a,ja=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Ia(n,e){for(var t,r=[],i=0,a=0,o="",s=e&&e.delimiter||"/";null!=(t=ja.exec(n));){var l=t[0],c=t[1],u=t.index;if(o+=n.slice(a,u),a=u+l.length,c)o+=c[1];else{var d=n[a],p=t[2],h=t[3],f=t[4],m=t[5],v=t[6],g=t[7];o&&(r.push(o),o="");var b=null!=p&&null!=d&&d!==p,y="+"===v||"*"===v,w="?"===v||"*"===v,k=t[2]||s,x=f||m;r.push({name:h||i++,prefix:p||"",delimiter:k,optional:w,repeat:y,partial:b,asterisk:!!g,pattern:x?za(x):g?".*":"[^"+Ba(k)+"]+?"})}}return a<n.length&&(o+=n.substr(a)),o&&r.push(o),r}function Pa(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function Oa(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",Ma(e)));return function(e,r){for(var i="",a=e||{},o=(r||{}).pretty?Pa:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,u=a[l.name];if(null==u){if(l.optional){l.partial&&(i+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(_a(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=o(u[d]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");i+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(u),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');i+=l.prefix+c}}else i+=l}return i}}function Ba(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function za(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Da(n,e){return n.keys=e,n}function Ma(n){return n&&n.sensitive?"":"i"}function $a(n,e,t){_a(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,i=!1!==t.end,a="",o=0;o<n.length;o++){var s=n[o];if("string"==typeof s)a+=Ba(s);else{var l=Ba(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),a+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=Ba(t.delimiter||"/"),d=a.slice(-u.length)===u;return r||(a=(d?a.slice(0,-u.length):a)+"(?:"+u+"(?=$))?"),a+=i?"$":r&&d?"":"(?="+u+"|$)",Da(new RegExp("^"+a,Ma(t)),e)}function Ra(n,e,t){return _a(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Da(n,e)}(n,e):_a(n)?function(n,e,t){for(var r=[],i=0;i<n.length;i++)r.push(Ra(n[i],e,t).source);return Da(new RegExp("(?:"+r.join("|")+")",Ma(t)),e)}(n,e,t):function(n,e,t){return $a(Ia(n,t),e,t)}(n,e,t)}Ta.parse=Sa,Ta.compile=Ea,Ta.tokensToFunction=Ca,Ta.tokensToRegExp=Aa;var La=Object.create(null);function Na(n,e,t){e=e||{};try{var r=La[n]||(La[n]=Ta.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Ua(n,e,t,r){var i="string"==typeof n?{path:n}:n;if(i._normalized)return i;if(i.name){var a=(i=ea({},n)).params;return a&&"object"==typeof a&&(i.params=ea({},a)),i}if(!i.path&&i.params&&e){(i=ea({},i))._normalized=!0;var o=ea(ea({},e.params),i.params);if(e.name)i.name=e.name,i.params=o;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;i.path=Na(s,o,e.path)}else 0;return i}var l=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var i=n.indexOf("?");return i>=0&&(t=n.slice(i+1),n=n.slice(0,i)),{path:n,query:t,hash:e}}(i.path||""),c=e&&e.path||"/",u=l.path?ka(l.path,c,t||i.append):c,d=function(n,e,t){void 0===e&&(e={});var r,i=t||la;try{r=i(n||"")}catch(n){r={}}for(var a in e){var o=e[a];r[a]=Array.isArray(o)?o.map(sa):sa(o)}return r}(l.query,i.query,r&&r.options.parseQuery),p=i.hash||l.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:u,query:d,hash:p}}var Fa,Ja=function(){},Va={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,i=t.resolve(this.to,r,this.append),a=i.location,o=i.route,s=i.href,l={},c=t.options.linkActiveClass,u=t.options.linkExactActiveClass,d=null==c?"router-link-active":c,p=null==u?"router-link-exact-active":u,h=null==this.activeClass?d:this.activeClass,f=null==this.exactActiveClass?p:this.exactActiveClass,m=o.redirectedFrom?da(null,Ua(o.redirectedFrom),null,t):o;l[f]=va(r,m,this.exactPath),l[h]=this.exact||this.exactPath?l[f]:function(n,e){return 0===n.path.replace(ua,"/").indexOf(e.path.replace(ua,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,m);var v=l[f]?this.ariaCurrentValue:null,g=function(n){qa(n)&&(e.replace?t.replace(a,Ja):t.push(a,Ja))},b={click:qa};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=g})):b[this.event]=g;var y={class:l},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:g,isActive:l[h],isExactActive:l[f]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?n():n("span",{},w)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":v};else{var k=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(k){k.isStatic=!1;var x=k.data=ea({},k.data);for(var _ in x.on=x.on||{},x.on){var T=x.on[_];_ in b&&(x.on[_]=Array.isArray(T)?T:[T])}for(var S in b)S in x.on?x.on[S].push(b[S]):x.on[S]=g;var E=k.data.attrs=ea({},k.data.attrs);E.href=s,E["aria-current"]=v}else y.on=b}return n(this.tag,y,this.$slots.default)}};function qa(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Wa="undefined"!=typeof window;function Ga(n,e,t,r,i){var a=e||[],o=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,i,a,o){var s=i.path,l=i.name;0;var c=i.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return xa(e.path+"/"+n)}(s,a,c.strict);"boolean"==typeof i.caseSensitive&&(c.sensitive=i.caseSensitive);var d={path:u,regex:Ha(u,c),components:i.components||{default:i.component},alias:i.alias?"string"==typeof i.alias?[i.alias]:i.alias:[],instances:{},enteredCbs:{},name:l,parent:a,matchAs:o,redirect:i.redirect,beforeEnter:i.beforeEnter,meta:i.meta||{},props:null==i.props?{}:i.components?i.props:{default:i.props}};i.children&&i.children.forEach((function(i){var a=o?xa(o+"/"+i.path):void 0;n(e,t,r,i,d,a)}));t[d.path]||(e.push(d.path),t[d.path]=d);if(void 0!==i.alias)for(var p=Array.isArray(i.alias)?i.alias:[i.alias],h=0;h<p.length;++h){0;var f={path:p[h],children:i.children};n(e,t,r,f,a,d.path||"/")}l&&(r[l]||(r[l]=d))}(a,o,s,n,i)}));for(var l=0,c=a.length;l<c;l++)"*"===a[l]&&(a.push(a.splice(l,1)[0]),c--,l--);return{pathList:a,pathMap:o,nameMap:s}}function Ha(n,e){return Ta(n,[],e)}function Qa(n,e){var t=Ga(n),r=t.pathList,i=t.pathMap,a=t.nameMap;function o(n,t,o){var s=Ua(n,t,!1,e),c=s.name;if(c){var u=a[c];if(!u)return l(null,s);var d=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=Na(u.path,s.params),l(u,s,o)}if(s.path){s.params={};for(var h=0;h<r.length;h++){var f=r[h],m=i[f];if(Ka(m.regex,s.path,s.params))return l(m,s,o)}}return l(null,s)}function s(n,t){var r=n.redirect,i="function"==typeof r?r(da(n,t,null,e)):r;if("string"==typeof i&&(i={path:i}),!i||"object"!=typeof i)return l(null,t);var s=i,c=s.name,u=s.path,d=t.query,p=t.hash,h=t.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,h=s.hasOwnProperty("params")?s.params:h,c){a[c];return o({_normalized:!0,name:c,query:d,hash:p,params:h},void 0,t)}if(u){var f=function(n,e){return ka(n,e.parent?e.parent.path:"/",!0)}(u,n);return o({_normalized:!0,path:Na(f,h),query:d,hash:p},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=o({_normalized:!0,path:Na(t,e.params)});if(r){var i=r.matched,a=i[i.length-1];return e.params=r.params,l(a,e)}return l(null,e)}(0,t,n.matchAs):da(n,t,r,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?a[n]:void 0;Ga([e||n],r,i,a,t),t&&t.alias.length&&Ga(t.alias.map((function(n){return{path:n,children:[e]}})),r,i,a,t)},getRoutes:function(){return r.map((function(n){return i[n]}))},addRoutes:function(n){Ga(n,r,i,a)}}}function Ka(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var i=1,a=r.length;i<a;++i){var o=n.keys[i-1];o&&(t[o.name||"pathMatch"]="string"==typeof r[i]?oa(r[i]):r[i])}return!0}var Za=Wa&&window.performance&&window.performance.now?window.performance:Date;function Xa(){return Za.now().toFixed(3)}var Ya=Xa();function no(){return Ya}function eo(n){return Ya=n}var to=Object.create(null);function ro(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=ea({},window.history.state);return t.key=no(),window.history.replaceState(t,"",e),window.addEventListener("popstate",oo),function(){window.removeEventListener("popstate",oo)}}function io(n,e,t,r){if(n.app){var i=n.options.scrollBehavior;i&&n.app.$nextTick((function(){var a=function(){var n=no();if(n)return to[n]}(),o=i.call(n,e,t,r?a:null);o&&("function"==typeof o.then?o.then((function(n){po(n,a)})).catch((function(n){0})):po(o,a))}))}}function ao(){var n=no();n&&(to[n]={x:window.pageXOffset,y:window.pageYOffset})}function oo(n){ao(),n.state&&n.state.key&&eo(n.state.key)}function so(n){return co(n.x)||co(n.y)}function lo(n){return{x:co(n.x)?n.x:window.pageXOffset,y:co(n.y)?n.y:window.pageYOffset}}function co(n){return"number"==typeof n}var uo=/^#\d/;function po(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var i=uo.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(i){var a=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(i,a={x:co((t=a).x)?t.x:0,y:co(t.y)?t.y:0})}else so(n)&&(e=lo(n))}else r&&so(n)&&(e=lo(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var ho,fo=Wa&&((-1===(ho=window.navigator.userAgent).indexOf("Android 2.")&&-1===ho.indexOf("Android 4.0")||-1===ho.indexOf("Mobile Safari")||-1!==ho.indexOf("Chrome")||-1!==ho.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function mo(n,e){ao();var t=window.history;try{if(e){var r=ea({},t.state);r.key=no(),t.replaceState(r,"",n)}else t.pushState({key:eo(Xa())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function vo(n){mo(n,!0)}var go={redirected:2,aborted:4,cancelled:8,duplicated:16};function bo(n,e){return wo(n,e,go.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return ko.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function yo(n,e){return wo(n,e,go.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function wo(n,e,t,r){var i=new Error(r);return i._isRouter=!0,i.from=n,i.to=e,i.type=t,i}var ko=["params","query","hash"];function xo(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function _o(n,e){return xo(n)&&n._isRouter&&(null==e||n.type===e)}function To(n,e,t){var r=function(i){i>=n.length?t():n[i]?e(n[i],(function(){r(i+1)})):r(i+1)};r(0)}function So(n){return function(e,t,r){var i=!1,a=0,o=null;Eo(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){i=!0,a++;var l,c=jo((function(e){var i;((i=e).__esModule||Ao&&"Module"===i[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:Fa.extend(e),t.components[s]=e,--a<=0&&r()})),u=jo((function(n){var e="Failed to resolve async component "+s+": "+n;o||(o=xo(n)?n:new Error(e),r(o))}));try{l=n(c,u)}catch(n){u(n)}if(l)if("function"==typeof l.then)l.then(c,u);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),i||r()}}function Eo(n,e){return Co(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Co(n){return Array.prototype.concat.apply([],n)}var Ao="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function jo(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var Io=function(n,e){this.router=n,this.base=function(n){if(!n)if(Wa){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=ha,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Po(n,e,t,r){var i=Eo(n,(function(n,r,i,a){var o=function(n,e){"function"!=typeof n&&(n=Fa.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,r,i,a)})):t(o,r,i,a)}));return Co(r?i.reverse():i)}function Oo(n,e){if(e)return function(){return n.apply(e,arguments)}}Io.prototype.listen=function(n){this.cb=n},Io.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Io.prototype.onError=function(n){this.errorCbs.push(n)},Io.prototype.transitionTo=function(n,e,t){var r,i=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var a=this.current;this.confirmTransition(r,(function(){i.updateRoute(r),e&&e(r),i.ensureURL(),i.router.afterHooks.forEach((function(n){n&&n(r,a)})),i.ready||(i.ready=!0,i.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!i.ready&&(_o(n,go.redirected)&&a===ha||(i.ready=!0,i.readyErrorCbs.forEach((function(e){e(n)}))))}))},Io.prototype.confirmTransition=function(n,e,t){var r=this,i=this.current;this.pending=n;var a,o,s=function(n){!_o(n)&&xo(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=i.matched.length-1;if(va(n,i)&&l===c&&n.matched[l]===i.matched[c])return this.ensureURL(),n.hash&&io(this.router,i,n,!1),s(((o=wo(a=i,n,go.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",o));var u=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),d=u.updated,p=u.deactivated,h=u.activated,f=[].concat(function(n){return Po(n,"beforeRouteLeave",Oo,!0)}(p),this.router.beforeHooks,function(n){return Po(n,"beforeRouteUpdate",Oo)}(d),h.map((function(n){return n.beforeEnter})),So(h)),m=function(e,t){if(r.pending!==n)return s(yo(i,n));try{e(n,i,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return wo(n,e,go.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(i,n))):xo(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(bo(i,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};To(f,m,(function(){To(function(n){return Po(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,i,a){return n(r,i,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),a(n)}))}}(n,t,r)}))}(h).concat(r.router.resolveHooks),m,(function(){if(r.pending!==n)return s(yo(i,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){ba(n)}))}))}))},Io.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Io.prototype.setupListeners=function(){},Io.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=ha,this.pending=null};var Bo=function(n){function e(e,t){n.call(this,e,t),this._startLocation=zo(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=fo&&t;r&&this.listeners.push(ro());var i=function(){var t=n.current,i=zo(n.base);n.current===ha&&i===n._startLocation||n.transitionTo(i,(function(n){r&&io(e,n,t,!0)}))};window.addEventListener("popstate",i),this.listeners.push((function(){window.removeEventListener("popstate",i)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){mo(xa(r.base+n.fullPath)),io(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){vo(xa(r.base+n.fullPath)),io(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(zo(this.base)!==this.current.fullPath){var e=xa(this.base+this.current.fullPath);n?mo(e):vo(e)}},e.prototype.getCurrentLocation=function(){return zo(this.base)},e}(Io);function zo(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(xa(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Do=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=zo(n);if(!/^\/#/.test(e))return window.location.replace(xa(n+"/#"+e)),!0}(this.base)||Mo()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=fo&&e;t&&this.listeners.push(ro());var r=function(){var e=n.current;Mo()&&n.transitionTo($o(),(function(r){t&&io(n.router,r,e,!0),fo||No(r.fullPath)}))},i=fo?"popstate":"hashchange";window.addEventListener(i,r),this.listeners.push((function(){window.removeEventListener(i,r)}))}},e.prototype.push=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){Lo(n.fullPath),io(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,i=this.current;this.transitionTo(n,(function(n){No(n.fullPath),io(r.router,n,i,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;$o()!==e&&(n?Lo(e):No(e))},e.prototype.getCurrentLocation=function(){return $o()},e}(Io);function Mo(){var n=$o();return"/"===n.charAt(0)||(No("/"+n),!1)}function $o(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Ro(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Lo(n){fo?mo(Ro(n)):window.location.hash=n}function No(n){fo?vo(Ro(n)):window.location.replace(Ro(n))}var Uo=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){_o(n,go.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Io),Fo=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Qa(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!fo&&!1!==n.fallback,this.fallback&&(e="hash"),Wa||(e="abstract"),this.mode=e,e){case"history":this.history=new Bo(this,n.base);break;case"hash":this.history=new Do(this,n.base,this.fallback);break;case"abstract":this.history=new Uo(this,n.base);break;default:0}},Jo={currentRoute:{configurable:!0}};Fo.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Jo.currentRoute.get=function(){return this.history&&this.history.current},Fo.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Bo||t instanceof Do){var r=function(n){t.setupListeners(),function(n){var r=t.current,i=e.options.scrollBehavior;fo&&i&&"fullPath"in n&&io(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Fo.prototype.beforeEach=function(n){return qo(this.beforeHooks,n)},Fo.prototype.beforeResolve=function(n){return qo(this.resolveHooks,n)},Fo.prototype.afterEach=function(n){return qo(this.afterHooks,n)},Fo.prototype.onReady=function(n,e){this.history.onReady(n,e)},Fo.prototype.onError=function(n){this.history.onError(n)},Fo.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},Fo.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},Fo.prototype.go=function(n){this.history.go(n)},Fo.prototype.back=function(){this.go(-1)},Fo.prototype.forward=function(){this.go(1)},Fo.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Fo.prototype.resolve=function(n,e,t){var r=Ua(n,e=e||this.history.current,t,this),i=this.match(r,e),a=i.redirectedFrom||i.fullPath;return{location:r,route:i,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?xa(n+"/"+r):r}(this.history.base,a,this.mode),normalizedTo:r,resolved:i}},Fo.prototype.getRoutes=function(){return this.matcher.getRoutes()},Fo.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==ha&&this.history.transitionTo(this.history.getCurrentLocation())},Fo.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==ha&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Fo.prototype,Jo);var Vo=Fo;function qo(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Fo.install=function n(e){if(!n.installed||Fa!==e){n.installed=!0,Fa=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",ya),e.component("RouterLink",Va);var i=e.config.optionMergeStrategies;i.beforeRouteEnter=i.beforeRouteLeave=i.beforeRouteUpdate=i.created}},Fo.version="3.6.5",Fo.isNavigationFailure=_o,Fo.NavigationFailureType=go,Fo.START_LOCATION=ha,Wa&&window.Vue&&window.Vue.use(Fo);t(110);t(16),t(137);var Wo={NotFound:()=>Promise.all([t.e(0),t.e(11)]).then(t.bind(null,366)),Layout:()=>Promise.all([t.e(0),t.e(2)]).then(t.bind(null,364))},Go={"v-4f626db6":()=>t.e(15).then(t.bind(null,375)),"v-bb479bb0":()=>t.e(16).then(t.bind(null,376)),"v-6a9c6129":()=>t.e(17).then(t.bind(null,377)),"v-0bc39c2e":()=>t.e(18).then(t.bind(null,378)),"v-446131ae":()=>t.e(19).then(t.bind(null,379)),"v-bde2967c":()=>t.e(20).then(t.bind(null,380)),"v-8ff1aee6":()=>t.e(21).then(t.bind(null,381)),"v-171cb300":()=>t.e(22).then(t.bind(null,382)),"v-abf21084":()=>t.e(23).then(t.bind(null,383)),"v-5b0c8d58":()=>t.e(24).then(t.bind(null,384)),"v-16c87ba2":()=>t.e(25).then(t.bind(null,385)),"v-cde56040":()=>t.e(26).then(t.bind(null,386)),"v-89e951b8":()=>t.e(27).then(t.bind(null,387)),"v-3bc8f191":()=>t.e(28).then(t.bind(null,388)),"v-a460c28e":()=>t.e(29).then(t.bind(null,389)),"v-ed7c4fe0":()=>t.e(30).then(t.bind(null,390)),"v-5a148b1e":()=>t.e(31).then(t.bind(null,391)),"v-06d2254f":()=>t.e(32).then(t.bind(null,392)),"v-09c34755":()=>t.e(33).then(t.bind(null,393)),"v-5b98320c":()=>t.e(34).then(t.bind(null,394)),"v-29c3dbd6":()=>t.e(35).then(t.bind(null,395)),"v-53c62012":()=>t.e(36).then(t.bind(null,396)),"v-ec7b20e8":()=>t.e(37).then(t.bind(null,397)),"v-d3678320":()=>t.e(38).then(t.bind(null,398)),"v-3f839182":()=>t.e(39).then(t.bind(null,399)),"v-31ef5fea":()=>t.e(40).then(t.bind(null,400)),"v-4b8e2ad1":()=>t.e(41).then(t.bind(null,401)),"v-c72cbf9e":()=>t.e(42).then(t.bind(null,402)),"v-0f04c75e":()=>t.e(43).then(t.bind(null,403)),"v-8b098c2c":()=>t.e(44).then(t.bind(null,404)),"v-75bb3f8e":()=>t.e(45).then(t.bind(null,405)),"v-31eda728":()=>t.e(46).then(t.bind(null,406)),"v-45a4b1a0":()=>t.e(47).then(t.bind(null,407))};function Ho(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Qo=/-(\w)/g,Ko=Ho(n=>n.replace(Qo,(n,e)=>e?e.toUpperCase():"")),Zo=/\B([A-Z])/g,Xo=Ho(n=>n.replace(Zo,"-$1").toLowerCase()),Yo=Ho(n=>n.charAt(0).toUpperCase()+n.slice(1));function ns(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(Yo(Ko(e))):n(Yo(e))||n(Xo(e))}const es=Object.assign({},Wo,Go),ts=n=>es[n],rs=n=>Go[n],is=n=>Wo[n],as=n=>Wt.component(n);function os(n){return ns(rs,n)}function ss(n){return ns(is,n)}function ls(n){return ns(ts,n)}function cs(n){return ns(as,n)}function us(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!cs(n)&&ls(n)){const e=await ls(n)();Wt.component(n,e.default)}}))}function ds(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var ps=t(97),hs=t.n(ps),fs=t(98),ms=t.n(fs),vs={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${ms()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=bs(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=ys(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return hs()([{name:"description",content:this.$description}],n,this.siteMeta,ws)},updateCanonicalLink(){gs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",bs(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){ys(null,this.currentMetaTags),gs()}};function gs(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function bs(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function ys(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function ws(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var ks=t(52),xs={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(ks)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+t;for(let n=0;n<e.length;n++){const a=e[n],o=e[n+1],s=0===n&&0===t||t>=a.parentElement.offsetTop+10&&(!o||t<o.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(a.hash)){const t=a;if(i===r)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},_s=t(27),Ts=t.n(_s),Ss={mounted(){Ts.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Wt.component(n.name)||Ts.a.start(),t()}),this.$router.afterEach(()=>{Ts.a.done(),this.isSidebarOpen=!1})}};t(244),t(245);class Es{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var Cs={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new Es).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},As="auto",js="zoom-in",Is="zoom-out",Ps="grab",Os="move";function Bs(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i={passive:!1};r?n.addEventListener(e,t,i):n.removeEventListener(e,t,i)}function zs(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Ds(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Ms(n,e,t){!function(n){var e=$s,t=Rs;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var i=n.transform;delete n.transform,n[t]=i}}(e);var r=n.style,i={};for(var a in e)t&&(i[a]=r[a]||""),r[a]=e[a];return i}var $s="transition",Rs="transform",Ls="transform",Ns="transitionend";var Us=function(){},Fs={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Us,onClose:Us,onGrab:Us,onMove:Us,onRelease:Us,onBeforeOpen:Us,onBeforeClose:Us,onBeforeGrab:Us,onBeforeRelease:Us,onImageLoading:Us,onImageLoaded:Us},Js={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),qs(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,i=this.lastScrollPosition.y-t,a=this.options.scrollThreshold;(Math.abs(i)>=a||Math.abs(r)>=a)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Vs(n)&&!qs(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Vs(n)&&!qs(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Vs(n){return 0===n.button}function qs(n){return n.metaKey||n.ctrlKey}var Ws={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Ms(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Bs(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Ms(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Gs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Hs=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),Qs=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Ks={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Ds(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,i=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?Ps:Is,transition:Ls+"\n        "+r+"s\n        "+i,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Ms(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Ms(this.el,{transform:"none"})},grab:function(n,e,t){var r=Zs(),i=r.x-n,a=r.y-e;Ms(this.el,{cursor:Os,transform:"translate3d(\n        "+(this.translate.x+i)+"px, "+(this.translate.y+a)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=Zs(),i=r.x-n,a=r.y-e;Ms(this.el,{transition:Ls,transform:"translate3d(\n        "+(this.translate.x+i)+"px, "+(this.translate.y+a)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Ms(this.el,this.styleClose)},restoreOpenStyle:function(){Ms(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Zs(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,i=r.customSize,a=r.scaleBase;if(!i&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(i&&"object"===(void 0===i?"undefined":Gs(i)))return{x:i.width/this.rect.width,y:i.height/this.rect.height};var o=this.rect.width/2,s=this.rect.height/2,l=Zs(),c={x:l.x-o,y:l.y-s},u=c.x/o,d=c.y/s,p=a+Math.min(u,d);if(i&&"string"==typeof i){var h=t||this.el.naturalWidth,f=e||this.el.naturalHeight,m=parseFloat(i)*h/(100*this.rect.width),v=parseFloat(i)*f/(100*this.rect.height);if(p>m||p>v)return{x:m,y:v}}return{x:p,y:p}}};function Zs(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function Xs(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Bs(n,r,e[r],t)}))}var Ys=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Ks),this.overlay=Object.create(Ws),this.handler=Object.create(Js),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Qs({},Fs,e),this.overlay.init(this),this.handler.init(this)}return Hs(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=js,Bs(n,"click",this.handler.click),this.options.preloadImage&&zs(Ds(n)));return this}},{key:"config",value:function(n){return n?(Qs(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var i=this.target.srcOriginal;null!=i&&(this.options.onImageLoading(r),zs(i,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Bs(document,"scroll",this.handler.scroll),Bs(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Bs(window,"resize",this.handler.resizeWindow);var a=function n(){Bs(r,Ns,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&Xs(document,e.handler,!0),t(r)};return Bs(r,Ns,a),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=As,this.overlay.fadeOut(),this.target.zoomOut(),Bs(document,"scroll",this.handler.scroll,!1),Bs(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Bs(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Bs(t,Ns,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&Xs(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Bs(t,Ns,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var i=this.target.el;this.options.onBeforeGrab(i),this.released=!1,this.target.grab(n,e,t);var a=function n(){Bs(i,Ns,n,!1),r(i)};return Bs(i,Ns,a),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Os,this.target.move(n,e,t);var i=this.target.el,a=function n(){Bs(i,Ns,n,!1),r(i)};return Bs(i,Ns,a),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=As,this.target.restoreOpenStyle();var r=function r(){Bs(t,Ns,r,!1),n.lock=!1,n.released=!0,e(t)};return Bs(t,Ns,r),this}}}]),n}();const nl=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),el=Number("500");class tl{constructor(){this.instance=new Ys(nl)}update(n=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=".theme-vdoing-content img:not(.no-zoom)",e=el){setTimeout(()=>this.update(n),e)}}var rl=[vs,xs,Ss,Cs,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new tl,this.$vuepress.zooming.updateDelay()}}],il={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return ds("layout",n),Wt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},al=t(0),ol=Object(al.a)(il,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(ol,"mixins",rl);const sl=[{name:"v-4f626db6",path:"/pages/cab623/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-4f626db6").then(t)}},{path:"/pages/cab623/index.html",redirect:"/pages/cab623/"},{path:"/10.后端/01.理论/01.幂等性.html",redirect:"/pages/cab623/"},{name:"v-bb479bb0",path:"/pages/7ec854/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-bb479bb0").then(t)}},{path:"/pages/7ec854/index.html",redirect:"/pages/7ec854/"},{path:"/10.后端/10.Java/01.Java动态代理之基础.html",redirect:"/pages/7ec854/"},{name:"v-6a9c6129",path:"/pages/c54936/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-6a9c6129").then(t)}},{path:"/pages/c54936/index.html",redirect:"/pages/c54936/"},{path:"/10.后端/10.Java/02.Java线程池详解.html",redirect:"/pages/c54936/"},{name:"v-0bc39c2e",path:"/pages/2f4254/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-0bc39c2e").then(t)}},{path:"/pages/2f4254/index.html",redirect:"/pages/2f4254/"},{path:"/10.后端/20.方案/01.JWT服务端主动失效方案.html",redirect:"/pages/2f4254/"},{name:"v-446131ae",path:"/pages/10dcf7/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-446131ae").then(t)}},{path:"/pages/10dcf7/index.html",redirect:"/pages/10dcf7/"},{path:"/10.后端/30.Spring专题/10.SpringBoot3.0快速上手.html",redirect:"/pages/10dcf7/"},{name:"v-bde2967c",path:"/pages/1fe498/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-bde2967c").then(t)}},{path:"/pages/1fe498/index.html",redirect:"/pages/1fe498/"},{path:"/20.前端/10.Vue3/01.使用pnpm搭建vite monorepo环境.html",redirect:"/pages/1fe498/"},{name:"v-8ff1aee6",path:"/pages/bbc17d/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-8ff1aee6").then(t)}},{path:"/pages/bbc17d/index.html",redirect:"/pages/bbc17d/"},{path:"/20.前端/10.Vue3/Vue3中setup获取子组件.html",redirect:"/pages/bbc17d/"},{name:"v-171cb300",path:"/pages/78f387/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-171cb300").then(t)}},{path:"/pages/78f387/index.html",redirect:"/pages/78f387/"},{path:"/20.前端/10.Vue3/Vue3笔记之emits.html",redirect:"/pages/78f387/"},{name:"v-abf21084",path:"/pages/2ad2e9/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-abf21084").then(t)}},{path:"/pages/2ad2e9/index.html",redirect:"/pages/2ad2e9/"},{path:"/20.前端/10.Vue3/Vue3笔记之v-for与v-if优先级.html",redirect:"/pages/2ad2e9/"},{name:"v-5b0c8d58",path:"/pages/80877c/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-5b0c8d58").then(t)}},{path:"/pages/80877c/index.html",redirect:"/pages/80877c/"},{path:"/20.前端/10.Vue3/Vue3笔记之事件.html",redirect:"/pages/80877c/"},{name:"v-16c87ba2",path:"/pages/04bd0a/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-16c87ba2").then(t)}},{path:"/pages/04bd0a/index.html",redirect:"/pages/04bd0a/"},{path:"/20.前端/10.Vue3/Vue3笔记之自定义指令.html",redirect:"/pages/04bd0a/"},{name:"v-cde56040",path:"/pages/ac0f1b/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-cde56040").then(t)}},{path:"/pages/ac0f1b/index.html",redirect:"/pages/ac0f1b/"},{path:"/20.前端/20.web/Vue中使用Axios自动刷新Token.html",redirect:"/pages/ac0f1b/"},{name:"v-89e951b8",path:"/pages/eb33ad/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-89e951b8").then(t)}},{path:"/pages/eb33ad/index.html",redirect:"/pages/eb33ad/"},{path:"/20.前端/20.web/yarn使用.html",redirect:"/pages/eb33ad/"},{name:"v-3bc8f191",path:"/pages/0e0bfe/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-3bc8f191").then(t)}},{path:"/pages/0e0bfe/index.html",redirect:"/pages/0e0bfe/"},{path:"/20.前端/30.flutter/Flutter Platform Channel数据类型对应关系.html",redirect:"/pages/0e0bfe/"},{name:"v-a460c28e",path:"/pages/12a234/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-a460c28e").then(t)}},{path:"/pages/12a234/index.html",redirect:"/pages/12a234/"},{path:"/30.数据/10.事务/事务专题一之事务理论.html",redirect:"/pages/12a234/"},{name:"v-ed7c4fe0",path:"/pages/8d33c7/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-ed7c4fe0").then(t)}},{path:"/pages/8d33c7/index.html",redirect:"/pages/8d33c7/"},{path:"/30.数据/10.事务/事务专题之SpringBoot事务.html",redirect:"/pages/8d33c7/"},{name:"v-5a148b1e",path:"/pages/7b8498/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-5a148b1e").then(t)}},{path:"/pages/7b8498/index.html",redirect:"/pages/7b8498/"},{path:"/30.数据/20.数据库/SQLite解析.html",redirect:"/pages/7b8498/"},{name:"v-06d2254f",path:"/pages/ede450/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-06d2254f").then(t)}},{path:"/pages/ede450/index.html",redirect:"/pages/ede450/"},{path:"/30.数据/30.数据访问/JDBC基础.html",redirect:"/pages/ede450/"},{name:"v-09c34755",path:"/pages/58ac01/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-09c34755").then(t)}},{path:"/pages/58ac01/index.html",redirect:"/pages/58ac01/"},{path:"/40.运维/解决Docker启动java进程号1的问题.html",redirect:"/pages/58ac01/"},{name:"v-5b98320c",path:"/pages/905694/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-5b98320c").then(t)}},{path:"/pages/905694/index.html",redirect:"/pages/905694/"},{path:"/50.工具/10.Idea插件开发快速入门.html",redirect:"/pages/905694/"},{name:"v-29c3dbd6",path:"/pages/f59a3a/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-29c3dbd6").then(t)}},{path:"/pages/f59a3a/index.html",redirect:"/pages/f59a3a/"},{path:"/50.工具/Idea无法启动Java.html",redirect:"/pages/f59a3a/"},{name:"v-53c62012",path:"/pages/bcbecf/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-53c62012").then(t)}},{path:"/pages/bcbecf/index.html",redirect:"/pages/bcbecf/"},{path:"/60.架构/10.设计模式/01.设计模式之门面模式-外观模式.html",redirect:"/pages/bcbecf/"},{name:"v-ec7b20e8",path:"/pages/92d4ab/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-ec7b20e8").then(t)}},{path:"/pages/92d4ab/index.html",redirect:"/pages/92d4ab/"},{path:"/60.架构/10.设计模式/10.设计模式之委托模式.html",redirect:"/pages/92d4ab/"},{name:"v-d3678320",path:"/pages/3b8b65/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-d3678320").then(t)}},{path:"/pages/3b8b65/index.html",redirect:"/pages/3b8b65/"},{path:"/60.架构/10.设计模式/20.设计模式之责任链模式.html",redirect:"/pages/3b8b65/"},{name:"v-3f839182",path:"/pages/38bd6b/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-3f839182").then(t)}},{path:"/pages/38bd6b/index.html",redirect:"/pages/38bd6b/"},{path:"/60.架构/10.设计模式/30.设计模式之组合模式.html",redirect:"/pages/38bd6b/"},{name:"v-31ef5fea",path:"/pages/3935f5/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-31ef5fea").then(t)}},{path:"/pages/3935f5/index.html",redirect:"/pages/3935f5/"},{path:"/60.架构/10.设计模式/40.策略代理委托的区别.html",redirect:"/pages/3935f5/"},{name:"v-4b8e2ad1",path:"/archives/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-4b8e2ad1").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-c72cbf9e",path:"/categories/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-c72cbf9e").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-0f04c75e",path:"/tags/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-0f04c75e").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-8b098c2c",path:"/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-8b098c2c").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-75bb3f8e",path:"/pages/99581a/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-75bb3f8e").then(t)}},{path:"/pages/99581a/index.html",redirect:"/pages/99581a/"},{path:"/《Golang微服务最佳实践专栏》/01.基础篇/05.Golang工程结构最佳实践.html",redirect:"/pages/99581a/"},{name:"v-31eda728",path:"/pages/a24792/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-31eda728").then(t)}},{path:"/pages/a24792/index.html",redirect:"/pages/a24792/"},{path:"/《Golang微服务最佳实践专栏》/01.基础篇/10.Golang容器化部署最佳实践.html",redirect:"/pages/a24792/"},{name:"v-45a4b1a0",path:"/pages/13de43/",component:ol,beforeEnter:(n,e,t)=>{us("Layout","v-45a4b1a0").then(t)}},{path:"/pages/13de43/index.html",redirect:"/pages/13de43/"},{path:"/《Spring&SpringBoot源码专题》/01.源码分析/10.Spring事务管理源码分析.html",redirect:"/pages/13de43/"},{path:"*",component:ol}],ll={title:"",description:"",base:"/",headTags:[["link",{rel:"shortcut icon",href:"http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/favicon.ico"}],["link",{rel:"stylesheet",href:"//at.alicdn.com/t/font_3114978_qe0b39no76.css"}],["meta",{name:"referrer",content:"no-referrer-when-downgrade"}],["meta",{name:"keywords",content:"知微坚果,一念千秋,拾光小镇,Go,Golang开发,Java,Flutter,Kotlin,后端,架构"}],["meta",{name:"theme-color",content:"#11a8cd"}]],pages:[{title:"幂等性",frontmatter:{title:"幂等性",date:"2020-12-05T00:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["理论"],publish:!0,permalink:"/pages/cab623/",readingShow:"top"},regularPath:"/10.%E5%90%8E%E7%AB%AF/01.%E7%90%86%E8%AE%BA/01.%E5%B9%82%E7%AD%89%E6%80%A7.html",relativePath:"10.后端/01.理论/01.幂等性.md",key:"v-4f626db6",path:"/pages/cab623/",headers:[{level:3,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:3,title:"不满足幂等性的情况",slug:"不满足幂等性的情况",normalizedTitle:"不满足幂等性的情况",charIndex:884},{level:3,title:"请求幂等性的解决方案",slug:"请求幂等性的解决方案",normalizedTitle:"请求幂等性的解决方案",charIndex:1304},{level:4,title:"客户端处理",slug:"客户端处理",normalizedTitle:"客户端处理",charIndex:1402},{level:4,title:"token机制",slug:"token机制",normalizedTitle:"token机制",charIndex:1500},{level:4,title:"全局唯一ID",slug:"全局唯一id",normalizedTitle:"全局唯一id",charIndex:1803},{level:4,title:"使用Post/Redirect/Get(RPG)模式",slug:"使用post-redirect-get-rpg-模式",normalizedTitle:"使用post/redirect/get(rpg)模式",charIndex:1924},{level:4,title:"在session存放特殊标志",slug:"在session存放特殊标志",normalizedTitle:"在session存放特殊标志",charIndex:2094},{level:4,title:"乐观锁",slug:"乐观锁",normalizedTitle:"乐观锁",charIndex:2274},{level:4,title:"分布式锁",slug:"分布式锁",normalizedTitle:"分布式锁",charIndex:2513},{level:4,title:"状态机幂等",slug:"状态机幂等",normalizedTitle:"状态机幂等",charIndex:2789},{level:4,title:"防重表",slug:"防重表",normalizedTitle:"防重表",charIndex:2994},{level:4,title:"缓冲队列",slug:"缓冲队列",normalizedTitle:"缓冲队列",charIndex:3193},{level:3,title:"任务幂等性",slug:"任务幂等性",normalizedTitle:"任务幂等性",charIndex:3302},{level:3,title:"消息幂等性",slug:"消息幂等性",normalizedTitle:"消息幂等性",charIndex:3763},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:4167}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"概述 不满足幂等性的情况 请求幂等性的解决方案 客户端处理 token机制 全局唯一ID 使用Post/Redirect/Get(RPG)模式 在session存放特殊标志 乐观锁 分布式锁 状态机幂等 防重表 缓冲队列 任务幂等性 消息幂等性 参考文献",content:'# 概述\n\n幂等性原本是数学上的概念，即使公式：f(x)=f(f(x)) 能够成立的数学性质。用在编程领域，则意为对同一个系统，使用同样的条件，一次请求和重复的多次请求对系统资源的影响是一致的。\n\n幂等性是分布式系统设计中十分重要的概念，具有这一性质的接口在设计时总是秉持这样的一种理念：调用接口发生异常并且重复尝试时，总是会造成系统所无法承受的损失，所以必须阻止这种现象的发生。\n\n幂等有两个维度：一是空间维度上的幂等，即幂等对象的范围，是个人还是机构，是某一次交易还是某种类型的交易...二是时间维度上的幂等，即幂等的保证时间，是几秒、几分钟还是永久性的...\n\n不同的需求，会有不一样的解决方案，难度和成本也不一样。\n\nHTTP/1.1中对幂等性的定义是:\n\n> Methods can also have the property of "idempotence" in that (aside from error or expiration issues) the side-effects of N > 0 identical requests is the same as for a single. 《rfc2616 - 9.1.2 Idempotent Methods》\n\n一次和多次请求某一个资源对于资源本身应该具有同样的结果（网络超时等问题除外）。也就是说，其任意多次执行对资源本身所产生的影响均与一次执行的影响相同。\n\n 1. 幂等不仅仅只是一次（或多次）请求对资源没有副作用（比如查询数据库操作，没有增删改，因此没有对数据库有任何影响）。\n 2. 幂等还包括第一次请求的时候对资源产生了副作用，但是以后的多次请求都不会再对资源产生副作用。\n 3. 幂等关注的是以后的多次请求是否对资源产生的副作用，而不关注结果。\n 4. 网络超时等问题，不是幂等的讨论范围。\n\n幂等性是系统服务对外一种承诺（而不是实现），承诺只要调用接口成功，外部多次调用对系统的影响是一致的。声明为幂等的服务会认为外部调用失败是常态，并且失败之后必然会有重试。\n\n\n# 不满足幂等性的情况\n\n产生重复数据或数据不一致（假定程序业务代码没问题），绝大部分就是发生了重复的请求，重复请求是指同一个请求因为某些原因被多次提交。导致这个情况会有几种场景：\n\n 1.  网络波动, 可能会引起重复请求\n 2.  用户重复操作,用户在操作时候可能会无意触发多次下单交易,甚至没有响应而有意触发多次交易应用\n 3.  使用了失效或超时重试机制(Nginx重试、RPC重试或业务层重试等)\n 4.  页面重复刷新\n 5.  使用浏览器后退按钮重复之前的操作,导致重复提交表单\n 6.  使用浏览器历史记录重复提交表单\n 7.  浏览器重复的HTTP请求\n 8.  定时任务重复执行\n 9.  用户双击提交按钮\n 10. MQ消息中间件，消息重复消费\n 11. 第三方平台的接口（如：支付成功回调接口、微信公众号消息接口），因为异常也会导致多次异步回调\n 12. 其他中间件/应用服务根据自身的特性，也有可能进行重试。\n\n\n# 请求幂等性的解决方案\n\n为了保证幂等性，我们可以从两个方面入手\n\n 1. 客户端防止重复请求\n 2. 服务端进行校验\n\n客户端防止重复请求一般只是一种简单有效的优化方式，这并不能保证可靠性\n\n# 客户端处理\n\n客户端处理一般有：\n\n 1. 函数节流\n 2. 函数防抖\n 3. 点击后按钮设置为不可点击\n 4. 拦截多次点击，客户端直接响应\n 5. 阻塞操作界面，比如Loading状态\n\n# token机制\n\n为每一次操作都生成一个单独的唯一token（以下简称token）。一个token在操作的每一个阶段只有一次执行权，一旦执行成功则保存执行结果。对重复的请求，返回同一个结果。\n\n在订单提交的场景，订单ID就可以作为一个token。每一个环节执行时都先检测一下该订单ID是否已经执行过这一步骤，对未执行的请求，执行操作并缓存结果，而对已经执行过的ID，则直接返回之前的执行结果，不做任何操作。\n\n在写操作之前，还可以用这个token进行上锁，保证同一个token只进行一次写操作。\n\n开源轮子可以参考：redis-auto-idempotent-spring-boot-starter\n\n# 全局唯一ID\n\n和token原理一样，主要是实现细节稍微不同 比如通过source来源 + 唯一序列号传入给后端，后端来判断请求是否重复,在并发时只能处理一个请求,其他相同并发请求要么返回请求重复,要么等待 前面请求执行完成后再执行。\n\n# 使用Post/Redirect/Get(RPG)模式\n\n在提交后执行页面重定向,这就是所谓的Post-Redirect—Get(PRG)模式,简单来说就是当用户提交连表单后,跳转到一个重定向的信息页面,这样就避免用户按F5刷新导致的重复提交,而且也不会出现浏览器表单重复提交的警告,也能消除按浏览器前进和后退导致同样重复提交的问题。\n\n# 在session存放特殊标志\n\n在服务端,生成一个唯一的标识符,将它存入session,同时前端获取这个标识符的值将它写入表单的隐藏中,用于用户输入信息后点击一起提交,在服务器端,获取表单中隐藏字段的值,与session中的唯一标识符比较,相等说明是首次提交,就处理本次请求,然后将session中的唯一标识符移除,不相等则表示是重复提交,不再做处理。\n\n# 乐观锁\n\n可以乐观锁的思想，利用版本号去做幂等，这个比较适用于更新操作。 每条数据都有一个版本号，数据更新的时候，传入获取到的版本号，且版本号+1。在实际进行写操作的时候，会去比较请求参数里面的版本号，每个version只有一次执行成功的机会，一旦失败必须重新获取。\n\nUPDATE user set age = age + 1, version = version + 1 WHERE id = #{id} and version = #{version};\n\n\n1\n\n\n# 分布式锁\n\n如果是分布是系统，构建全局唯一索引比较困难，例如唯一性的字段没法确定，这时候可以引入分布式锁，通过第三方的系统(redis或zookeeper)，在业务系统插入数据或者更新数据，获取分布式锁，然后做操作，之后释放锁，这样其实是把多线程并发的锁的思路，引入多多个系统，也就是分布式系统中得解决思路。\n\n要点：某个长流程处理过程要求不能并发执行，可以在流程执行之前根据某个标志(用户ID+后缀等)获取分布式锁，其他流程执行时获取锁就会失败，也就是同一时间该流程只能有一个能执行成功，执行完成后，释放分布式锁(分布式锁要第三方系统提供)。\n\n# 状态机幂等\n\n在设计单据相关的业务，或者是任务相关的业务，肯定会涉及到状态机(状态变更图)，就是业务单据上面有个状态，状态在不同的情况下会发生变更，一般情况下存在有限状态机，这时候，如果状态机已经处于下一个状态，这时候来了一个上一个状态的变更，理论上是不能够变更的，这样的话，保证了有限状态机的幂等。注意：订单等单据类业务，存在很长的状态流转，一定要深刻理解状态机，对业务系统设计能力提高有很大帮助 。\n\n# 防重表\n\n以支付为例: 使用唯一主键去做防重表的唯一索引,比如使用订单号作为防重表的唯一索引,每一次请求都根据订单号向防重表中插入一条数据,插入成功说明可以处理后面的业务,当处理完业务逻辑之后删除防重表中的订单号数据,后续如果有重复请求,则会因为防重表唯一索引原因导致插入失败,直接返回操作失败,直到第一次请求返回结果,可以看出防重表作用就是加锁的功能。 注: 最好结合状态机幂等先判断一下\n\n# 缓冲队列\n\n将请求都快速地接收下来后放入缓冲队列中,后续使用异步任务处理队列中的数据,过滤掉重复的请求,该解决方案优点是同步处理改成异步处理、高吞吐量,缺点则是不能及时地返回请求结果,需要后续轮询得处理结果。\n\n\n# 任务幂等性\n\n任务幂等，指的是对于同一段数据，触发一次任务和多次任务是相同的结果。 任务基本上都会涉及到写操作。如果同一段数据，被多次任务触发，进行了多次写操作，可能会造成脏数据。 其实也很好解决，我们在抽象任务模型的时候，给「任务设计好不同的状态」就行了。比如任务初始化、启动后、成功、失败、取消等都有不同的状态。后续的任务触发请求，如果监测到这段数据的状态已经做了修改，就根据这个任务的状态和用户定义 的策略，来决定是跳过还是重新执行。 可以参考Spring Batch的设计，Spring Batch抽象了Job这个概念，提供了BatchStatus枚举来作为任务的状态： public enum BatchStatus {STARTING, STARTED, STOPPING,    STOPPED, FAILED, COMPLETED, ABANDONED }复制代码 相应的，比Job粒度更小的Step也有自己的状态。同时Spring Batch可以允许用户自定义地配置skip策略和失败处理策略。\n\n\n# 消息幂等性\n\n消息幂等也是经常要考虑的问题。还是之前电商系统中订单提交的例子，比如库存扣减这种操作，为了保证吞吐量，可能会使用消息来实现。 消息幂等的概念可以总结如下：\n\n> 如果消息重试多次，消费者端对该重复消息消费多次与消费一次的结果是相同的，并且多次消费没有对系统产生副作用，那么我们就称这个过程是消息幂等的。\n\n对于消息来说，发送端可能产生重复消息，消费端也可能会重复消费同一条消息（大多数都是因为网络问题）。如果靠消息中间件去实现幂等，是一件比较困难的事情，增加幂等的处理会导致消息中间件的「吞吐量」下降。所以绝大多数消息「消息中间件本身不处理幂等问题」，而是交给了业务端自己去处理。 而不论是发送端重复还是消费端重复，我们「只需要保证消费端幂等」就可以了，不需要在发送端做什么事情。而消费端做幂等，其实本质上也是上面提到的“「重复提交下的幂等」”，比较适合在消费端的入口处就做幂等处理。\n\n\n# 参考文献\n\nGameKing.幂等性浅谈.简书.2017.01.07\n\nXxxx.幂等性.知乎.2019.06.25\n\nYasin.幂等问题.掘金.2020.11.22\n\n三分恶.什么是接口幂等性？为什么会产生接口幂等性问题？如何保证接口幂等性？.掘金.2020.11.28',normalizedContent:'# 概述\n\n幂等性原本是数学上的概念，即使公式：f(x)=f(f(x)) 能够成立的数学性质。用在编程领域，则意为对同一个系统，使用同样的条件，一次请求和重复的多次请求对系统资源的影响是一致的。\n\n幂等性是分布式系统设计中十分重要的概念，具有这一性质的接口在设计时总是秉持这样的一种理念：调用接口发生异常并且重复尝试时，总是会造成系统所无法承受的损失，所以必须阻止这种现象的发生。\n\n幂等有两个维度：一是空间维度上的幂等，即幂等对象的范围，是个人还是机构，是某一次交易还是某种类型的交易...二是时间维度上的幂等，即幂等的保证时间，是几秒、几分钟还是永久性的...\n\n不同的需求，会有不一样的解决方案，难度和成本也不一样。\n\nhttp/1.1中对幂等性的定义是:\n\n> methods can also have the property of "idempotence" in that (aside from error or expiration issues) the side-effects of n > 0 identical requests is the same as for a single. 《rfc2616 - 9.1.2 idempotent methods》\n\n一次和多次请求某一个资源对于资源本身应该具有同样的结果（网络超时等问题除外）。也就是说，其任意多次执行对资源本身所产生的影响均与一次执行的影响相同。\n\n 1. 幂等不仅仅只是一次（或多次）请求对资源没有副作用（比如查询数据库操作，没有增删改，因此没有对数据库有任何影响）。\n 2. 幂等还包括第一次请求的时候对资源产生了副作用，但是以后的多次请求都不会再对资源产生副作用。\n 3. 幂等关注的是以后的多次请求是否对资源产生的副作用，而不关注结果。\n 4. 网络超时等问题，不是幂等的讨论范围。\n\n幂等性是系统服务对外一种承诺（而不是实现），承诺只要调用接口成功，外部多次调用对系统的影响是一致的。声明为幂等的服务会认为外部调用失败是常态，并且失败之后必然会有重试。\n\n\n# 不满足幂等性的情况\n\n产生重复数据或数据不一致（假定程序业务代码没问题），绝大部分就是发生了重复的请求，重复请求是指同一个请求因为某些原因被多次提交。导致这个情况会有几种场景：\n\n 1.  网络波动, 可能会引起重复请求\n 2.  用户重复操作,用户在操作时候可能会无意触发多次下单交易,甚至没有响应而有意触发多次交易应用\n 3.  使用了失效或超时重试机制(nginx重试、rpc重试或业务层重试等)\n 4.  页面重复刷新\n 5.  使用浏览器后退按钮重复之前的操作,导致重复提交表单\n 6.  使用浏览器历史记录重复提交表单\n 7.  浏览器重复的http请求\n 8.  定时任务重复执行\n 9.  用户双击提交按钮\n 10. mq消息中间件，消息重复消费\n 11. 第三方平台的接口（如：支付成功回调接口、微信公众号消息接口），因为异常也会导致多次异步回调\n 12. 其他中间件/应用服务根据自身的特性，也有可能进行重试。\n\n\n# 请求幂等性的解决方案\n\n为了保证幂等性，我们可以从两个方面入手\n\n 1. 客户端防止重复请求\n 2. 服务端进行校验\n\n客户端防止重复请求一般只是一种简单有效的优化方式，这并不能保证可靠性\n\n# 客户端处理\n\n客户端处理一般有：\n\n 1. 函数节流\n 2. 函数防抖\n 3. 点击后按钮设置为不可点击\n 4. 拦截多次点击，客户端直接响应\n 5. 阻塞操作界面，比如loading状态\n\n# token机制\n\n为每一次操作都生成一个单独的唯一token（以下简称token）。一个token在操作的每一个阶段只有一次执行权，一旦执行成功则保存执行结果。对重复的请求，返回同一个结果。\n\n在订单提交的场景，订单id就可以作为一个token。每一个环节执行时都先检测一下该订单id是否已经执行过这一步骤，对未执行的请求，执行操作并缓存结果，而对已经执行过的id，则直接返回之前的执行结果，不做任何操作。\n\n在写操作之前，还可以用这个token进行上锁，保证同一个token只进行一次写操作。\n\n开源轮子可以参考：redis-auto-idempotent-spring-boot-starter\n\n# 全局唯一id\n\n和token原理一样，主要是实现细节稍微不同 比如通过source来源 + 唯一序列号传入给后端，后端来判断请求是否重复,在并发时只能处理一个请求,其他相同并发请求要么返回请求重复,要么等待 前面请求执行完成后再执行。\n\n# 使用post/redirect/get(rpg)模式\n\n在提交后执行页面重定向,这就是所谓的post-redirect—get(prg)模式,简单来说就是当用户提交连表单后,跳转到一个重定向的信息页面,这样就避免用户按f5刷新导致的重复提交,而且也不会出现浏览器表单重复提交的警告,也能消除按浏览器前进和后退导致同样重复提交的问题。\n\n# 在session存放特殊标志\n\n在服务端,生成一个唯一的标识符,将它存入session,同时前端获取这个标识符的值将它写入表单的隐藏中,用于用户输入信息后点击一起提交,在服务器端,获取表单中隐藏字段的值,与session中的唯一标识符比较,相等说明是首次提交,就处理本次请求,然后将session中的唯一标识符移除,不相等则表示是重复提交,不再做处理。\n\n# 乐观锁\n\n可以乐观锁的思想，利用版本号去做幂等，这个比较适用于更新操作。 每条数据都有一个版本号，数据更新的时候，传入获取到的版本号，且版本号+1。在实际进行写操作的时候，会去比较请求参数里面的版本号，每个version只有一次执行成功的机会，一旦失败必须重新获取。\n\nupdate user set age = age + 1, version = version + 1 where id = #{id} and version = #{version};\n\n\n1\n\n\n# 分布式锁\n\n如果是分布是系统，构建全局唯一索引比较困难，例如唯一性的字段没法确定，这时候可以引入分布式锁，通过第三方的系统(redis或zookeeper)，在业务系统插入数据或者更新数据，获取分布式锁，然后做操作，之后释放锁，这样其实是把多线程并发的锁的思路，引入多多个系统，也就是分布式系统中得解决思路。\n\n要点：某个长流程处理过程要求不能并发执行，可以在流程执行之前根据某个标志(用户id+后缀等)获取分布式锁，其他流程执行时获取锁就会失败，也就是同一时间该流程只能有一个能执行成功，执行完成后，释放分布式锁(分布式锁要第三方系统提供)。\n\n# 状态机幂等\n\n在设计单据相关的业务，或者是任务相关的业务，肯定会涉及到状态机(状态变更图)，就是业务单据上面有个状态，状态在不同的情况下会发生变更，一般情况下存在有限状态机，这时候，如果状态机已经处于下一个状态，这时候来了一个上一个状态的变更，理论上是不能够变更的，这样的话，保证了有限状态机的幂等。注意：订单等单据类业务，存在很长的状态流转，一定要深刻理解状态机，对业务系统设计能力提高有很大帮助 。\n\n# 防重表\n\n以支付为例: 使用唯一主键去做防重表的唯一索引,比如使用订单号作为防重表的唯一索引,每一次请求都根据订单号向防重表中插入一条数据,插入成功说明可以处理后面的业务,当处理完业务逻辑之后删除防重表中的订单号数据,后续如果有重复请求,则会因为防重表唯一索引原因导致插入失败,直接返回操作失败,直到第一次请求返回结果,可以看出防重表作用就是加锁的功能。 注: 最好结合状态机幂等先判断一下\n\n# 缓冲队列\n\n将请求都快速地接收下来后放入缓冲队列中,后续使用异步任务处理队列中的数据,过滤掉重复的请求,该解决方案优点是同步处理改成异步处理、高吞吐量,缺点则是不能及时地返回请求结果,需要后续轮询得处理结果。\n\n\n# 任务幂等性\n\n任务幂等，指的是对于同一段数据，触发一次任务和多次任务是相同的结果。 任务基本上都会涉及到写操作。如果同一段数据，被多次任务触发，进行了多次写操作，可能会造成脏数据。 其实也很好解决，我们在抽象任务模型的时候，给「任务设计好不同的状态」就行了。比如任务初始化、启动后、成功、失败、取消等都有不同的状态。后续的任务触发请求，如果监测到这段数据的状态已经做了修改，就根据这个任务的状态和用户定义 的策略，来决定是跳过还是重新执行。 可以参考spring batch的设计，spring batch抽象了job这个概念，提供了batchstatus枚举来作为任务的状态： public enum batchstatus {starting, started, stopping,    stopped, failed, completed, abandoned }复制代码 相应的，比job粒度更小的step也有自己的状态。同时spring batch可以允许用户自定义地配置skip策略和失败处理策略。\n\n\n# 消息幂等性\n\n消息幂等也是经常要考虑的问题。还是之前电商系统中订单提交的例子，比如库存扣减这种操作，为了保证吞吐量，可能会使用消息来实现。 消息幂等的概念可以总结如下：\n\n> 如果消息重试多次，消费者端对该重复消息消费多次与消费一次的结果是相同的，并且多次消费没有对系统产生副作用，那么我们就称这个过程是消息幂等的。\n\n对于消息来说，发送端可能产生重复消息，消费端也可能会重复消费同一条消息（大多数都是因为网络问题）。如果靠消息中间件去实现幂等，是一件比较困难的事情，增加幂等的处理会导致消息中间件的「吞吐量」下降。所以绝大多数消息「消息中间件本身不处理幂等问题」，而是交给了业务端自己去处理。 而不论是发送端重复还是消费端重复，我们「只需要保证消费端幂等」就可以了，不需要在发送端做什么事情。而消费端做幂等，其实本质上也是上面提到的“「重复提交下的幂等」”，比较适合在消费端的入口处就做幂等处理。\n\n\n# 参考文献\n\ngameking.幂等性浅谈.简书.2017.01.07\n\nxxxx.幂等性.知乎.2019.06.25\n\nyasin.幂等问题.掘金.2020.11.22\n\n三分恶.什么是接口幂等性？为什么会产生接口幂等性问题？如何保证接口幂等性？.掘金.2020.11.28',charsets:{cjk:!0}},{title:"Java动态代理基础",frontmatter:{title:"Java动态代理基础",date:"2020-12-10T15:40:00.000Z",sidebar:"auto",categories:["设计模式"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/7ec854/",readingShow:"top"},regularPath:"/10.%E5%90%8E%E7%AB%AF/10.Java/01.Java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E4%B9%8B%E5%9F%BA%E7%A1%80.html",relativePath:"10.后端/10.Java/01.Java动态代理之基础.md",key:"v-bb479bb0",path:"/pages/7ec854/",headers:[{level:3,title:"代理模式",slug:"代理模式",normalizedTitle:"代理模式",charIndex:2},{level:3,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:325},{level:3,title:"基本原理",slug:"基本原理",normalizedTitle:"基本原理",charIndex:3233},{level:4,title:"Java动态代理",slug:"java动态代理",normalizedTitle:"java动态代理",charIndex:1400},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:3460}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"代理模式 使用 基本原理 Java动态代理 参考文献",content:'# 代理模式\n\n为其他对象提供一个代理以控制对某个对象的访问。代理类主要负责为委托了（真实对象）预处理消息、过滤消息、传递消息给委托类，代理类不现实具体服务，而是利用委托类来完成服务，并将执行结果封装处理。\n\n其实就是代理类为被代理类预处理消息、过滤消息并在此之后将消息转发给被代理类，之后还能进行消息的后置处理。代理类和被代理类通常会存在关联关系(即上面提到的持有的被带离对象的引用)，代理类本身不实现服务，而是通过调用被代理类中的方法来提供服务。\n\n代理模式是设计模式中非常重要的一种类型，而设计模式又是编程中非常重要的知识点，特别是在业务系统的重构中，更是有举足轻重的地位。代理模式从类型上来说，可以分为 静态代理和动态代理两种类型。\n\n\n# 使用\n\n首先看一下静态代理的实现：\n\n//做蛋糕的机器\npublic interface CakeMachine{\n    void makeCake();\n}\n\n//专门做水果蛋糕的机器\nclass FruitCakeMachine implements CakeMachine{\n    public void makeCake() {\n        System.out.println("Making a fruit cake...");\n    }\n}\n\n// 静态代理 杏仁蛋糕代理\npublic class ApricotCakeProxy implements CakeMachine{\n    private CakeMachine cakeMachine;\n    public ApricotCakeProxy(CakeMachine cakeMachine) {\n        this.cakeMachine = cakeMachine;\n    }\n    public void makeCake() {\n        cakeMachine.makeCake();\n        System.out.println("adding apricot...");\n    }\n}\n\n//蛋糕店\npublic class CakeShop {\n    public static void main(String[] args) {\n          //可以给各种各样的蛋糕加上杏仁\n          FruitCakeMachine fruitCakeMachine = new FruitCakeMachine();\n        ApricotCakeProxy apricotProxy = new ApricotCakeProxy(fruitCakeMachine);\n        apricotProxy.makeCake();\n        apricotProxy = new ApricotCakeProxy(new ChocolateCakeMachine());\n        apricotProxy.makeCake();\n    }\n}\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n下面看一下如何用Java动态代理实现：\n\n// Java动态代理\npublic class ApricotHandler implements InvocationHandler {\n    private Object object;\n    public ApricotHandler(Object object) {\n        this.object = object;\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        Object result = method.invoke(object, args);\n        System.out.println("添加杏仁");\n        return result;\n    }\n}\npublic class CakeShop {\n    public static void main(String[] args) {\n        //动态代理(可以同时给蛋糕、面包等加杏仁)\n        //给蛋糕加上杏仁\n        FruitCakeMachine fruitCakeMachine = new FruitCakeMachine();\n        ApricotHandler apricotHandler = new ApricotHandler(fruitCakeMachine);\n        CakeMachine cakeMachine = (CakeMachine) Proxy.newProxyInstance(fruitCakeMachine.getClass().getClassLoader(),\n                fruitCakeMachine.getClass().getInterfaces(),\n                apricotHandler);\n        cakeMachine.makeCake();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n而 Java 动态代理只是动态代理的一种实现方式而已，动态代理还有另外一种实现方式，即 CGLib（Code Generation Library）。 通过CGLib实现：\n\npublic class ApricotInterceptor implements MethodInterceptor {\n    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {\n        methodProxy.invokeSuper(o, objects);\n        System.out.println("adding apricot...");\n        return o;\n    }\n}\n\npublic class CakeShop {\n    public static void main(String[] args) { \n        //CGLib动态代理(可以同时给蛋糕、面包等加杏仁)\n        Enhancer enhancer = new Enhancer();\n        enhancer.setSuperclass(FruitCakeMachine.class);\n        enhancer.setCallback(new ApricotInterceptor());\n        FruitCakeMachine fruitCakeMachine = (FruitCakeMachine) enhancer.create();\n        fruitCakeMachine.makeCake();\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 基本原理\n\n# Java动态代理\n\n动态代理的具体步骤：\n\n 1. 通过实现 InvocationHandler 接口创建自己的调用处理器；\n 2. 通过为 Proxy 类指定 ClassLoader 对象和一组 interface 来创建动态代理类；\n 3. 通过 反射机制 获得动态代理类的构造函数，其唯一参数类型是调用处理器接口类型；\n 4. 通过构造函数创建动态代理类实例，构造时调用处理器对象作为参数被传入。\n\nJava动态代理流程图\n\n\n# 参考文献\n\nJava动态代理 深度详解\n\nJAVA动态代理',normalizedContent:'# 代理模式\n\n为其他对象提供一个代理以控制对某个对象的访问。代理类主要负责为委托了（真实对象）预处理消息、过滤消息、传递消息给委托类，代理类不现实具体服务，而是利用委托类来完成服务，并将执行结果封装处理。\n\n其实就是代理类为被代理类预处理消息、过滤消息并在此之后将消息转发给被代理类，之后还能进行消息的后置处理。代理类和被代理类通常会存在关联关系(即上面提到的持有的被带离对象的引用)，代理类本身不实现服务，而是通过调用被代理类中的方法来提供服务。\n\n代理模式是设计模式中非常重要的一种类型，而设计模式又是编程中非常重要的知识点，特别是在业务系统的重构中，更是有举足轻重的地位。代理模式从类型上来说，可以分为 静态代理和动态代理两种类型。\n\n\n# 使用\n\n首先看一下静态代理的实现：\n\n//做蛋糕的机器\npublic interface cakemachine{\n    void makecake();\n}\n\n//专门做水果蛋糕的机器\nclass fruitcakemachine implements cakemachine{\n    public void makecake() {\n        system.out.println("making a fruit cake...");\n    }\n}\n\n// 静态代理 杏仁蛋糕代理\npublic class apricotcakeproxy implements cakemachine{\n    private cakemachine cakemachine;\n    public apricotcakeproxy(cakemachine cakemachine) {\n        this.cakemachine = cakemachine;\n    }\n    public void makecake() {\n        cakemachine.makecake();\n        system.out.println("adding apricot...");\n    }\n}\n\n//蛋糕店\npublic class cakeshop {\n    public static void main(string[] args) {\n          //可以给各种各样的蛋糕加上杏仁\n          fruitcakemachine fruitcakemachine = new fruitcakemachine();\n        apricotcakeproxy apricotproxy = new apricotcakeproxy(fruitcakemachine);\n        apricotproxy.makecake();\n        apricotproxy = new apricotcakeproxy(new chocolatecakemachine());\n        apricotproxy.makecake();\n    }\n}\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n下面看一下如何用java动态代理实现：\n\n// java动态代理\npublic class apricothandler implements invocationhandler {\n    private object object;\n    public apricothandler(object object) {\n        this.object = object;\n    }\n\n    @override\n    public object invoke(object proxy, method method, object[] args) throws throwable {\n        object result = method.invoke(object, args);\n        system.out.println("添加杏仁");\n        return result;\n    }\n}\npublic class cakeshop {\n    public static void main(string[] args) {\n        //动态代理(可以同时给蛋糕、面包等加杏仁)\n        //给蛋糕加上杏仁\n        fruitcakemachine fruitcakemachine = new fruitcakemachine();\n        apricothandler apricothandler = new apricothandler(fruitcakemachine);\n        cakemachine cakemachine = (cakemachine) proxy.newproxyinstance(fruitcakemachine.getclass().getclassloader(),\n                fruitcakemachine.getclass().getinterfaces(),\n                apricothandler);\n        cakemachine.makecake();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n而 java 动态代理只是动态代理的一种实现方式而已，动态代理还有另外一种实现方式，即 cglib（code generation library）。 通过cglib实现：\n\npublic class apricotinterceptor implements methodinterceptor {\n    public object intercept(object o, method method, object[] objects, methodproxy methodproxy) throws throwable {\n        methodproxy.invokesuper(o, objects);\n        system.out.println("adding apricot...");\n        return o;\n    }\n}\n\npublic class cakeshop {\n    public static void main(string[] args) { \n        //cglib动态代理(可以同时给蛋糕、面包等加杏仁)\n        enhancer enhancer = new enhancer();\n        enhancer.setsuperclass(fruitcakemachine.class);\n        enhancer.setcallback(new apricotinterceptor());\n        fruitcakemachine fruitcakemachine = (fruitcakemachine) enhancer.create();\n        fruitcakemachine.makecake();\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 基本原理\n\n# java动态代理\n\n动态代理的具体步骤：\n\n 1. 通过实现 invocationhandler 接口创建自己的调用处理器；\n 2. 通过为 proxy 类指定 classloader 对象和一组 interface 来创建动态代理类；\n 3. 通过 反射机制 获得动态代理类的构造函数，其唯一参数类型是调用处理器接口类型；\n 4. 通过构造函数创建动态代理类实例，构造时调用处理器对象作为参数被传入。\n\njava动态代理流程图\n\n\n# 参考文献\n\njava动态代理 深度详解\n\njava动态代理',charsets:{cjk:!0}},{title:"Java线程池详解",frontmatter:{title:"Java线程池详解",date:"2020-11-11T10:00:00.000Z",sidebar:"auto",sticky:2,categories:["后端"],tags:["线程池","Java"],publish:!0,permalink:"/pages/c54936/",readingShow:"top"},regularPath:"/10.%E5%90%8E%E7%AB%AF/10.Java/02.Java%E7%BA%BF%E7%A8%8B%E6%B1%A0%E8%AF%A6%E8%A7%A3.html",relativePath:"10.后端/10.Java/02.Java线程池详解.md",key:"v-6a9c6129",path:"/pages/c54936/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一、线程池基础",slug:"一、线程池基础",normalizedTitle:"一、线程池基础",charIndex:171},{level:3,title:"1.1 线程池的概念",slug:"_1-1-线程池的概念",normalizedTitle:"1.1 线程池的概念",charIndex:665},{level:3,title:"1.2 线程池的作用",slug:"_1-2-线程池的作用",normalizedTitle:"1.2 线程池的作用",charIndex:730},{level:3,title:"1.3 非线程池缺点",slug:"_1-3-非线程池缺点",normalizedTitle:"1.3 非线程池缺点",charIndex:1521},{level:3,title:"1.4 使用线程池的风险",slug:"_1-4-使用线程池的风险",normalizedTitle:"1.4 使用线程池的风险",charIndex:1598},{level:4,title:"1.4.1 死锁",slug:"_1-4-1-死锁",normalizedTitle:"1.4.1 死锁",charIndex:1738},{level:4,title:"1.4.2 资源不足",slug:"_1-4-2-资源不足",normalizedTitle:"1.4.2 资源不足",charIndex:2110},{level:4,title:"1.4.3 并发错误",slug:"_1-4-3-并发错误",normalizedTitle:"1.4.3 并发错误",charIndex:2555},{level:4,title:"1.4.4 线程泄漏",slug:"_1-4-4-线程泄漏",normalizedTitle:"1.4.4 线程泄漏",charIndex:2714},{level:4,title:"1.4.5  请求过载",slug:"_1-4-5-请求过载",normalizedTitle:"1.4.5  请求过载",charIndex:null},{level:3,title:"1.5 有效使用线程池的准则",slug:"_1-5-有效使用线程池的准则",normalizedTitle:"1.5 有效使用线程池的准则",charIndex:3271},{level:3,title:"1.6 java线程池",slug:"_1-6-java线程池",normalizedTitle:"1.6 java线程池",charIndex:3725},{level:3,title:"1.7 如何关闭线程池",slug:"_1-7-如何关闭线程池",normalizedTitle:"1.7 如何关闭线程池",charIndex:6878},{level:3,title:"1.8 阻塞队列",slug:"_1-8-阻塞队列",normalizedTitle:"1.8 阻塞队列",charIndex:7008},{level:3,title:"1.9 线程池大小配置",slug:"_1-9-线程池大小配置",normalizedTitle:"1.9 线程池大小配置",charIndex:8759},{level:4,title:"1.9.1 拒绝策略/饱和策略",slug:"_1-9-1-拒绝策略-饱和策略",normalizedTitle:"1.9.1 拒绝策略/饱和策略",charIndex:8935},{level:3,title:"1.10 线程池异常处理",slug:"_1-10-线程池异常处理",normalizedTitle:"1.10 线程池异常处理",charIndex:9371},{level:3,title:"1.11 合理的配置线程池",slug:"_1-11-合理的配置线程池",normalizedTitle:"1.11 合理的配置线程池",charIndex:9566},{level:3,title:"1.12 ForkJoinPool",slug:"_1-12-forkjoinpool",normalizedTitle:"1.12 forkjoinpool",charIndex:10532},{level:3,title:"1.13 线程池工作流程",slug:"_1-13-线程池工作流程",normalizedTitle:"1.13 线程池工作流程",charIndex:11462},{level:3,title:"1.14 线程池为什么要使用阻塞队列而不使用非阻塞队列？",slug:"_1-14-线程池为什么要使用阻塞队列而不使用非阻塞队列",normalizedTitle:"1.14 线程池为什么要使用阻塞队列而不使用非阻塞队列？",charIndex:11677},{level:3,title:"1.15 线程池的监控",slug:"_1-15-线程池的监控",normalizedTitle:"1.15 线程池的监控",charIndex:11940},{level:2,title:"二、线程池常见面试题",slug:"二、线程池常见面试题",normalizedTitle:"二、线程池常见面试题",charIndex:12428},{level:3,title:"2.1 线程池有哪几种实现方式？",slug:"_2-1-线程池有哪几种实现方式",normalizedTitle:"2.1 线程池有哪几种实现方式？",charIndex:12443},{level:3,title:"2.2 禁止直接使用Executors创建线程池原因：",slug:"_2-2-禁止直接使用executors创建线程池原因",normalizedTitle:"2.2 禁止直接使用executors创建线程池原因：",charIndex:12929},{level:3,title:"2.3 线程池状态",slug:"_2-3-线程池状态",normalizedTitle:"2.3 线程池状态",charIndex:13241},{level:3,title:"2.4 更多",slug:"_2-4-更多",normalizedTitle:"2.4 更多",charIndex:13991},{level:2,title:"三、线程池上下文传递",slug:"三、线程池上下文传递",normalizedTitle:"三、线程池上下文传递",charIndex:14138},{level:2,title:"四、动态线程池治理",slug:"四、动态线程池治理",normalizedTitle:"四、动态线程池治理",charIndex:14360},{level:2,title:"五、线程池的进阶调优",slug:"五、线程池的进阶调优",normalizedTitle:"五、线程池的进阶调优",charIndex:14458}],excerpt:'<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>说起Java线程池，大家应该都不陌生，虽然我们常常跟线程池打交道，但是很少有人能够真正深入掌握线程池。</p>\n<p>特别是对于从事平台研发的朋友，深入掌握线程池是非常有必要的。</p>\n<p>本文从Java线程池的基本原理展开，到线程池上下文的传递、动态线程池治理、线程池配置的最佳实践逐步展开，再到JVM、操作系统深入理解线程池的运行原理。</p>\n',lastUpdated:"12/4/2022, 12:39:32 AM",lastUpdatedTimestamp:1670085572e3,headersStr:"前言 一、线程池基础 1.1 线程池的概念 1.2 线程池的作用 1.3 非线程池缺点 1.4 使用线程池的风险 1.4.1 死锁 1.4.2 资源不足 1.4.3 并发错误 1.4.4 线程泄漏 1.4.5  请求过载 1.5 有效使用线程池的准则 1.6 java线程池 1.7 如何关闭线程池 1.8 阻塞队列 1.9 线程池大小配置 1.9.1 拒绝策略/饱和策略 1.10 线程池异常处理 1.11 合理的配置线程池 1.12 ForkJoinPool 1.13 线程池工作流程 1.14 线程池为什么要使用阻塞队列而不使用非阻塞队列？ 1.15 线程池的监控 二、线程池常见面试题 2.1 线程池有哪几种实现方式？ 2.2 禁止直接使用Executors创建线程池原因： 2.3 线程池状态 2.4 更多 三、线程池上下文传递 四、动态线程池治理 五、线程池的进阶调优",content:'# 前言\n\n说起Java线程池，大家应该都不陌生，虽然我们常常跟线程池打交道，但是很少有人能够真正深入掌握线程池。\n\n特别是对于从事平台研发的朋友，深入掌握线程池是非常有必要的。\n\n本文从Java线程池的基本原理展开，到线程池上下文的传递、动态线程池治理、线程池配置的最佳实践逐步展开，再到JVM、操作系统深入理解线程池的运行原理。\n\n\n# 一、线程池基础\n\n阿里巴巴《Java 开发手册 崇山版》2020/08/03版本\n\n第一部分编码规约，第(七)栏并发处理(P17)，中有如下两条规定： 3. 【强制】线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。 说明：线程池的好处是减少在创建和销毁线程上所消耗的时间以及系统资源的开销，解决资源不足的问题。 如果不使用线程池，有可能造成系统创建大量同类线程而导致消耗完内存或者“过度切换”的问题。 4. 【强制】线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式，这 样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。 说明：Executors 返回的线程池对象的弊端如下： 1） FixedThreadPool 和 SingleThreadPool： 允许的请求队列长度为 Integer.MAX_VALUE，可能会堆积大量的请求，从而导致 OOM。 2） CachedThreadPool： 允许的创建线程数量为 Integer.MAX_VALUE，可能会创建大量的线程，从而导致 OOM。\n\n\n# 1.1 线程池的概念\n\n简单理解，线程池就是一个管理线程的池子。它是一个可以容纳多个线程的容器，其中的线程可以反复使用。\n\n\n# 1.2 线程池的作用\n\n它的主要特点为：线程复用;控制最大并发数;管理线程。\n\n 1. 复用线程、控制最大并发数。\n 2. 实现定时、周期等与时间相关的功能。\n 3. 实现任务队列缓存策略和拒绝机制。\n 4. 隔离线程环境。如：文件上传服务和数据查询服务在同一台服务器上，由于文件上传服务耗时严重，如果文件上传和数据查询服务使用同一个线程池，那么文件上传服务会影响到数据查询服务。可以通过配置独立线程池来实现文件上传和数据查询服务隔离，避免两者相互影响。\n\n《Java 并发编程的艺术》:\n\n> 在开发过程中，合理地使用线程池能够带来3个好处: 第一：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。 第二：提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行。 第三：提高线程的可管理性。线程是稀缺资源，如果无限制地创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一分配、调优和监控。 但是，要做到合理利用线程池，必须对其实现原理了如指掌。\n\n线程池的优点\n\n线程池的优势： 线程池做的工作只要是控制运行的线程数量，处理过程中将任务放入队列，然后在线程创建后启动这些任务，如果线程数量超过了最大数量，超出数量的线程排队等候，等其他线程执行完毕，再从队列中取出任务来执行。\n\n1、线程池的优势 （1）、降低系统资源消耗，通过重用已存在的线程，降低线程创建和销毁造成的消耗； （2）、提高系统响应速度，当有任务到达时，通过复用已存在的线程，无需等待新线程的创建便能立即执行； （3）方便线程并发数的管控。因为线程若是无限制的创建，可能会导致内存占用过多而产生OOM，并且会造成cpu过度切换（cpu切换线程是有时间成本的（需要保持当前执行线程的现场，并恢复要执行线程的现场））。 （4）提供更强大的功能，延时定时线程池。\n\n\n# 1.3 非线程池缺点\n\n1、因为线程若是无限制的创建，可能会导致内存占用过多而产生OOM，并且会造成cpu过度切换。 2、创建线程池的消耗较高。\n\n\n# 1.4 使用线程池的风险\n\n虽然线程池是构建多线程应用程序的强大机制，但使用它并不是没有风险的。用线程池构建的应用程序容易遭受任何其它多线程应用程序容易遭受的所有并发风险，诸如同步错误和死锁，它还容易遭受特定于线程池的少数其它风险，诸如与池有关的死锁、资源不足和线程泄漏。\n\n# 1.4.1 死锁\n\n任何多线程应用程序都有死锁风险。当一组进程或线程中的每一个都在等待一个只有该组中另一个进程才能引起的事件时，我们就说这组进程或线程 死锁了。死锁的最简单情形是：线程 A 持有对象 X 的独占锁，并且在等待对象 Y 的锁，而线程 B 持有对象 Y 的独占锁，却在等待对象 X 的锁。除非有某种方法来打破对锁的等待（Java 锁定不支持这种方法），否则死锁的线程将永远等下去。\n\n虽然任何多线程程序中都有死锁的风险，但线程池却引入了另一种死锁可能，在那种情况下，所有池线程都在执行已阻塞的等待队列中另一任务的执行结果的任务，但这一任务却因为没有未被占用的线程而不能运行。当线程池被用来实现涉及许多交互对象的模拟，被模拟的对象可以相互发送查询，这些查询接下来作为排队的任务执行，查询对象又同步等待着响应时，会发生这种情况。\n\n# 1.4.2 资源不足\n\n线程池的一个优点在于：相对于其它替代调度机制（有些我们已经讨论过）而言，它们通常执行得很好。但只有恰当地调整了线程池大小时才是这样的。线程消耗包括内存和其它系统资源在内的大量资源。除了 Thread 对象所需的内存之外，每个线程都需要两个可能很大的执行调用堆栈。除此以外，JVM可能会为每个 Java 线程创建一个本机线程，这些本机线程将消耗额外的系统资源。最后，虽然线程之间切换的调度开销很小，但如果有很多线程，环境切换也可能严重地影响程序的性能。\n\n如果线程池太大，那么被那些线程消耗的资源可能严重地影响系统性能。在线程之间进行切换将会浪费时间，而且使用超出比您实际需要的线程可能会引起资源匮乏问题，因为池线程正在消耗一些资源，而这些资源可能会被其它任务更有效地利用。除了线程自身所使用的资源以外，服务请求时所做的工作可能需要其它资源，例如 JDBC 连接、套接字或文件。这些也都是有限资源，有太多的并发请求也可能引起失效，例如不能分配 JDBC 连接。\n\n# 1.4.3 并发错误\n\n线程池和其它排队机制依靠使用 wait() 和 notify() 方法，这两个方法都难于使用。如果编码不正确，那么可能丢失通知，导致线程保持空闲状态，尽管队列中有工作要处理。使用这些方法时，必须格外小心。而最好使用现有的、已经知道能工作的实现，例如 util.concurrent 包。\n\n# 1.4.4 线程泄漏\n\n各种类型的线程池中一个严重的风险是线程泄漏，当从池中除去一个线程以执行一项任务，而在任务完成后该线程却没有返回池时，会发生这种情况。发生线程泄漏的一种情形出现在任务抛出一个 RuntimeException 或一个 Error 时。如果池类没有捕捉到它们，那么线程只会退出而线程池的大小将会永久减少一个。当这种情况发生的次数足够多时，线程池最终就为空，而且系统将停止，因为没有可用的线程来处理任务。\n\n有些任务可能会永远等待某些资源或来自用户的输入，而这些资源又不能保证变得可用，用户可能也已经回家了，诸如此类的任务会永久停止，而这些停止的任务也会引起和线程泄漏同样的问题。如果某个线程被这样一个任务永久地消耗着，那么它实际上就被从池除去了。对于这样的任务，应该要么只给予它们自己的线程，要么只让它们等待有限的时间。\n\n# 1.4.5 请求过载\n\n仅仅是请求就压垮了服务器，这种情况是可能的。在这种情形下，我们可能不想将每个到来的请求都排队到我们的工作队列，因为排在队列中等待执行的任务可能会消耗太多的系统资源并引起资源缺乏。在这种情形下决定如何做取决于您自己；在某些情况下，您可以简单地抛弃请求，依靠更高级别的协议稍后重试请求，您也可以用一个指出服务器暂时很忙的响应来拒绝请求。\n\n\n# 1.5 有效使用线程池的准则\n\n只要您遵循几条简单的准则，线程池可以成为构建服务器应用程序的极其有效的方法：\n\n不要对那些同步等待其它任务结果的任务排队。这可能会导致上面所描述的那种形式的死锁，在那种死锁中，所有线程都被一些任务所占用，这些任务依次等待排队任务的结果，而这些任务又无法执行，因为所有的线程都很忙。\n\n在为时间可能很长的操作使用合用的线程时要小心。如果程序必须等待诸如 I/O 完成这样的某个资源，那么请指定最长的等待时间，以及随后是失效还是将任务重新排队以便稍后执行。这样做保证了：通过将某个线程释放给某个可能成功完成的任务，从而将最终取得某些进展。\n\n理解任务。要有效地调整线程池大小，您需要理解正在排队的任务以及它们正在做什么。它们是 CPU 限制的（CPU-bound）吗？它们是 I/O 限制的（I/O-bound）吗？您的答案将影响您如何调整应用程序。如果您有不同的任务类，这些类有着截然不同的特征，那么为不同任务类设置多个工作队列可能会有意义，这样可以相应地调整每个池。\n\n\n# 1.6 java线程池\n\njava.util.concurrent包中我们能找到线程池的定义，其中ThreadPoolExecutor是我们线程池核心类\n\npublic ThreadPoolExecutor(int corePoolSize,\n                              int maximumPoolSize,\n                              long keepAliveTime,\n                              TimeUnit unit,\n                              BlockingQueue<Runnable> workQueue,\n                              ThreadFactory threadFactory,\n                              RejectedExecutionHandler handler) {\n        if (corePoolSize < 0 ||\n            maximumPoolSize <= 0 ||\n            maximumPoolSize < corePoolSize ||\n            keepAliveTime < 0)\n            throw new IllegalArgumentException();\n        if (workQueue == null || threadFactory == null || handler == null)\n            throw new NullPointerException();\n        this.corePoolSize = corePoolSize;\n        this.maximumPoolSize = maximumPoolSize;\n        this.workQueue = workQueue;\n        this.keepAliveTime = unit.toNanos(keepAliveTime);\n        this.threadFactory = threadFactory;\n        this.handler = handler;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\ncorePoolSize：线程池的核心大小，也可以理解为最小的线程池大小。 maximumPoolSize：最大线程池大小。 keepAliveTime：空余线程存活时间，指的是超过corePoolSize的空余线程达到多长时间才进行销毁。 unit：销毁时间单位。 workQueue：存储等待执行线程的工作队列。 threadFactory：创建线程的工厂，一般用默认即可。 handler：拒绝策略，当工作队列、线程池全已满时如何拒绝新任务，默认抛出异常。\n\ncorePoolSize：线程池的核心线程数目，当一个请求进来时如果当前线程池中线程数量小于这个值，则直接通过ThreadFactory新建一个线程来处理这个请求，如果已有线程数量大于等于这个值则将请求放入阻塞队列中。 maximumPoolSize：线程池的最大线程数目，当线程池数量已经等于corePoolSize并且阻塞队列也已经满了，则看线程数量是否小于maximumPoolSize：如果小于则创建一个线程来处理请求，否则使用“饱和策略”来拒绝这个请求。对于大于corePoolSize部分的线程，称作这部分线程为“idle threads”，这部分线程会有一个最大空闲时间，如果超过这个空闲时间还没有任务进来则将这些空闲线程回收。 keepAliveTime和unit：这两个参数主要用来控制idle threads的最大空闲时间，超过这个空闲时间空闲线程将被回收。这里有一点需要注意，ThreadPoolExecutor中有一个属性:private volatile boolean allowCoreThreadTimeOut;，这个用来指定是否允许核心线程空闲超时回收，默认为false，即不允许核心线程超时回收，核心线程将一直等待新任务。如果设置这个参数为true，核心线程空闲超时后也可以被回收。 workQueue：阻塞队列，超过corePoolSize部分的请求放入这个阻塞队列中等待执行。阻塞队列分为有界阻塞队列和无界阻塞队列。在创建阻塞队列时如果我们指定了这个队列的“capacity”则这个队列就是有界的，否则是无界的。这里有一点需要注意：使用线程池之前请明确是否真的需要无界阻塞队列，如果阻塞队列是无界的，会导致大量的请求堆积，进而造成内存溢出系统崩溃。 threadFactory：是一个线程池工厂，主要用来为线程池创建线程，我们可以定制一个ThreadFactory来达到统一命名我们线程池中的线程的目的。 handler：饱和策略，用来拒绝多余的请求。饱和策略有：CallerRunsPolicy：请求脱离线程池运行（调用者caller线程来运行这个任务）；AbortPolicy：抛出RejectedExecutionException异常；DiscardPolicy：丢弃这个任务，即什么也不做；DiscardOldestPolicy：将阻塞队列中等待时间最久的任务删除（即队列头部的任务），将新的任务加入队尾。\n\ncorePoolSize：核心线程数。如果等于0，则任务执行完后，没有任务请求进入时销毁线程池中的线程。如果大于0，即使本地任务执行完毕，核心线程也不会被销毁。设置过大会浪费系统资源，设置过小导致线程频繁创建。 maximumPoolSize：最大线程数。必须大于等于1，且大于等于corePoolSize。如果与corePoolSize相等，则线程池大小固定。如果大于corePoolSize，则最多创建maximumPoolSize个线程执行任务，其他任务加入到workQueue缓存队列中，当workQueue为空且执行任务数小于maximumPoolSize时，线程空闲时间超过keepAliveTime会被回收。 keepAliveTime：线程空闲时间。线程池中线程空闲时间达到keepAliveTime值时，线程会被销毁，只到剩下corePoolSize个线程为止。默认情况下，线程池的最大线程数大于corePoolSize时，keepAliveTime才会起作用。如果allowCoreThreadTimeOut被设置为true，即使线程池的最大线程数等于corePoolSize，keepAliveTime也会起作用（回收超时的核心线程）。 unit：TimeUnit表示时间单位。 workQueue：缓存队列。当请求线程数大于maximumPoolSize时，线程进入BlockingQueue阻塞队列。 threadFactory：线程工厂。用来生产一组相同任务的线程。主要用于设置生成的线程名词前缀、是否为守护线程以及优先级等。设置有意义的名称前缀有利于在进行虚拟机分析时，知道线程是由哪个线程工厂创建的。 handler：执行拒绝策略对象。当达到任务缓存上限时（即超过workQueue参数能存储的任务数），执行拒接策略，可以看作简单的限流保护。\n\n\n# 1.7 如何关闭线程池\n\n 1. es.shutdown(); 不再接受新的任务，之前提交的任务等执行结束再关闭线程池。\n 2. es.shutdownNow(); 不再接受新的任务，试图停止池中的任务再关闭线程池，返回所有未处理的线程list列表。\n\n\n# 1.8 阻塞队列\n\n 1. ArrayBlockingQueue：是一个基于数组结构的有界阻塞队列，此队列按 FIFO（先进先出）原则对元素进行排序。\n 2. LinkedBlockingQueue：一个基于链表结构的阻塞队列，此队列按FIFO （先进先出） 排序元素，吞吐量通常要高于ArrayBlockingQueue。静态工厂方法Executors.newFixedThreadPool()使用了这个队列。\n 3. SynchronousQueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于LinkedBlockingQueue，静态工厂方法Executors.newCachedThreadPool使用了这个队列。\n 4. PriorityBlockingQueue：一个具有优先级得无限阻塞队列。\n\n队列操作:\n\nadd 增加一个元索; 如果队列已满，则抛出一个异常 remove 移除并返回队列头部的元素; 如果队列为空，则抛出一个异常 offer 添加一个元素并返回true; 如果队列已满，则返回false poll 移除并返回队列头部的元素; 如果队列为空，则返回null put 添加一个元素; 如果队列满，则阻塞 take 移除并返回队列头部的元素; 如果队列为空，则阻塞 element 返回队列头部的元素; 如果队列为空，则抛出一个异常 peek 返回队列头部的元素; 如果队列为空，则返回null\n\n线程池都有哪几种工作队列？\n\n主要存放等待执行的线程, ThreadPoolExecutor中支持自定义该队列来实现不同的排队队列.\n\nArrayBlockingQueue：先进先出队列，创建时指定大小, 有界； LinkedBlockingQueue：使用链表实现的先进先出队列，默认大小为Integer.MAX_VALUE； SynchronousQueue：不保存提交的任务, 数据也不会缓存到队列中, 用于生产者和消费者互等对方, 一起离开. PriorityBlockingQueue: 支持优先级的队列\n\nArrayBlockingQueue LinkedBlockingQueue DelayQueue PriorityBlockingQueue SynchronousQueue ArrayBlockingQueue ArrayBlockingQueue（有界队列）是一个用数组实现的有界阻塞队列，按FIFO排序量。\n\nLinkedBlockingQueue LinkedBlockingQueue（可设置容量队列）基于链表结构的阻塞队列，按FIFO排序任务，容量可以选择进行设置，不设置的话，将是一个无边界的阻塞队列，最大长度为Integer.MAX_VALUE，吞吐量通常要高于ArrayBlockingQuene；newFixedThreadPool线程池使用了这个队列\n\nDelayQueue DelayQueue（延迟队列）是一个任务定时周期的延迟执行的队列。根据指定的执行时间从小到大排序，否则根据插入到队列的先后排序。newScheduledThreadPool线程池使用了这个队列。\n\nPriorityBlockingQueue PriorityBlockingQueue（优先级队列）是具有优先级的无界阻塞队列；\n\nSynchronousQueue SynchronousQueue（同步队列）一个不存储元素的阻塞队列，每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于LinkedBlockingQuene，newCachedThreadPool线程池使用了这个队列。\n\n针对面试题：线程池都有哪几种工作队列？ 我觉得，回答以上几种ArrayBlockingQueue，LinkedBlockingQueue，SynchronousQueue等，说出它们的特点，并结合使用到对应队列的常用线程池(如newFixedThreadPool线程池使用LinkedBlockingQueue)，进行展开阐述， 就可以啦。\n\n\n# 1.9 线程池大小配置\n\n一般根据任务类型进行区分, 假设CPU为N核\n\nCPU密集型任务需要减少线程数量, 降低线程之间切换造成的开销, 可配置线程池大小为N + 1. IO密集型任务则可以加大线程数量, 可配置线程池大小为 N * 2. 混合型任务则可以拆分为CPU密集型与IO密集型, 独立配置. 自定义阻塞队列BlockingQueue\n\n# 1.9.1 拒绝策略/饱和策略\n\n饱和策略，用来拒绝多余的请求。饱 和策略有： CallerRunsPolicy：请求脱离线程池运行（调用者caller线程来运行这个任务）； AbortPolicy：抛出RejectedExecutionException异常； DiscardPolicy：丢弃这个任务，即什么也不做； DiscardOldestPolicy：将阻塞队列中等待时间最久的任务删除（即队列头部的任务），将新的任务加入队尾。\n\n 1. AbortPolicy 简单粗暴，直接抛出RejectedExecutionException拒绝异常，这也是默认的拒绝策略。\n 2. CallerRunsPolicy 请求脱离线程池运行（在调用者线程中直接执行新任务）\n 3. DiscardPolicy 丢弃这个任务，即什么也不做。\n 4. DiscardOldestPolicy 将阻塞队列中等待时间最久的任务删除（即队列头部的任务），将新的任务加入队尾。\n\n\n# 1.10 线程池异常处理\n\n 1. 在runnable中 try-catch捕获异常\n 2. 通过submit执行，Future.get接收异常\n 3. 重写ThreadPoolExcutor.afterExcute方法，处理传递的异常引用\n 4. 实例化时，传入自己的ThreadFactory，设置Thread.UncaughtExceptionHandler处理未检测的异常\n\n\n# 1.11 合理的配置线程池\n\n要想合理的配置线程池，就必须首先分析任务特性，可以从以下几个角度来进行分析：\n\n任务的性质：CPU密集型任务，IO密集型任务和混合型任务。 任务的优先级：高，中和低。 任务的执行时间：长，中和短。 任务的依赖性：是否依赖其他系统资源，如数据库连接。 任务性质不同的任务可以用不同规模的线程池分开处理。CPU密集型任务配置尽可能少的线程数量，如配置Ncpu+1个线程的线程池。IO密集型任务则由于需要等待IO操作，线程并不是一直在执行任务，则配置尽可能多的线程，如2*Ncpu。混合型的任务，如果可以拆分，则将其拆分成一个CPU密集型任务和一个IO密集型任务，只要这两个任务执行的时间相差不是太大，那么分解后执行的吞吐率要高于串行执行的吞吐率，如果这两个任务执行时间相差太大，则没必要进行分解。我们可以通过Runtime.getRuntime().availableProcessors()方法获得当前设备的CPU个数。\n\n优先级不同的任务可以使用优先级队列PriorityBlockingQueue来处理。它可以让优先级高的任务先得到执行，需要注意的是如果一直有优先级高的任务提交到队列里，那么优先级低的任务可能永远不能执行。\n\n执行时间不同的任务可以交给不同规模的线程池来处理，或者也可以使用优先级队列，让执行时间短的任务先执行。\n\n依赖数据库连接池的任务，因为线程提交SQL后需要等待数据库返回结果，如果等待的时间越长CPU空闲时间就越长，那么线程数应该设置越大，这样才能更好的利用CPU。 建议使用有界队列，有界队列能增加系统的稳定性和预警能力，可以根据需要设大一点，比如几千。有一次我们组使用的后台任务线程池的队列和线程池全满了，不断的抛出抛弃任务的异常，通过排查发现是数据库出现了问题，导致执行SQL变得非常缓慢，因为后台任务线程池里的任务全是需要向数据库查询和插入数据的，所以导致线程池里的工作线程全部阻塞住，任务积压在线程池里。如果当时我们设置成无界队列，线程池的队列就会越来越多，有可能会撑满内存，导致整个系统不可用，而不只是后台任务出现问题。当然我们的系统所有的任务是用的单独的服务器部署的，而我们使用不同规模的线程池跑不同类型的任务，但是出现这样问题时也会影响到其他任务。\n\n\n# 1.12 ForkJoinPool\n\nDoug Lea在JDK7中引入了Fork/Join框架，ForkJoinPool不同于ThreadPoolExecutor，它是一种基于"分治"思想的计算框架。java8的stream API中很多地方都有用到ForkJoinPool。ForkJoinPool中的工作线程会对自己的任务按照一定的粒度进行拆分，一个大任务拆分成多个子任务之后，子任务放入工作队列中等待执行。当一个线程的工作队列为空是可以从其他线程的工作队列中steal任务执行。这也是"work-stealing"的由来。\n\n基本思想 ForkJoinPool 的每个工作线程都维护着一个工作队列（WorkQueue），这是一个双端队列（Deque），里面存放的对象是任务（ForkJoinTask）。 每个工作线程在运行中产生新的任务（通常是因为调用了 fork()）时，会放入工作队列的队尾，并且工作线程在处理自己的工作队列时，使用的是"LIFO"方式，也就是说每次从队尾取出任务来执行。 每个工作线程在处理自己的工作队列同时，会尝试窃取一个任务（或是来自于刚刚提交到 pool 的任务，或是来自于其他工作线程的工作队列），窃取的任务位于其他线程的工作队列的队首，也就是说工作线程在窃取其他工作线程的任务时，使用的是 FIFO 方式。 在遇到 join() 时，如果需要 join 的任务尚未完成，则会先处理其他任务，并等待其完成。 在既没有自己的任务，也没有可以窃取的任务时，进入休眠。\n\njoin 检查调用 join() 的线程是否是 ForkJoinThread 线程。如果不是（例如 main 线程），则阻塞当前线程，等待任务完成。如果是，则不阻塞。 查看任务的完成状态，如果已经完成，直接返回结果。 如果任务尚未完成，但处于自己的工作队列内，则完成它。 如果任务已经被其他的工作线程偷走，则窃取这个小偷的工作队列内的任务（以 FIFO 方式），执行，以期帮助它早日完成欲 join 的任务。 如果偷走任务的小偷也已经把自己的任务全部做完，正在等待需要 join 的任务时，则找到小偷的小偷，帮助它完成它的任务。 递归地执行第5步。\n\n\n# 1.13 线程池工作流程\n\n1、如果线程池中的线程小于corePoolSize时就会创建新线程直接执行任务。 2、如果线程池中的线程大于corePoolSize时就会暂时把任务存储到工作队列workQueue中等待执行。 3、如果工作队列workQueue也满时，当线程数小于最大线程池数maximumPoolSize时就会创建新线程来处理，而线程数大于等于最大线程池数maximumPoolSize时就会执行拒绝策略。\n\n\n# 1.14 线程池为什么要使用阻塞队列而不使用非阻塞队列？\n\n阻塞队列可以保证任务队列中没有任务时阻塞获取任务的线程，使得线程进入wait状态，释放cpu资源。 当队列中有任务时才唤醒对应线程从队列中取出消息进行执行。 使得在线程不至于一直占用cpu资源。\n\n（线程执行完任务后通过循环再次从任务队列中取出任务进行执行，代码片段如下 while (task != null || (task = getTask()) != null) {}）。\n\n不用阻塞队列也是可以的，不过实现起来比较麻烦而已，有好用的为啥不用呢？\n\n\n# 1.15 线程池的监控\n\n通过线程池提供的参数进行监控。线程池里有一些属性在监控线程池的时候可以使用\n\ntaskCount：线程池需要执行的任务数量。 completedTaskCount：线程池在运行过程中已完成的任务数量。小于或等于taskCount。 largestPoolSize：线程池曾经创建过的最大线程数量。通过这个数据可以知道线程池是否满过。如等于线程池的最大大小，则表示线程池曾经满了。 getPoolSize:线程池的线程数量。如果线程池不销毁的话，池里的线程不会自动销毁，所以这个大小只增不减。 getActiveCount：获取活动的线程数。 通过扩展线程池进行监控。通过继承线程池并重写线程池的beforeExecute，afterExecute和terminated方法，我们可以在任务执行前，执行后和线程池关闭前干一些事情。如监控任务的平均执行时间，最大执行时间和最小执行时间等。这几个方法在线程池里是空方法。如：\n\nprotected void beforeExecute(Thread t, Runnable r) { }\n\n\n1\n\n\n\n# 二、线程池常见面试题\n\n\n# 2.1 线程池有哪几种实现方式？\n\nExecutors.newFixedThreadPool：创建固定线程数的线程池。核心线程数等于最大线程数，不存在空闲线程，keepAliveTime为0。 Executors.newSingleThreadExecutor：创建单线程的线程池，核心线程数和最大线程数都为1，相当于串行执行。 Executors.newScheduledThreadPool：创建支持定时以及周期性任务执行的线程池。最大线程数是Integer.MAX_VALUE。存在OOM风险。keepAliveTime为0，所以不回收工作线程。 Executors.newCachedThreadPool：核心线程数为0，最大线程数为Integer.MAX_VALUE，是一个高度可伸缩的线程池。存在OOM风险。keepAliveTime为60，工作线程处于空闲状态超过keepAliveTime会回收线程。 Executors.newWorkStealingPool：JDK8引入，创建持有足够线程的线程池支持给定的并行度，并通过使用多个队列减少竞争。\n\n\n# 2.2 禁止直接使用Executors创建线程池原因：\n\nExecutors.newCachedThreadPool和Executors.newScheduledThreadPool两个方法最大线程数为Integer.MAX_VALUE，如果达到上限，没有任务服务器可以继续工作，肯定会抛出OOM异常。\n\nExecutors.newSingleThreadExecutor和Executors.newFixedThreadPool两个方法的workQueue参数为new LinkedBlockingQueue<Runnable>()，容量为Integer.MAX_VALUE，如果瞬间请求非常大，会有OOM风险。\n\n\n# 2.3 线程池状态\n\n线程池有这几个状态：RUNNING,SHUTDOWN,STOP,TIDYING,TERMINATED。\n\n   //线程池状态\n   private static final int RUNNING    = -1 << COUNT_BITS;\n   private static final int SHUTDOWN   =  0 << COUNT_BITS;\n   private static final int STOP       =  1 << COUNT_BITS;\n   private static final int TIDYING    =  2 << COUNT_BITS;\n   private static final int TERMINATED =  3 << COUNT_BITS;\n\n\n1\n2\n3\n4\n5\n6\n\n 1. RUNNING 该状态的线程池会接收新任务，并处理阻塞队列中的任务; 调用线程池的shutdown()方法，可以切换到SHUTDOWN状态; 调用线程池的shutdownNow()方法，可以切换到STOP状态;\n 2. SHUTDOWN 该状态的线程池不会接收新任务，但会处理阻塞队列中的任务； 队列为空，并且线程池中执行的任务也为空,进入TIDYING状态;\n 3. STOP 该状态的线程不会接收新任务，也不会处理阻塞队列中的任务，而且会中断正在运行的任务； 线程池中执行的任务为空,进入TIDYING状态;\n 4. TIDYING 该状态表明所有的任务已经运行终止，记录的任务数量为0。 terminated()执行完毕，进入TERMINATED状态\n 5. TERMINATED 该状态表示线程池彻底终止\n\n\n# 2.4 更多\n\n面试问题1：Java的线程池说一下，各个参数的作用，如何进行的? 面试问题2：按线程池内部机制，当提交新任务时，有哪些异常要考虑。 面试问题3：线程池都有哪几种工作队列？ 面试问题4：使用无界队列的线程池会导致内存飙升吗？ 面试问题5：说说几种常见的线程池及使用场景?\n\n\n# 三、线程池上下文传递\n\n哪些情况需要用到线程池上下文传递呢？\n\n主要针对于通过ThreadLocal传递数据的场景。\n\n对于普通的ThreadLocal而言，其可见性为当前线程，如果把任务提交到线程池中执行，那么显然是读取不到提交任务所在线程的数据的。\n\n常见的几种解决方案：\n\n 1. 提交的时候直接进行显示的数据拷贝\n 2. 如果是传递给子线程，那么可以使用InheritThreadLocal\n 3. 对于线程池，可以使用TTL\n\n\n# 四、动态线程池治理\n\n所谓的动态线程池治理，其核心在于动态调整线程池的参数、监控统计线程池的指标。\n\n现在有两个比较热门的开源动态线程池Java库，我们可以进行参考，也可以直接依赖使用。\n\n\n# 五、线程池的进阶调优\n\n对于线程池的进阶调优，一般涉及到几个层面：\n\n 1. 核心线程数、队列大小、最大线程数这几个参数\n 2. 常见开源框架对线程池的封装与增强\n\n第三方库对线程池的增强不在少数： 以Tomcat为例，其实用的线程池是自身进行改造封装的，提交流程与JDK自身的线程池也不太一样，主要针对的就是web服务做的优化。',normalizedContent:'# 前言\n\n说起java线程池，大家应该都不陌生，虽然我们常常跟线程池打交道，但是很少有人能够真正深入掌握线程池。\n\n特别是对于从事平台研发的朋友，深入掌握线程池是非常有必要的。\n\n本文从java线程池的基本原理展开，到线程池上下文的传递、动态线程池治理、线程池配置的最佳实践逐步展开，再到jvm、操作系统深入理解线程池的运行原理。\n\n\n# 一、线程池基础\n\n阿里巴巴《java 开发手册 崇山版》2020/08/03版本\n\n第一部分编码规约，第(七)栏并发处理(p17)，中有如下两条规定： 3. 【强制】线程资源必须通过线程池提供，不允许在应用中自行显式创建线程。 说明：线程池的好处是减少在创建和销毁线程上所消耗的时间以及系统资源的开销，解决资源不足的问题。 如果不使用线程池，有可能造成系统创建大量同类线程而导致消耗完内存或者“过度切换”的问题。 4. 【强制】线程池不允许使用 executors 去创建，而是通过 threadpoolexecutor 的方式，这 样的处理方式让写的同学更加明确线程池的运行规则，规避资源耗尽的风险。 说明：executors 返回的线程池对象的弊端如下： 1） fixedthreadpool 和 singlethreadpool： 允许的请求队列长度为 integer.max_value，可能会堆积大量的请求，从而导致 oom。 2） cachedthreadpool： 允许的创建线程数量为 integer.max_value，可能会创建大量的线程，从而导致 oom。\n\n\n# 1.1 线程池的概念\n\n简单理解，线程池就是一个管理线程的池子。它是一个可以容纳多个线程的容器，其中的线程可以反复使用。\n\n\n# 1.2 线程池的作用\n\n它的主要特点为：线程复用;控制最大并发数;管理线程。\n\n 1. 复用线程、控制最大并发数。\n 2. 实现定时、周期等与时间相关的功能。\n 3. 实现任务队列缓存策略和拒绝机制。\n 4. 隔离线程环境。如：文件上传服务和数据查询服务在同一台服务器上，由于文件上传服务耗时严重，如果文件上传和数据查询服务使用同一个线程池，那么文件上传服务会影响到数据查询服务。可以通过配置独立线程池来实现文件上传和数据查询服务隔离，避免两者相互影响。\n\n《java 并发编程的艺术》:\n\n> 在开发过程中，合理地使用线程池能够带来3个好处: 第一：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。 第二：提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行。 第三：提高线程的可管理性。线程是稀缺资源，如果无限制地创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一分配、调优和监控。 但是，要做到合理利用线程池，必须对其实现原理了如指掌。\n\n线程池的优点\n\n线程池的优势： 线程池做的工作只要是控制运行的线程数量，处理过程中将任务放入队列，然后在线程创建后启动这些任务，如果线程数量超过了最大数量，超出数量的线程排队等候，等其他线程执行完毕，再从队列中取出任务来执行。\n\n1、线程池的优势 （1）、降低系统资源消耗，通过重用已存在的线程，降低线程创建和销毁造成的消耗； （2）、提高系统响应速度，当有任务到达时，通过复用已存在的线程，无需等待新线程的创建便能立即执行； （3）方便线程并发数的管控。因为线程若是无限制的创建，可能会导致内存占用过多而产生oom，并且会造成cpu过度切换（cpu切换线程是有时间成本的（需要保持当前执行线程的现场，并恢复要执行线程的现场））。 （4）提供更强大的功能，延时定时线程池。\n\n\n# 1.3 非线程池缺点\n\n1、因为线程若是无限制的创建，可能会导致内存占用过多而产生oom，并且会造成cpu过度切换。 2、创建线程池的消耗较高。\n\n\n# 1.4 使用线程池的风险\n\n虽然线程池是构建多线程应用程序的强大机制，但使用它并不是没有风险的。用线程池构建的应用程序容易遭受任何其它多线程应用程序容易遭受的所有并发风险，诸如同步错误和死锁，它还容易遭受特定于线程池的少数其它风险，诸如与池有关的死锁、资源不足和线程泄漏。\n\n# 1.4.1 死锁\n\n任何多线程应用程序都有死锁风险。当一组进程或线程中的每一个都在等待一个只有该组中另一个进程才能引起的事件时，我们就说这组进程或线程 死锁了。死锁的最简单情形是：线程 a 持有对象 x 的独占锁，并且在等待对象 y 的锁，而线程 b 持有对象 y 的独占锁，却在等待对象 x 的锁。除非有某种方法来打破对锁的等待（java 锁定不支持这种方法），否则死锁的线程将永远等下去。\n\n虽然任何多线程程序中都有死锁的风险，但线程池却引入了另一种死锁可能，在那种情况下，所有池线程都在执行已阻塞的等待队列中另一任务的执行结果的任务，但这一任务却因为没有未被占用的线程而不能运行。当线程池被用来实现涉及许多交互对象的模拟，被模拟的对象可以相互发送查询，这些查询接下来作为排队的任务执行，查询对象又同步等待着响应时，会发生这种情况。\n\n# 1.4.2 资源不足\n\n线程池的一个优点在于：相对于其它替代调度机制（有些我们已经讨论过）而言，它们通常执行得很好。但只有恰当地调整了线程池大小时才是这样的。线程消耗包括内存和其它系统资源在内的大量资源。除了 thread 对象所需的内存之外，每个线程都需要两个可能很大的执行调用堆栈。除此以外，jvm可能会为每个 java 线程创建一个本机线程，这些本机线程将消耗额外的系统资源。最后，虽然线程之间切换的调度开销很小，但如果有很多线程，环境切换也可能严重地影响程序的性能。\n\n如果线程池太大，那么被那些线程消耗的资源可能严重地影响系统性能。在线程之间进行切换将会浪费时间，而且使用超出比您实际需要的线程可能会引起资源匮乏问题，因为池线程正在消耗一些资源，而这些资源可能会被其它任务更有效地利用。除了线程自身所使用的资源以外，服务请求时所做的工作可能需要其它资源，例如 jdbc 连接、套接字或文件。这些也都是有限资源，有太多的并发请求也可能引起失效，例如不能分配 jdbc 连接。\n\n# 1.4.3 并发错误\n\n线程池和其它排队机制依靠使用 wait() 和 notify() 方法，这两个方法都难于使用。如果编码不正确，那么可能丢失通知，导致线程保持空闲状态，尽管队列中有工作要处理。使用这些方法时，必须格外小心。而最好使用现有的、已经知道能工作的实现，例如 util.concurrent 包。\n\n# 1.4.4 线程泄漏\n\n各种类型的线程池中一个严重的风险是线程泄漏，当从池中除去一个线程以执行一项任务，而在任务完成后该线程却没有返回池时，会发生这种情况。发生线程泄漏的一种情形出现在任务抛出一个 runtimeexception 或一个 error 时。如果池类没有捕捉到它们，那么线程只会退出而线程池的大小将会永久减少一个。当这种情况发生的次数足够多时，线程池最终就为空，而且系统将停止，因为没有可用的线程来处理任务。\n\n有些任务可能会永远等待某些资源或来自用户的输入，而这些资源又不能保证变得可用，用户可能也已经回家了，诸如此类的任务会永久停止，而这些停止的任务也会引起和线程泄漏同样的问题。如果某个线程被这样一个任务永久地消耗着，那么它实际上就被从池除去了。对于这样的任务，应该要么只给予它们自己的线程，要么只让它们等待有限的时间。\n\n# 1.4.5 请求过载\n\n仅仅是请求就压垮了服务器，这种情况是可能的。在这种情形下，我们可能不想将每个到来的请求都排队到我们的工作队列，因为排在队列中等待执行的任务可能会消耗太多的系统资源并引起资源缺乏。在这种情形下决定如何做取决于您自己；在某些情况下，您可以简单地抛弃请求，依靠更高级别的协议稍后重试请求，您也可以用一个指出服务器暂时很忙的响应来拒绝请求。\n\n\n# 1.5 有效使用线程池的准则\n\n只要您遵循几条简单的准则，线程池可以成为构建服务器应用程序的极其有效的方法：\n\n不要对那些同步等待其它任务结果的任务排队。这可能会导致上面所描述的那种形式的死锁，在那种死锁中，所有线程都被一些任务所占用，这些任务依次等待排队任务的结果，而这些任务又无法执行，因为所有的线程都很忙。\n\n在为时间可能很长的操作使用合用的线程时要小心。如果程序必须等待诸如 i/o 完成这样的某个资源，那么请指定最长的等待时间，以及随后是失效还是将任务重新排队以便稍后执行。这样做保证了：通过将某个线程释放给某个可能成功完成的任务，从而将最终取得某些进展。\n\n理解任务。要有效地调整线程池大小，您需要理解正在排队的任务以及它们正在做什么。它们是 cpu 限制的（cpu-bound）吗？它们是 i/o 限制的（i/o-bound）吗？您的答案将影响您如何调整应用程序。如果您有不同的任务类，这些类有着截然不同的特征，那么为不同任务类设置多个工作队列可能会有意义，这样可以相应地调整每个池。\n\n\n# 1.6 java线程池\n\njava.util.concurrent包中我们能找到线程池的定义，其中threadpoolexecutor是我们线程池核心类\n\npublic threadpoolexecutor(int corepoolsize,\n                              int maximumpoolsize,\n                              long keepalivetime,\n                              timeunit unit,\n                              blockingqueue<runnable> workqueue,\n                              threadfactory threadfactory,\n                              rejectedexecutionhandler handler) {\n        if (corepoolsize < 0 ||\n            maximumpoolsize <= 0 ||\n            maximumpoolsize < corepoolsize ||\n            keepalivetime < 0)\n            throw new illegalargumentexception();\n        if (workqueue == null || threadfactory == null || handler == null)\n            throw new nullpointerexception();\n        this.corepoolsize = corepoolsize;\n        this.maximumpoolsize = maximumpoolsize;\n        this.workqueue = workqueue;\n        this.keepalivetime = unit.tonanos(keepalivetime);\n        this.threadfactory = threadfactory;\n        this.handler = handler;\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\ncorepoolsize：线程池的核心大小，也可以理解为最小的线程池大小。 maximumpoolsize：最大线程池大小。 keepalivetime：空余线程存活时间，指的是超过corepoolsize的空余线程达到多长时间才进行销毁。 unit：销毁时间单位。 workqueue：存储等待执行线程的工作队列。 threadfactory：创建线程的工厂，一般用默认即可。 handler：拒绝策略，当工作队列、线程池全已满时如何拒绝新任务，默认抛出异常。\n\ncorepoolsize：线程池的核心线程数目，当一个请求进来时如果当前线程池中线程数量小于这个值，则直接通过threadfactory新建一个线程来处理这个请求，如果已有线程数量大于等于这个值则将请求放入阻塞队列中。 maximumpoolsize：线程池的最大线程数目，当线程池数量已经等于corepoolsize并且阻塞队列也已经满了，则看线程数量是否小于maximumpoolsize：如果小于则创建一个线程来处理请求，否则使用“饱和策略”来拒绝这个请求。对于大于corepoolsize部分的线程，称作这部分线程为“idle threads”，这部分线程会有一个最大空闲时间，如果超过这个空闲时间还没有任务进来则将这些空闲线程回收。 keepalivetime和unit：这两个参数主要用来控制idle threads的最大空闲时间，超过这个空闲时间空闲线程将被回收。这里有一点需要注意，threadpoolexecutor中有一个属性:private volatile boolean allowcorethreadtimeout;，这个用来指定是否允许核心线程空闲超时回收，默认为false，即不允许核心线程超时回收，核心线程将一直等待新任务。如果设置这个参数为true，核心线程空闲超时后也可以被回收。 workqueue：阻塞队列，超过corepoolsize部分的请求放入这个阻塞队列中等待执行。阻塞队列分为有界阻塞队列和无界阻塞队列。在创建阻塞队列时如果我们指定了这个队列的“capacity”则这个队列就是有界的，否则是无界的。这里有一点需要注意：使用线程池之前请明确是否真的需要无界阻塞队列，如果阻塞队列是无界的，会导致大量的请求堆积，进而造成内存溢出系统崩溃。 threadfactory：是一个线程池工厂，主要用来为线程池创建线程，我们可以定制一个threadfactory来达到统一命名我们线程池中的线程的目的。 handler：饱和策略，用来拒绝多余的请求。饱和策略有：callerrunspolicy：请求脱离线程池运行（调用者caller线程来运行这个任务）；abortpolicy：抛出rejectedexecutionexception异常；discardpolicy：丢弃这个任务，即什么也不做；discardoldestpolicy：将阻塞队列中等待时间最久的任务删除（即队列头部的任务），将新的任务加入队尾。\n\ncorepoolsize：核心线程数。如果等于0，则任务执行完后，没有任务请求进入时销毁线程池中的线程。如果大于0，即使本地任务执行完毕，核心线程也不会被销毁。设置过大会浪费系统资源，设置过小导致线程频繁创建。 maximumpoolsize：最大线程数。必须大于等于1，且大于等于corepoolsize。如果与corepoolsize相等，则线程池大小固定。如果大于corepoolsize，则最多创建maximumpoolsize个线程执行任务，其他任务加入到workqueue缓存队列中，当workqueue为空且执行任务数小于maximumpoolsize时，线程空闲时间超过keepalivetime会被回收。 keepalivetime：线程空闲时间。线程池中线程空闲时间达到keepalivetime值时，线程会被销毁，只到剩下corepoolsize个线程为止。默认情况下，线程池的最大线程数大于corepoolsize时，keepalivetime才会起作用。如果allowcorethreadtimeout被设置为true，即使线程池的最大线程数等于corepoolsize，keepalivetime也会起作用（回收超时的核心线程）。 unit：timeunit表示时间单位。 workqueue：缓存队列。当请求线程数大于maximumpoolsize时，线程进入blockingqueue阻塞队列。 threadfactory：线程工厂。用来生产一组相同任务的线程。主要用于设置生成的线程名词前缀、是否为守护线程以及优先级等。设置有意义的名称前缀有利于在进行虚拟机分析时，知道线程是由哪个线程工厂创建的。 handler：执行拒绝策略对象。当达到任务缓存上限时（即超过workqueue参数能存储的任务数），执行拒接策略，可以看作简单的限流保护。\n\n\n# 1.7 如何关闭线程池\n\n 1. es.shutdown(); 不再接受新的任务，之前提交的任务等执行结束再关闭线程池。\n 2. es.shutdownnow(); 不再接受新的任务，试图停止池中的任务再关闭线程池，返回所有未处理的线程list列表。\n\n\n# 1.8 阻塞队列\n\n 1. arrayblockingqueue：是一个基于数组结构的有界阻塞队列，此队列按 fifo（先进先出）原则对元素进行排序。\n 2. linkedblockingqueue：一个基于链表结构的阻塞队列，此队列按fifo （先进先出） 排序元素，吞吐量通常要高于arrayblockingqueue。静态工厂方法executors.newfixedthreadpool()使用了这个队列。\n 3. synchronousqueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于linkedblockingqueue，静态工厂方法executors.newcachedthreadpool使用了这个队列。\n 4. priorityblockingqueue：一个具有优先级得无限阻塞队列。\n\n队列操作:\n\nadd 增加一个元索; 如果队列已满，则抛出一个异常 remove 移除并返回队列头部的元素; 如果队列为空，则抛出一个异常 offer 添加一个元素并返回true; 如果队列已满，则返回false poll 移除并返回队列头部的元素; 如果队列为空，则返回null put 添加一个元素; 如果队列满，则阻塞 take 移除并返回队列头部的元素; 如果队列为空，则阻塞 element 返回队列头部的元素; 如果队列为空，则抛出一个异常 peek 返回队列头部的元素; 如果队列为空，则返回null\n\n线程池都有哪几种工作队列？\n\n主要存放等待执行的线程, threadpoolexecutor中支持自定义该队列来实现不同的排队队列.\n\narrayblockingqueue：先进先出队列，创建时指定大小, 有界； linkedblockingqueue：使用链表实现的先进先出队列，默认大小为integer.max_value； synchronousqueue：不保存提交的任务, 数据也不会缓存到队列中, 用于生产者和消费者互等对方, 一起离开. priorityblockingqueue: 支持优先级的队列\n\narrayblockingqueue linkedblockingqueue delayqueue priorityblockingqueue synchronousqueue arrayblockingqueue arrayblockingqueue（有界队列）是一个用数组实现的有界阻塞队列，按fifo排序量。\n\nlinkedblockingqueue linkedblockingqueue（可设置容量队列）基于链表结构的阻塞队列，按fifo排序任务，容量可以选择进行设置，不设置的话，将是一个无边界的阻塞队列，最大长度为integer.max_value，吞吐量通常要高于arrayblockingquene；newfixedthreadpool线程池使用了这个队列\n\ndelayqueue delayqueue（延迟队列）是一个任务定时周期的延迟执行的队列。根据指定的执行时间从小到大排序，否则根据插入到队列的先后排序。newscheduledthreadpool线程池使用了这个队列。\n\npriorityblockingqueue priorityblockingqueue（优先级队列）是具有优先级的无界阻塞队列；\n\nsynchronousqueue synchronousqueue（同步队列）一个不存储元素的阻塞队列，每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于linkedblockingquene，newcachedthreadpool线程池使用了这个队列。\n\n针对面试题：线程池都有哪几种工作队列？ 我觉得，回答以上几种arrayblockingqueue，linkedblockingqueue，synchronousqueue等，说出它们的特点，并结合使用到对应队列的常用线程池(如newfixedthreadpool线程池使用linkedblockingqueue)，进行展开阐述， 就可以啦。\n\n\n# 1.9 线程池大小配置\n\n一般根据任务类型进行区分, 假设cpu为n核\n\ncpu密集型任务需要减少线程数量, 降低线程之间切换造成的开销, 可配置线程池大小为n + 1. io密集型任务则可以加大线程数量, 可配置线程池大小为 n * 2. 混合型任务则可以拆分为cpu密集型与io密集型, 独立配置. 自定义阻塞队列blockingqueue\n\n# 1.9.1 拒绝策略/饱和策略\n\n饱和策略，用来拒绝多余的请求。饱 和策略有： callerrunspolicy：请求脱离线程池运行（调用者caller线程来运行这个任务）； abortpolicy：抛出rejectedexecutionexception异常； discardpolicy：丢弃这个任务，即什么也不做； discardoldestpolicy：将阻塞队列中等待时间最久的任务删除（即队列头部的任务），将新的任务加入队尾。\n\n 1. abortpolicy 简单粗暴，直接抛出rejectedexecutionexception拒绝异常，这也是默认的拒绝策略。\n 2. callerrunspolicy 请求脱离线程池运行（在调用者线程中直接执行新任务）\n 3. discardpolicy 丢弃这个任务，即什么也不做。\n 4. discardoldestpolicy 将阻塞队列中等待时间最久的任务删除（即队列头部的任务），将新的任务加入队尾。\n\n\n# 1.10 线程池异常处理\n\n 1. 在runnable中 try-catch捕获异常\n 2. 通过submit执行，future.get接收异常\n 3. 重写threadpoolexcutor.afterexcute方法，处理传递的异常引用\n 4. 实例化时，传入自己的threadfactory，设置thread.uncaughtexceptionhandler处理未检测的异常\n\n\n# 1.11 合理的配置线程池\n\n要想合理的配置线程池，就必须首先分析任务特性，可以从以下几个角度来进行分析：\n\n任务的性质：cpu密集型任务，io密集型任务和混合型任务。 任务的优先级：高，中和低。 任务的执行时间：长，中和短。 任务的依赖性：是否依赖其他系统资源，如数据库连接。 任务性质不同的任务可以用不同规模的线程池分开处理。cpu密集型任务配置尽可能少的线程数量，如配置ncpu+1个线程的线程池。io密集型任务则由于需要等待io操作，线程并不是一直在执行任务，则配置尽可能多的线程，如2*ncpu。混合型的任务，如果可以拆分，则将其拆分成一个cpu密集型任务和一个io密集型任务，只要这两个任务执行的时间相差不是太大，那么分解后执行的吞吐率要高于串行执行的吞吐率，如果这两个任务执行时间相差太大，则没必要进行分解。我们可以通过runtime.getruntime().availableprocessors()方法获得当前设备的cpu个数。\n\n优先级不同的任务可以使用优先级队列priorityblockingqueue来处理。它可以让优先级高的任务先得到执行，需要注意的是如果一直有优先级高的任务提交到队列里，那么优先级低的任务可能永远不能执行。\n\n执行时间不同的任务可以交给不同规模的线程池来处理，或者也可以使用优先级队列，让执行时间短的任务先执行。\n\n依赖数据库连接池的任务，因为线程提交sql后需要等待数据库返回结果，如果等待的时间越长cpu空闲时间就越长，那么线程数应该设置越大，这样才能更好的利用cpu。 建议使用有界队列，有界队列能增加系统的稳定性和预警能力，可以根据需要设大一点，比如几千。有一次我们组使用的后台任务线程池的队列和线程池全满了，不断的抛出抛弃任务的异常，通过排查发现是数据库出现了问题，导致执行sql变得非常缓慢，因为后台任务线程池里的任务全是需要向数据库查询和插入数据的，所以导致线程池里的工作线程全部阻塞住，任务积压在线程池里。如果当时我们设置成无界队列，线程池的队列就会越来越多，有可能会撑满内存，导致整个系统不可用，而不只是后台任务出现问题。当然我们的系统所有的任务是用的单独的服务器部署的，而我们使用不同规模的线程池跑不同类型的任务，但是出现这样问题时也会影响到其他任务。\n\n\n# 1.12 forkjoinpool\n\ndoug lea在jdk7中引入了fork/join框架，forkjoinpool不同于threadpoolexecutor，它是一种基于"分治"思想的计算框架。java8的stream api中很多地方都有用到forkjoinpool。forkjoinpool中的工作线程会对自己的任务按照一定的粒度进行拆分，一个大任务拆分成多个子任务之后，子任务放入工作队列中等待执行。当一个线程的工作队列为空是可以从其他线程的工作队列中steal任务执行。这也是"work-stealing"的由来。\n\n基本思想 forkjoinpool 的每个工作线程都维护着一个工作队列（workqueue），这是一个双端队列（deque），里面存放的对象是任务（forkjointask）。 每个工作线程在运行中产生新的任务（通常是因为调用了 fork()）时，会放入工作队列的队尾，并且工作线程在处理自己的工作队列时，使用的是"lifo"方式，也就是说每次从队尾取出任务来执行。 每个工作线程在处理自己的工作队列同时，会尝试窃取一个任务（或是来自于刚刚提交到 pool 的任务，或是来自于其他工作线程的工作队列），窃取的任务位于其他线程的工作队列的队首，也就是说工作线程在窃取其他工作线程的任务时，使用的是 fifo 方式。 在遇到 join() 时，如果需要 join 的任务尚未完成，则会先处理其他任务，并等待其完成。 在既没有自己的任务，也没有可以窃取的任务时，进入休眠。\n\njoin 检查调用 join() 的线程是否是 forkjointhread 线程。如果不是（例如 main 线程），则阻塞当前线程，等待任务完成。如果是，则不阻塞。 查看任务的完成状态，如果已经完成，直接返回结果。 如果任务尚未完成，但处于自己的工作队列内，则完成它。 如果任务已经被其他的工作线程偷走，则窃取这个小偷的工作队列内的任务（以 fifo 方式），执行，以期帮助它早日完成欲 join 的任务。 如果偷走任务的小偷也已经把自己的任务全部做完，正在等待需要 join 的任务时，则找到小偷的小偷，帮助它完成它的任务。 递归地执行第5步。\n\n\n# 1.13 线程池工作流程\n\n1、如果线程池中的线程小于corepoolsize时就会创建新线程直接执行任务。 2、如果线程池中的线程大于corepoolsize时就会暂时把任务存储到工作队列workqueue中等待执行。 3、如果工作队列workqueue也满时，当线程数小于最大线程池数maximumpoolsize时就会创建新线程来处理，而线程数大于等于最大线程池数maximumpoolsize时就会执行拒绝策略。\n\n\n# 1.14 线程池为什么要使用阻塞队列而不使用非阻塞队列？\n\n阻塞队列可以保证任务队列中没有任务时阻塞获取任务的线程，使得线程进入wait状态，释放cpu资源。 当队列中有任务时才唤醒对应线程从队列中取出消息进行执行。 使得在线程不至于一直占用cpu资源。\n\n（线程执行完任务后通过循环再次从任务队列中取出任务进行执行，代码片段如下 while (task != null || (task = gettask()) != null) {}）。\n\n不用阻塞队列也是可以的，不过实现起来比较麻烦而已，有好用的为啥不用呢？\n\n\n# 1.15 线程池的监控\n\n通过线程池提供的参数进行监控。线程池里有一些属性在监控线程池的时候可以使用\n\ntaskcount：线程池需要执行的任务数量。 completedtaskcount：线程池在运行过程中已完成的任务数量。小于或等于taskcount。 largestpoolsize：线程池曾经创建过的最大线程数量。通过这个数据可以知道线程池是否满过。如等于线程池的最大大小，则表示线程池曾经满了。 getpoolsize:线程池的线程数量。如果线程池不销毁的话，池里的线程不会自动销毁，所以这个大小只增不减。 getactivecount：获取活动的线程数。 通过扩展线程池进行监控。通过继承线程池并重写线程池的beforeexecute，afterexecute和terminated方法，我们可以在任务执行前，执行后和线程池关闭前干一些事情。如监控任务的平均执行时间，最大执行时间和最小执行时间等。这几个方法在线程池里是空方法。如：\n\nprotected void beforeexecute(thread t, runnable r) { }\n\n\n1\n\n\n\n# 二、线程池常见面试题\n\n\n# 2.1 线程池有哪几种实现方式？\n\nexecutors.newfixedthreadpool：创建固定线程数的线程池。核心线程数等于最大线程数，不存在空闲线程，keepalivetime为0。 executors.newsinglethreadexecutor：创建单线程的线程池，核心线程数和最大线程数都为1，相当于串行执行。 executors.newscheduledthreadpool：创建支持定时以及周期性任务执行的线程池。最大线程数是integer.max_value。存在oom风险。keepalivetime为0，所以不回收工作线程。 executors.newcachedthreadpool：核心线程数为0，最大线程数为integer.max_value，是一个高度可伸缩的线程池。存在oom风险。keepalivetime为60，工作线程处于空闲状态超过keepalivetime会回收线程。 executors.newworkstealingpool：jdk8引入，创建持有足够线程的线程池支持给定的并行度，并通过使用多个队列减少竞争。\n\n\n# 2.2 禁止直接使用executors创建线程池原因：\n\nexecutors.newcachedthreadpool和executors.newscheduledthreadpool两个方法最大线程数为integer.max_value，如果达到上限，没有任务服务器可以继续工作，肯定会抛出oom异常。\n\nexecutors.newsinglethreadexecutor和executors.newfixedthreadpool两个方法的workqueue参数为new linkedblockingqueue<runnable>()，容量为integer.max_value，如果瞬间请求非常大，会有oom风险。\n\n\n# 2.3 线程池状态\n\n线程池有这几个状态：running,shutdown,stop,tidying,terminated。\n\n   //线程池状态\n   private static final int running    = -1 << count_bits;\n   private static final int shutdown   =  0 << count_bits;\n   private static final int stop       =  1 << count_bits;\n   private static final int tidying    =  2 << count_bits;\n   private static final int terminated =  3 << count_bits;\n\n\n1\n2\n3\n4\n5\n6\n\n 1. running 该状态的线程池会接收新任务，并处理阻塞队列中的任务; 调用线程池的shutdown()方法，可以切换到shutdown状态; 调用线程池的shutdownnow()方法，可以切换到stop状态;\n 2. shutdown 该状态的线程池不会接收新任务，但会处理阻塞队列中的任务； 队列为空，并且线程池中执行的任务也为空,进入tidying状态;\n 3. stop 该状态的线程不会接收新任务，也不会处理阻塞队列中的任务，而且会中断正在运行的任务； 线程池中执行的任务为空,进入tidying状态;\n 4. tidying 该状态表明所有的任务已经运行终止，记录的任务数量为0。 terminated()执行完毕，进入terminated状态\n 5. terminated 该状态表示线程池彻底终止\n\n\n# 2.4 更多\n\n面试问题1：java的线程池说一下，各个参数的作用，如何进行的? 面试问题2：按线程池内部机制，当提交新任务时，有哪些异常要考虑。 面试问题3：线程池都有哪几种工作队列？ 面试问题4：使用无界队列的线程池会导致内存飙升吗？ 面试问题5：说说几种常见的线程池及使用场景?\n\n\n# 三、线程池上下文传递\n\n哪些情况需要用到线程池上下文传递呢？\n\n主要针对于通过threadlocal传递数据的场景。\n\n对于普通的threadlocal而言，其可见性为当前线程，如果把任务提交到线程池中执行，那么显然是读取不到提交任务所在线程的数据的。\n\n常见的几种解决方案：\n\n 1. 提交的时候直接进行显示的数据拷贝\n 2. 如果是传递给子线程，那么可以使用inheritthreadlocal\n 3. 对于线程池，可以使用ttl\n\n\n# 四、动态线程池治理\n\n所谓的动态线程池治理，其核心在于动态调整线程池的参数、监控统计线程池的指标。\n\n现在有两个比较热门的开源动态线程池java库，我们可以进行参考，也可以直接依赖使用。\n\n\n# 五、线程池的进阶调优\n\n对于线程池的进阶调优，一般涉及到几个层面：\n\n 1. 核心线程数、队列大小、最大线程数这几个参数\n 2. 常见开源框架对线程池的封装与增强\n\n第三方库对线程池的增强不在少数： 以tomcat为例，其实用的线程池是自身进行改造封装的，提交流程与jdk自身的线程池也不太一样，主要针对的就是web服务做的优化。',charsets:{cjk:!0}},{title:"JWT服务端主动失效方案",frontmatter:{title:"JWT服务端主动失效方案",date:"2020-09-11T00:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["后端"],publish:!0,permalink:"/pages/2f4254/",readingShow:"top"},regularPath:"/10.%E5%90%8E%E7%AB%AF/20.%E6%96%B9%E6%A1%88/01.JWT%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%B8%BB%E5%8A%A8%E5%A4%B1%E6%95%88%E6%96%B9%E6%A1%88.html",relativePath:"10.后端/20.方案/01.JWT服务端主动失效方案.md",key:"v-0bc39c2e",path:"/pages/2f4254/",headers:[{level:3,title:"目录：",slug:"目录",normalizedTitle:"目录：",charIndex:105},{level:3,title:"1.什么是JWT",slug:"_1-什么是jwt",normalizedTitle:"1.什么是jwt",charIndex:189},{level:3,title:"2.JWT的特点",slug:"_2-jwt的特点",normalizedTitle:"2.jwt的特点",charIndex:305},{level:3,title:"3.JWT主动失效方案",slug:"_3-jwt主动失效方案",normalizedTitle:"3.jwt主动失效方案",charIndex:607},{level:3,title:"4.JWT主动失效最佳实践",slug:"_4-jwt主动失效最佳实践",normalizedTitle:"4.jwt主动失效最佳实践",charIndex:1105},{level:4,title:"关于黑名单的实现：",slug:"关于黑名单的实现",normalizedTitle:"关于黑名单的实现：",charIndex:1376},{level:4,title:"实现主动失效：",slug:"实现主动失效",normalizedTitle:"实现主动失效：",charIndex:1487},{level:3,title:"5.进阶",slug:"_5-进阶",normalizedTitle:"5.进阶",charIndex:1554},{level:4,title:"优化1：",slug:"优化1",normalizedTitle:"优化1：",charIndex:1631},{level:4,title:"优化2：",slug:"优化2",normalizedTitle:"优化2：",charIndex:1853},{level:3,title:"6.总结",slug:"_6-总结",normalizedTitle:"6.总结",charIndex:2078}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"目录： 1.什么是JWT 2.JWT的特点 3.JWT主动失效方案 4.JWT主动失效最佳实践 关于黑名单的实现： 实现主动失效： 5.进阶 优化1： 优化2： 6.总结",content:"> 引言: 使用JWT时，有一个十分头疼问题就是：用户主动注销、强制登出(禁止登陆)、忘记密码、修改密码、JWT续签、踢出下线时，服务器不能让token主动失效！\n\n本文将探索关于这个问题的解决方案。\n\n\n# 目录：\n\n[toc]\n\n 1. 什么是JWT\n 2. JWT的特点\n 3. JWT主动失效方案\n 4. JWT主动失效最佳实践\n 5. 进阶优化\n 6. 总结\n\n\n# 1.什么是JWT\n\n> JWT(JSON Web Token)是一个开放标准(RFC 7519)，它定义了一种紧凑的、自包含的方式，用于作为JSON对象在各方之间安全地传输信息。该信息可以被验证和信任，因为它是数字签名的。\n\n\n# 2.JWT的特点\n\n 1. 无状态： JWT包含认证信息，token只需要保存在客户端，服务端不需要保存会话信息，所以JWT是无状态的。 这一点使得服务器压力大大降低，增加了系统的可用性和可扩展性。 但是无状态同时也是JWT最大的缺点，服务器无法主动让token失效。\n\n 2. 安全性：客户端每次请求都会携带token，可以有效避免CSRF攻击，同时token会自动过期，可以减少token被盗用的情况，服务器会通过jwt签名验证token，可以避免token被篡改。\n\n 3. 可见性： JWT的payload部分可以直接通过Base64解码，所以可存储一些其他业务逻辑所必要的非敏感信息。\n\n\n# 3.JWT主动失效方案\n\n由JWT的特点可知，JWT是无状态的，并且JWT的过期时间是签发的时候确定的，无法动态修改， 所以服务端如何让JWT主动失效成为了一个问题。 下面是几种让JWT主动失效的方案\n\n 1. 服务器生成token时，将每一个token都保存在Redis中，每次请求都会直接对比用户携带的token和redis中的token，如果token相同，则通过验证，否则判定为token失效。\n 2. 版本号校验：token和redis中保存用户的token版本号，每次请求对比版本号，一致就通过，不一致就拒绝，主动失效时直接使redis中该用户token版本号+1.\n 3. 服务端保存一个token黑名单，服务器将需要失效的token放入黑名单，每次请求判断携带的token是否在黑名单之中。\n 4. redis保存主动过期时间，每次请求获取token的签发时间，和redis中的过期时间对比，小于过期时间则失效。\n 5. 签名校验，数据库中每个用户保存一个token签名，签发token时携带签名信息，redis中保存过期签名信息黑名单。每次比对签名，在黑名单，则失效。\n\n\n# 4.JWT主动失效最佳实践\n\n通过了解上面的JWT主动失效方案，下面结合实际业务需求， 总结一种可以应用于生产的最佳实践方案:\n\n 1. 首先保证token过期时间不要太长，一般120分钟比较合适。\n 2. token必须携带签发时间\n 3. 通过redis保存一个黑名单，key包含用户id，value为主动失效时间戳。\n 4. 每次请求，通过token基本校验之后，查询黑名单中是否有该用户id,如果有，那么比较token签发时间和黑名单中的主动失效时间，如果签发时间早于失效时间，那么表示token失效，拒绝请求，否则允许访问。\n\n# 关于黑名单的实现：\n\n可以直接使用redis保存key-value,key中携带用户id，value为失效时间，这样的话就可以直接使用redis的自动过期，这个过期时间设置为token有效时长(如前面的120分钟)\n\n# 实现主动失效：\n\n当需要主动让某用户token失效时， 可以组合当前用户id和当前时间戳保存在redis中，并设置有效时长。\n\n\n# 5.进阶\n\n对于上面这种方案， 每次让用户token失效，则会使得该用户在失效前签发的所有token都失效，无法更加精确的控制token的失效性。\n\n# 优化1：\n\n如果实际需求是，有多个应用产品，比如Android、IOS、Windows和Web多端产品，业务要求可以每次控制失效的具体是哪个产品申请的token。\n\n这种情况，我们可以在JWT的payload中保存一个请求签发的token的具体客户端应用标识，比如(android)， 而redis过期黑名单中的key值，除了携带用户id，再加上具体想失效的应用标识即可。\n\n当然，如果要具体到每一个token，只能采用上面的方案1了。\n\n# 优化2：\n\n如果实际应用对访问速度和性能要求比较高，用户每次请求都要连接redis读取信息，是比较浪费的。 实际上，redis作为内存数据库，其速度已经相当的快了，不过实际场景可能会是分布式缓存系统，redis连接和读取还是会有一定的ttl延迟。 优化办法就是：需要做JWT校验的服务器应用，在启动时，访问分布式缓存中的token过期黑名单，将其保存在应用的本地内存当中。同时订阅分布式缓存的消息推送，在黑名单信息发生变化是，进行数据同步。\n\n\n# 6.总结\n\n通过上面的解决方案实践和优化 我们就可以实现服务器端主动让token失效的功能了。 而在具体的应用场景有：\n\n> 用户主动注销、强制登出(禁止登陆)、忘记密码、修改密码、JWT续签、踢出下线等\n\n实现的代价就是需要使用redis缓存黑名单， 在一定程度上破坏了JWT无状态的特性， 但是实际上需要主动使JWT失效的情况只占整个活动用户的很小一部分， 所以相比较于分布式Session，JWT实现的方式需要的存储空间很小。\n\n对于进阶优化2，使用了分布式缓存和应用本地同步，增加了方案的复杂性， 不过对于大部分的应用场景来说，都具有完整的分布式缓存、消息分布订阅组件，只需要直接使用现成的即可，花费的代价并不多。\n\n> 究竟采用哪种方案实现，都应该结合具体的业务需求的，并不存在真正完美的方案。",normalizedContent:"> 引言: 使用jwt时，有一个十分头疼问题就是：用户主动注销、强制登出(禁止登陆)、忘记密码、修改密码、jwt续签、踢出下线时，服务器不能让token主动失效！\n\n本文将探索关于这个问题的解决方案。\n\n\n# 目录：\n\n[toc]\n\n 1. 什么是jwt\n 2. jwt的特点\n 3. jwt主动失效方案\n 4. jwt主动失效最佳实践\n 5. 进阶优化\n 6. 总结\n\n\n# 1.什么是jwt\n\n> jwt(json web token)是一个开放标准(rfc 7519)，它定义了一种紧凑的、自包含的方式，用于作为json对象在各方之间安全地传输信息。该信息可以被验证和信任，因为它是数字签名的。\n\n\n# 2.jwt的特点\n\n 1. 无状态： jwt包含认证信息，token只需要保存在客户端，服务端不需要保存会话信息，所以jwt是无状态的。 这一点使得服务器压力大大降低，增加了系统的可用性和可扩展性。 但是无状态同时也是jwt最大的缺点，服务器无法主动让token失效。\n\n 2. 安全性：客户端每次请求都会携带token，可以有效避免csrf攻击，同时token会自动过期，可以减少token被盗用的情况，服务器会通过jwt签名验证token，可以避免token被篡改。\n\n 3. 可见性： jwt的payload部分可以直接通过base64解码，所以可存储一些其他业务逻辑所必要的非敏感信息。\n\n\n# 3.jwt主动失效方案\n\n由jwt的特点可知，jwt是无状态的，并且jwt的过期时间是签发的时候确定的，无法动态修改， 所以服务端如何让jwt主动失效成为了一个问题。 下面是几种让jwt主动失效的方案\n\n 1. 服务器生成token时，将每一个token都保存在redis中，每次请求都会直接对比用户携带的token和redis中的token，如果token相同，则通过验证，否则判定为token失效。\n 2. 版本号校验：token和redis中保存用户的token版本号，每次请求对比版本号，一致就通过，不一致就拒绝，主动失效时直接使redis中该用户token版本号+1.\n 3. 服务端保存一个token黑名单，服务器将需要失效的token放入黑名单，每次请求判断携带的token是否在黑名单之中。\n 4. redis保存主动过期时间，每次请求获取token的签发时间，和redis中的过期时间对比，小于过期时间则失效。\n 5. 签名校验，数据库中每个用户保存一个token签名，签发token时携带签名信息，redis中保存过期签名信息黑名单。每次比对签名，在黑名单，则失效。\n\n\n# 4.jwt主动失效最佳实践\n\n通过了解上面的jwt主动失效方案，下面结合实际业务需求， 总结一种可以应用于生产的最佳实践方案:\n\n 1. 首先保证token过期时间不要太长，一般120分钟比较合适。\n 2. token必须携带签发时间\n 3. 通过redis保存一个黑名单，key包含用户id，value为主动失效时间戳。\n 4. 每次请求，通过token基本校验之后，查询黑名单中是否有该用户id,如果有，那么比较token签发时间和黑名单中的主动失效时间，如果签发时间早于失效时间，那么表示token失效，拒绝请求，否则允许访问。\n\n# 关于黑名单的实现：\n\n可以直接使用redis保存key-value,key中携带用户id，value为失效时间，这样的话就可以直接使用redis的自动过期，这个过期时间设置为token有效时长(如前面的120分钟)\n\n# 实现主动失效：\n\n当需要主动让某用户token失效时， 可以组合当前用户id和当前时间戳保存在redis中，并设置有效时长。\n\n\n# 5.进阶\n\n对于上面这种方案， 每次让用户token失效，则会使得该用户在失效前签发的所有token都失效，无法更加精确的控制token的失效性。\n\n# 优化1：\n\n如果实际需求是，有多个应用产品，比如android、ios、windows和web多端产品，业务要求可以每次控制失效的具体是哪个产品申请的token。\n\n这种情况，我们可以在jwt的payload中保存一个请求签发的token的具体客户端应用标识，比如(android)， 而redis过期黑名单中的key值，除了携带用户id，再加上具体想失效的应用标识即可。\n\n当然，如果要具体到每一个token，只能采用上面的方案1了。\n\n# 优化2：\n\n如果实际应用对访问速度和性能要求比较高，用户每次请求都要连接redis读取信息，是比较浪费的。 实际上，redis作为内存数据库，其速度已经相当的快了，不过实际场景可能会是分布式缓存系统，redis连接和读取还是会有一定的ttl延迟。 优化办法就是：需要做jwt校验的服务器应用，在启动时，访问分布式缓存中的token过期黑名单，将其保存在应用的本地内存当中。同时订阅分布式缓存的消息推送，在黑名单信息发生变化是，进行数据同步。\n\n\n# 6.总结\n\n通过上面的解决方案实践和优化 我们就可以实现服务器端主动让token失效的功能了。 而在具体的应用场景有：\n\n> 用户主动注销、强制登出(禁止登陆)、忘记密码、修改密码、jwt续签、踢出下线等\n\n实现的代价就是需要使用redis缓存黑名单， 在一定程度上破坏了jwt无状态的特性， 但是实际上需要主动使jwt失效的情况只占整个活动用户的很小一部分， 所以相比较于分布式session，jwt实现的方式需要的存储空间很小。\n\n对于进阶优化2，使用了分布式缓存和应用本地同步，增加了方案的复杂性， 不过对于大部分的应用场景来说，都具有完整的分布式缓存、消息分布订阅组件，只需要直接使用现成的即可，花费的代价并不多。\n\n> 究竟采用哪种方案实现，都应该结合具体的业务需求的，并不存在真正完美的方案。",charsets:{cjk:!0}},{title:"SpringBoot3.0快速上手",frontmatter:{title:"SpringBoot3.0快速上手",date:"2022-12-07T09:58:56.000Z",permalink:"/pages/10dcf7/",categories:["后端"],tags:["Spring","SpringBoot"],readingShow:"top"},regularPath:"/10.%E5%90%8E%E7%AB%AF/30.Spring%E4%B8%93%E9%A2%98/10.SpringBoot3.0%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"10.后端/30.Spring专题/10.SpringBoot3.0快速上手.md",key:"v-446131ae",path:"/pages/10dcf7/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一、新特性",slug:"一、新特性",normalizedTitle:"一、新特性",charIndex:150},{level:2,title:"二、快速开始",slug:"二、快速开始",normalizedTitle:"二、快速开始",charIndex:527},{level:2,title:"三、工程分析",slug:"三、工程分析",normalizedTitle:"三、工程分析",charIndex:685},{level:2,title:"四、实现hello world",slug:"四、实现hello-world",normalizedTitle:"四、实现hello world",charIndex:2891},{level:2,title:"五、打包部署",slug:"五、打包部署",normalizedTitle:"五、打包部署",charIndex:2911},{level:3,title:"5.1 打包普通fatjar",slug:"_5-1-打包普通fatjar",normalizedTitle:"5.1 打包普通fatjar",charIndex:2922},{level:3,title:"5.2 打包Native镜像",slug:"_5-2-打包native镜像",normalizedTitle:"5.2 打包native镜像",charIndex:2941},{level:2,title:"六、总结",slug:"六、总结",normalizedTitle:"六、总结",charIndex:2960}],excerpt:'<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>2022年1128日，Spring Boot 3.0已经正式发布了，这是一次非常大的更新，距离3.0版本的普及还有一段时间。</p>\n<p>其中最为关注的AOT功能，早在2021年Spring Native早期阶段进行了尝鲜，对此期待不已，时隔一年，Spring生态正式迎来了云原生新时代！</p>\n',lastUpdated:"12/7/2022, 8:45:46 PM",lastUpdatedTimestamp:1670417146e3,headersStr:"前言 一、新特性 二、快速开始 三、工程分析 四、实现hello world 五、打包部署 5.1 打包普通fatjar 5.2 打包Native镜像 六、总结",content:'# 前言\n\n2022年1128日，Spring Boot 3.0已经正式发布了，这是一次非常大的更新，距离3.0版本的普及还有一段时间。\n\n其中最为关注的AOT功能，早在2021年Spring Native早期阶段进行了尝鲜，对此期待不已，时隔一年，Spring生态正式迎来了云原生新时代！\n\n\n# 一、新特性\n\n我们首先看一下SpringBoot3.0最为重大的几个更新吧：\n\n 1. 最低JDK版本必须是 Java 17\n 2. 依赖Spring Framework 6\n 3. 支持GraalVM Native\n\n这三个可谓是Java正式步入云原生时代的标志，如今在Golang统治云原生的时代，Java能否再延续下一个时代，就看关键就看SpringBoot3.0了。\n\nSpringBoot还包含一些其他特性，这不是目前我们主要关注的点，特别对于2.7以下的低版本升级3.0，难度还是比较大的，需要做许多适配工作，后面我们再专门针对升级进行讨论。\n\n附上官网发布说明地址： https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0-Release-Notes\n\n\n# 二、快速开始\n\n话不多说，我们先直接利用Spring Initializr快速开始一个hello world工程。\n\nhttps://start.spring.io/\n\n\n\n这里我们选择使用maven创建一个工程，待会儿再试试Gradle\n\n\n\n这里我们选择3.0.0版本，添加 GraalVM和Web依赖\n\n\n# 三、工程分析\n\n这是生成好的maven pom文件：\n\n<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>3.0.0</version>\n        <relativePath/> \x3c!-- lookup parent from repository --\x3e\n    </parent>\n    <groupId>cn.flyoo.demo</groupId>\n    <artifactId>spring-triple-maven-demo</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>spring-triple-maven-demo</name>\n    <description>spring-triple-maven-demo</description>\n    <properties>\n        <java.version>17</java.version>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.graalvm.buildtools</groupId>\n                <artifactId>native-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n其中最为关键的两个地方：\n\nSpringBoot依赖管理作为parent:\n\n<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>3.0.0</version>\n    <relativePath/> \x3c!-- lookup parent from repository --\x3e\n</parent>\n\n\n1\n2\n3\n4\n5\n6\n\n\nGraalVM打包native的插件\n\n<plugin>\n    <groupId>org.graalvm.buildtools</groupId>\n    <artifactId>native-maven-plugin</artifactId>\n</plugin>\n\n\n1\n2\n3\n4\n\n\n\n# 四、实现hello world\n\n\n# 五、打包部署\n\n\n# 5.1 打包普通fatjar\n\n\n# 5.2 打包Native镜像\n\n\n# 六、总结\n\n单从hello world这么简单的工程来看，SpringBoot3.0使用上跟SpringBoot2.0也没有多少不同。\n\n接下来我们分别从细节出发，真正解锁SpringBoot的打开方式。\n\n下一篇我们解锁SpringBoot GraalVM详细实用姿势',normalizedContent:'# 前言\n\n2022年1128日，spring boot 3.0已经正式发布了，这是一次非常大的更新，距离3.0版本的普及还有一段时间。\n\n其中最为关注的aot功能，早在2021年spring native早期阶段进行了尝鲜，对此期待不已，时隔一年，spring生态正式迎来了云原生新时代！\n\n\n# 一、新特性\n\n我们首先看一下springboot3.0最为重大的几个更新吧：\n\n 1. 最低jdk版本必须是 java 17\n 2. 依赖spring framework 6\n 3. 支持graalvm native\n\n这三个可谓是java正式步入云原生时代的标志，如今在golang统治云原生的时代，java能否再延续下一个时代，就看关键就看springboot3.0了。\n\nspringboot还包含一些其他特性，这不是目前我们主要关注的点，特别对于2.7以下的低版本升级3.0，难度还是比较大的，需要做许多适配工作，后面我们再专门针对升级进行讨论。\n\n附上官网发布说明地址： https://github.com/spring-projects/spring-boot/wiki/spring-boot-3.0-release-notes\n\n\n# 二、快速开始\n\n话不多说，我们先直接利用spring initializr快速开始一个hello world工程。\n\nhttps://start.spring.io/\n\n\n\n这里我们选择使用maven创建一个工程，待会儿再试试gradle\n\n\n\n这里我们选择3.0.0版本，添加 graalvm和web依赖\n\n\n# 三、工程分析\n\n这是生成好的maven pom文件：\n\n<?xml version="1.0" encoding="utf-8"?>\n<project xmlns="http://maven.apache.org/pom/4.0.0" xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n         xsi:schemalocation="http://maven.apache.org/pom/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelversion>4.0.0</modelversion>\n    <parent>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-parent</artifactid>\n        <version>3.0.0</version>\n        <relativepath/> \x3c!-- lookup parent from repository --\x3e\n    </parent>\n    <groupid>cn.flyoo.demo</groupid>\n    <artifactid>spring-triple-maven-demo</artifactid>\n    <version>0.0.1-snapshot</version>\n    <name>spring-triple-maven-demo</name>\n    <description>spring-triple-maven-demo</description>\n    <properties>\n        <java.version>17</java.version>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupid>org.springframework.boot</groupid>\n            <artifactid>spring-boot-starter-web</artifactid>\n        </dependency>\n\n        <dependency>\n            <groupid>org.springframework.boot</groupid>\n            <artifactid>spring-boot-starter-test</artifactid>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupid>org.graalvm.buildtools</groupid>\n                <artifactid>native-maven-plugin</artifactid>\n            </plugin>\n            <plugin>\n                <groupid>org.springframework.boot</groupid>\n                <artifactid>spring-boot-maven-plugin</artifactid>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n其中最为关键的两个地方：\n\nspringboot依赖管理作为parent:\n\n<parent>\n    <groupid>org.springframework.boot</groupid>\n    <artifactid>spring-boot-starter-parent</artifactid>\n    <version>3.0.0</version>\n    <relativepath/> \x3c!-- lookup parent from repository --\x3e\n</parent>\n\n\n1\n2\n3\n4\n5\n6\n\n\ngraalvm打包native的插件\n\n<plugin>\n    <groupid>org.graalvm.buildtools</groupid>\n    <artifactid>native-maven-plugin</artifactid>\n</plugin>\n\n\n1\n2\n3\n4\n\n\n\n# 四、实现hello world\n\n\n# 五、打包部署\n\n\n# 5.1 打包普通fatjar\n\n\n# 5.2 打包native镜像\n\n\n# 六、总结\n\n单从hello world这么简单的工程来看，springboot3.0使用上跟springboot2.0也没有多少不同。\n\n接下来我们分别从细节出发，真正解锁springboot的打开方式。\n\n下一篇我们解锁springboot graalvm详细实用姿势',charsets:{cjk:!0}},{title:"使用pnpm搭建vite monorepo环境",frontmatter:{title:"使用pnpm搭建vite monorepo环境",date:"2022-12-03T19:48:25.000Z",permalink:"/pages/1fe498/",categories:["前端","Vue3"],tags:[null],readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/10.Vue3/01.%E4%BD%BF%E7%94%A8pnpm%E6%90%AD%E5%BB%BAvite%20monorepo%E7%8E%AF%E5%A2%83.html",relativePath:"20.前端/10.Vue3/01.使用pnpm搭建vite monorepo环境.md",key:"v-bde2967c",path:"/pages/1fe498/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一、简介",slug:"一、简介",normalizedTitle:"一、简介",charIndex:167},{level:2,title:"二、环境准备",slug:"二、环境准备",normalizedTitle:"二、环境准备",charIndex:252},{level:3,title:"2.1 通过npm安装",slug:"_2-1-通过npm安装",normalizedTitle:"2.1 通过npm安装",charIndex:263},{level:3,title:"2.2 独立安装",slug:"_2-2-独立安装",normalizedTitle:"2.2 独立安装",charIndex:305},{level:3,title:"2.3 更多安装方式",slug:"_2-3-更多安装方式",normalizedTitle:"2.3 更多安装方式",charIndex:464},{level:2,title:"三、pnpm + vite + vue3 使用monorepo最佳实践",slug:"三、pnpm-vite-vue3-使用monorepo最佳实践",normalizedTitle:"三、pnpm + vite + vue3 使用monorepo最佳实践",charIndex:525},{level:3,title:"3.1 创建工程",slug:"_3-1-创建工程",normalizedTitle:"3.1 创建工程",charIndex:565},{level:3,title:"3.2 monorepo使用",slug:"_3-2-monorepo使用",normalizedTitle:"3.2 monorepo使用",charIndex:643},{level:2,title:"采坑",slug:"采坑",normalizedTitle:"采坑",charIndex:958},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1071},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:1174}],excerpt:'<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>前端开发我们最常用的依赖管理工具是npm，再有yarn后来居上，但对版本管理，性能上面都存在不少问题。</p>\n<p>对于前端，以往monorepo是没有Java的Maven/Gradle方便的，通过pnpm加持，同一个仓库管理多个组价、模块、项目变得非常方便。</p>\n<blockquote>\n<p>项目初衷：节约磁盘空间并提升安装速度 --pnpm官网</p>\n</blockquote>\n',lastUpdated:"12/5/2022, 9:00:10 PM",lastUpdatedTimestamp:167024521e4,headersStr:"前言 一、简介 二、环境准备 2.1 通过npm安装 2.2 独立安装 2.3 更多安装方式 三、pnpm + vite + vue3 使用monorepo最佳实践 3.1 创建工程 3.2 monorepo使用 采坑 总结 参考资料",content:"# 前言\n\n前端开发我们最常用的依赖管理工具是npm，再有yarn后来居上，但对版本管理，性能上面都存在不少问题。\n\n对于前端，以往monorepo是没有Java的Maven/Gradle方便的，通过pnpm加持，同一个仓库管理多个组价、模块、项目变得非常方便。\n\n> 项目初衷：节约磁盘空间并提升安装速度 --pnpm官网\n\n\n# 一、简介\n\npnpm官网地址:https://pnpm.io/zh/motivation 注意，域名是 .io，不是百度查到的.cn，在官网可以选择中文文档的。\n\n\n# 二、环境准备\n\n\n# 2.1 通过npm安装\n\nnpm install -g pnpm\n\n\n1\n\n\n\n# 2.2 独立安装\n\nWindows 使用 PowerShell：\n\niwr https://get.pnpm.io/install.ps1 -useb | iex\n\n\n1\n\n\n在 POSIX 系统上\n\ncurl -fsSL https://get.pnpm.io/install.sh | sh -\n\n\n1\n\n\n\n# 2.3 更多安装方式\n\n直接查看官方文档即可：\n\nhttps://pnpm.io/zh/installation\n\n\n# 三、pnpm + vite + vue3 使用monorepo最佳实践\n\n\n# 3.1 创建工程\n\nmkdir pnpm-vite-demo cd pnpm-vite-demo pnpm init mkdir packages\n\n\n# 3.2 monorepo使用\n\n配置pnpm-workspace.yaml\n\npackages:\n  # all packages in direct subdirs of packages/\n  - 'packages/*'\n  # all packages in subdirs of components/\n  - 'components/**'\n  # exclude packages that are inside test directories\n  - '!**/test/**'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n官网参考：https://pnpm.io/zh/pnpm-workspace_yaml\n\n\n# 采坑\n\n.npmrc文件\n\nshamefully-hoist=true\nstrict-peer-dependencies=false\nignore-workspace-root-check=true\n\n\n1\n2\n3\n\n\n\n# 总结\n\n积跬步以至千里，致敬每个爱学习的你。\n\n本文涉及的代码的代码都已上传到Github中，如果搭建遇到问题，可以clone到本地进行参考\n\n如果本文对你有所帮助，不妨到Github点个小心心☆\n\n\n# 参考资料\n\n1.pnpm官网地址",normalizedContent:"# 前言\n\n前端开发我们最常用的依赖管理工具是npm，再有yarn后来居上，但对版本管理，性能上面都存在不少问题。\n\n对于前端，以往monorepo是没有java的maven/gradle方便的，通过pnpm加持，同一个仓库管理多个组价、模块、项目变得非常方便。\n\n> 项目初衷：节约磁盘空间并提升安装速度 --pnpm官网\n\n\n# 一、简介\n\npnpm官网地址:https://pnpm.io/zh/motivation 注意，域名是 .io，不是百度查到的.cn，在官网可以选择中文文档的。\n\n\n# 二、环境准备\n\n\n# 2.1 通过npm安装\n\nnpm install -g pnpm\n\n\n1\n\n\n\n# 2.2 独立安装\n\nwindows 使用 powershell：\n\niwr https://get.pnpm.io/install.ps1 -useb | iex\n\n\n1\n\n\n在 posix 系统上\n\ncurl -fssl https://get.pnpm.io/install.sh | sh -\n\n\n1\n\n\n\n# 2.3 更多安装方式\n\n直接查看官方文档即可：\n\nhttps://pnpm.io/zh/installation\n\n\n# 三、pnpm + vite + vue3 使用monorepo最佳实践\n\n\n# 3.1 创建工程\n\nmkdir pnpm-vite-demo cd pnpm-vite-demo pnpm init mkdir packages\n\n\n# 3.2 monorepo使用\n\n配置pnpm-workspace.yaml\n\npackages:\n  # all packages in direct subdirs of packages/\n  - 'packages/*'\n  # all packages in subdirs of components/\n  - 'components/**'\n  # exclude packages that are inside test directories\n  - '!**/test/**'\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n官网参考：https://pnpm.io/zh/pnpm-workspace_yaml\n\n\n# 采坑\n\n.npmrc文件\n\nshamefully-hoist=true\nstrict-peer-dependencies=false\nignore-workspace-root-check=true\n\n\n1\n2\n3\n\n\n\n# 总结\n\n积跬步以至千里，致敬每个爱学习的你。\n\n本文涉及的代码的代码都已上传到github中，如果搭建遇到问题，可以clone到本地进行参考\n\n如果本文对你有所帮助，不妨到github点个小心心☆\n\n\n# 参考资料\n\n1.pnpm官网地址",charsets:{cjk:!0}},{title:"Vue3中setup()获取子组件实例",frontmatter:{title:"Vue3中setup()获取子组件实例",date:"2021-01-12T16:30:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue3"],publish:!0,permalink:"/pages/bbc17d/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/10.Vue3/Vue3%E4%B8%ADsetup%E8%8E%B7%E5%8F%96%E5%AD%90%E7%BB%84%E4%BB%B6.html",relativePath:"20.前端/10.Vue3/Vue3中setup获取子组件.md",key:"v-8ff1aee6",path:"/pages/bbc17d/",headers:[{level:3,title:"引言",slug:"引言",normalizedTitle:"引言",charIndex:2},{level:3,title:"使用方式",slug:"使用方式",normalizedTitle:"使用方式",charIndex:107},{level:3,title:"ref方式总结",slug:"ref方式总结",normalizedTitle:"ref方式总结",charIndex:1433}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"引言 使用方式 ref方式总结",content:"# 引言\n\n在vue2中，我们可以通过this.$refs来获取子组件的实例。 我们知道，在vue3中，setup函数中this是不起作用的 所以我们在setup中不能使用this.$refs来获取实例。\n\n\n# 使用方式\n\n下面是vue3中获取实例的办法：\n\n子组件\n\n// childCompoment.vue\n<template>\n  // 渲染从父级接受到的值\n  <div>Child: {{ valueRef }}</div>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\n\nexport default defineComponent({\n  setup() {\n    const valueRef = ref('')\n    \n    // 该函数可以接受父级传递一个参数，并修改valueRef的值\n    const acceptValue = (value: string) => (valueRef.value = value)\n\n    return {\n      acceptValue,\n      valueRef\n    }\n  }\n})\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n父组件\n\n<template>\n  <div>childRef</div>\n  <button @click=\"sendValue\">send</button>\n  // 这里ref接受的字符串，要setup返回的ref类型的变量同名\n  <chiled-compoment ref=\"childRef\" />\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport childCompoment from './childCompoment.vue'\n\nexport default ({\n  components: {\n    childCompoment\n  },\n  setup() {\n    // 如果ref初始值是一个空，可以用于接受一个实例\n    // vue3中获取实例的方式和vue2略有不同\n    const childRef = ref()\n    const sendValue = () => {\n      // 可以拿到子组件实例，并调用其setup返回的所有信息\n      console.log(childRef.value)\n      // 通过调用子组件实例的方法，向其传递数据\n      childRef.value.acceptValue('hello world')\n    }\n    return {\n      childRef,\n      sendValue\n    }\n  }\n})\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n其实这种方式跟Vue2中使用this.refs,this.children的方式很相似，都是通过拿到子组件实例，直接调用子组件身上的函数。\n\n\n# ref方式总结\n\n优点：父组件可以获取快速向确定存在的子组件传递数据，传递的参数不受限制，传递方式比较灵活 缺点：ref获取的子组件必须确定存在的（不确定存在的情况：如插槽上子组件，v-if控制的子组件），子组件还需要实现接受参数的方法",normalizedContent:"# 引言\n\n在vue2中，我们可以通过this.$refs来获取子组件的实例。 我们知道，在vue3中，setup函数中this是不起作用的 所以我们在setup中不能使用this.$refs来获取实例。\n\n\n# 使用方式\n\n下面是vue3中获取实例的办法：\n\n子组件\n\n// childcompoment.vue\n<template>\n  // 渲染从父级接受到的值\n  <div>child: {{ valueref }}</div>\n</template>\n\n<script>\nimport { definecomponent, ref } from 'vue'\n\nexport default definecomponent({\n  setup() {\n    const valueref = ref('')\n    \n    // 该函数可以接受父级传递一个参数，并修改valueref的值\n    const acceptvalue = (value: string) => (valueref.value = value)\n\n    return {\n      acceptvalue,\n      valueref\n    }\n  }\n})\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n父组件\n\n<template>\n  <div>childref</div>\n  <button @click=\"sendvalue\">send</button>\n  // 这里ref接受的字符串，要setup返回的ref类型的变量同名\n  <chiled-compoment ref=\"childref\" />\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport childcompoment from './childcompoment.vue'\n\nexport default ({\n  components: {\n    childcompoment\n  },\n  setup() {\n    // 如果ref初始值是一个空，可以用于接受一个实例\n    // vue3中获取实例的方式和vue2略有不同\n    const childref = ref()\n    const sendvalue = () => {\n      // 可以拿到子组件实例，并调用其setup返回的所有信息\n      console.log(childref.value)\n      // 通过调用子组件实例的方法，向其传递数据\n      childref.value.acceptvalue('hello world')\n    }\n    return {\n      childref,\n      sendvalue\n    }\n  }\n})\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n其实这种方式跟vue2中使用this.refs,this.children的方式很相似，都是通过拿到子组件实例，直接调用子组件身上的函数。\n\n\n# ref方式总结\n\n优点：父组件可以获取快速向确定存在的子组件传递数据，传递的参数不受限制，传递方式比较灵活 缺点：ref获取的子组件必须确定存在的（不确定存在的情况：如插槽上子组件，v-if控制的子组件），子组件还需要实现接受参数的方法",charsets:{cjk:!0}},{title:"Vue3笔记之emits",frontmatter:{title:"Vue3笔记之emits",date:"2020-12-13T10:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/78f387/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/10.Vue3/Vue3%E7%AC%94%E8%AE%B0%E4%B9%8Bemits.html",relativePath:"20.前端/10.Vue3/Vue3笔记之emits.md",key:"v-171cb300",path:"/pages/78f387/",headers:[{level:3,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:3,title:"Vue 2中用法",slug:"vue-2中用法",normalizedTitle:"vue 2中用法",charIndex:77},{level:3,title:"在Vue 3中",slug:"在vue-3中",normalizedTitle:"在vue 3中",charIndex:136},{level:3,title:"emits用法",slug:"emits用法",normalizedTitle:"emits用法",charIndex:265},{level:3,title:"特性",slug:"特性",normalizedTitle:"特性",charIndex:1053},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1576}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"概述 Vue 2中用法 在Vue 3中 emits用法 特性 总结",content:"# 概述\n\nVue 3增加了emits选项，和props选项很相似。 emits用于定义该组件能够emit发送给父组件的事件列表(events)\n\n\n# Vue 2中用法\n\n直接通过\n\nthis.$emit(\"accepted\")\n\n\n1\n\n\n向父组件发送事件。\n\n\n# 在Vue 3中\n\n可以这样定义\n\nexport default {\n    props: ['text'],\n    emits: ['accepted']\n}\n// 发送\nthis.$emit('accepted')\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# emits用法\n\nemits 可以是数组或对象，从组件触发自定义事件，emits 可以是简单的数组，或者对象作为替代，允许配置和事件验证。\n\n在对象语法中，每个 property 的值可以为 null 或验证函数。验证函数将接收传递给 $emit 调用的其他参数。如果 this.$emit('foo',1) 被调用，foo 的相应验证函数将接收参数 1。验证函数应返回布尔值，以表示事件参数是否有效。\n\n代码案例：\n\nconst app = Vue.createApp({})\n\n// 数组语法\napp.component('todo-item', {\n  emits: ['check'],\n  created() {\n    this.$emit('check')\n  }\n})\n\n// 对象语法\napp.component('reply-form', {\n  emits: {\n    // 没有验证函数\n    click: null,\n\n    // 带有验证函数\n    submit: payload => {\n      if (payload.email && payload.password) {\n        return true\n      } else {\n        console.warn(`Invalid submit event payload!`)\n        return false\n      }\n    }\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n:::TIPS 注意 emits 选项中列出的事件不会从组件的根元素继承，也将从 $attrs property 中移除。 :::\n\n\n# 特性\n\n在Vue 3中强烈建议在emits中声明需要向父组件发送的事件。\n\n特别是在和html原生事件名字相同的时候，这个就和Vue 2表现不同了。\n\n在Vue 2中，是通过.native监听原生事件\n\n而在Vue 3中，已经移除了.native属性。所有的组件事件都被声明在emits中，没有声明的，在组件的 $attrs中会存在，这样会默认绑定到组件根节点。\n\n举例 下面这样的代码，组件没有在emits中声明click事件，父组件监听该事件会触发两次。\n\n<template>\n  <button v-on:click=\"$emit('click', $event)\">OK</button>\n</template>\n<script>\nexport default {\n  emits: [] // without declared event\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n父组件监听：\n\n<my-button v-on:click=\"handleClick\"></my-button>\n\n\n1\n\n\n会触发两次：\n\n一次是因为调用 $emit(). 一次是因为原生事件监听器被应用到了根节点元素\n\n\n# 总结\n\n 1. 在Vue 3中，我们需要将在组建中emit的事件都声明到emits中\n 2. emits中可以通过对象方式声明，可以包含参数校验\n 3. Vue 3取消了.native\n 4. Vue 3父组件监听事件，没有声明emits的会同时触发原生和emit事件\n 5. Vue 3中声明了emits的事件，父组件监听到的只有组件emit的事件",normalizedContent:"# 概述\n\nvue 3增加了emits选项，和props选项很相似。 emits用于定义该组件能够emit发送给父组件的事件列表(events)\n\n\n# vue 2中用法\n\n直接通过\n\nthis.$emit(\"accepted\")\n\n\n1\n\n\n向父组件发送事件。\n\n\n# 在vue 3中\n\n可以这样定义\n\nexport default {\n    props: ['text'],\n    emits: ['accepted']\n}\n// 发送\nthis.$emit('accepted')\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# emits用法\n\nemits 可以是数组或对象，从组件触发自定义事件，emits 可以是简单的数组，或者对象作为替代，允许配置和事件验证。\n\n在对象语法中，每个 property 的值可以为 null 或验证函数。验证函数将接收传递给 $emit 调用的其他参数。如果 this.$emit('foo',1) 被调用，foo 的相应验证函数将接收参数 1。验证函数应返回布尔值，以表示事件参数是否有效。\n\n代码案例：\n\nconst app = vue.createapp({})\n\n// 数组语法\napp.component('todo-item', {\n  emits: ['check'],\n  created() {\n    this.$emit('check')\n  }\n})\n\n// 对象语法\napp.component('reply-form', {\n  emits: {\n    // 没有验证函数\n    click: null,\n\n    // 带有验证函数\n    submit: payload => {\n      if (payload.email && payload.password) {\n        return true\n      } else {\n        console.warn(`invalid submit event payload!`)\n        return false\n      }\n    }\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n:::tips 注意 emits 选项中列出的事件不会从组件的根元素继承，也将从 $attrs property 中移除。 :::\n\n\n# 特性\n\n在vue 3中强烈建议在emits中声明需要向父组件发送的事件。\n\n特别是在和html原生事件名字相同的时候，这个就和vue 2表现不同了。\n\n在vue 2中，是通过.native监听原生事件\n\n而在vue 3中，已经移除了.native属性。所有的组件事件都被声明在emits中，没有声明的，在组件的 $attrs中会存在，这样会默认绑定到组件根节点。\n\n举例 下面这样的代码，组件没有在emits中声明click事件，父组件监听该事件会触发两次。\n\n<template>\n  <button v-on:click=\"$emit('click', $event)\">ok</button>\n</template>\n<script>\nexport default {\n  emits: [] // without declared event\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n父组件监听：\n\n<my-button v-on:click=\"handleclick\"></my-button>\n\n\n1\n\n\n会触发两次：\n\n一次是因为调用 $emit(). 一次是因为原生事件监听器被应用到了根节点元素\n\n\n# 总结\n\n 1. 在vue 3中，我们需要将在组建中emit的事件都声明到emits中\n 2. emits中可以通过对象方式声明，可以包含参数校验\n 3. vue 3取消了.native\n 4. vue 3父组件监听事件，没有声明emits的会同时触发原生和emit事件\n 5. vue 3中声明了emits的事件，父组件监听到的只有组件emit的事件",charsets:{cjk:!0}},{title:"Vue3笔记之v-for与v-if优先级",frontmatter:{title:"Vue3笔记之v-for与v-if优先级",date:"2020-12-12T21:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/2ad2e9/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/10.Vue3/Vue3%E7%AC%94%E8%AE%B0%E4%B9%8Bv-for%E4%B8%8Ev-if%E4%BC%98%E5%85%88%E7%BA%A7.html",relativePath:"20.前端/10.Vue3/Vue3笔记之v-for与v-if优先级.md",key:"v-abf21084",path:"/pages/2ad2e9/",headers:[{level:3,title:"Vue3中v-for与v-if优先级变化",slug:"vue3中v-for与v-if优先级变化",normalizedTitle:"vue3中v-for与v-if优先级变化",charIndex:2},{level:3,title:"优先级测试",slug:"优先级测试",normalizedTitle:"优先级测试",charIndex:96},{level:3,title:"经验总结",slug:"经验总结",normalizedTitle:"经验总结",charIndex:239},{level:3,title:"参考连接",slug:"参考连接",normalizedTitle:"参考连接",charIndex:702}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"Vue3中v-for与v-if优先级变化 优先级测试 经验总结 参考连接",content:"# Vue3中v-for与v-if优先级变化\n\n * vue 2.x,在同一个元素中使用v-for和v-if，v-for会先生效\n * vue 3.x中，v-if优先级高于v-for\n\n\n# 优先级测试\n\n在vue2中，像下面这样使用，是没有问题的\n\n<div v-for=\"item in list\" :key=\"item\" v-if=\"item =='blue'\">\n    {{item}}\n</div>\n\n\n1\n2\n3\n\n\n在vue3中，会提示item找不到：\n\n\n# 经验总结\n\n一般eslint会提示不要再同一个节点中使用v-for和v-if，在实际开发中，这样会可能会产生一些歧义，不同版本用法不兼容，所以我们应该避免这样的用法。\n\n[vue/no-use-v-if-with-v-for]\nThe 'list' variable inside 'v-for' directive should be replaced with a computed property that returns filtered array instead. You should not mix 'v-for' with 'v-if'.eslint-plugin-vue\n\n\n1\n2\n\n\n合理的用法：\n\n * 如果需要满足条件再渲染v-for，我们可以在外层加一个template包裹，在template上面加v-if\n * 如果需要对循环之后，选择渲染某一个，我们可以v-for本身用template,v-if用在内部标签上\n * 或者我们通过计算属性，来过滤要渲染的list，这会更加规范。\n\n\n# 参考连接\n\nVue官方风格指南",normalizedContent:"# vue3中v-for与v-if优先级变化\n\n * vue 2.x,在同一个元素中使用v-for和v-if，v-for会先生效\n * vue 3.x中，v-if优先级高于v-for\n\n\n# 优先级测试\n\n在vue2中，像下面这样使用，是没有问题的\n\n<div v-for=\"item in list\" :key=\"item\" v-if=\"item =='blue'\">\n    {{item}}\n</div>\n\n\n1\n2\n3\n\n\n在vue3中，会提示item找不到：\n\n\n# 经验总结\n\n一般eslint会提示不要再同一个节点中使用v-for和v-if，在实际开发中，这样会可能会产生一些歧义，不同版本用法不兼容，所以我们应该避免这样的用法。\n\n[vue/no-use-v-if-with-v-for]\nthe 'list' variable inside 'v-for' directive should be replaced with a computed property that returns filtered array instead. you should not mix 'v-for' with 'v-if'.eslint-plugin-vue\n\n\n1\n2\n\n\n合理的用法：\n\n * 如果需要满足条件再渲染v-for，我们可以在外层加一个template包裹，在template上面加v-if\n * 如果需要对循环之后，选择渲染某一个，我们可以v-for本身用template,v-if用在内部标签上\n * 或者我们通过计算属性，来过滤要渲染的list，这会更加规范。\n\n\n# 参考连接\n\nvue官方风格指南",charsets:{cjk:!0}},{title:"Vue3笔记之自定义指令",frontmatter:{title:"Vue3笔记之自定义指令",date:"2020-12-14T20:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/80877c/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/10.Vue3/Vue3%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8B%E4%BB%B6.html",relativePath:"20.前端/10.Vue3/Vue3笔记之事件.md",key:"v-5b0c8d58",path:"/pages/80877c/",headers:[{level:3,title:"概览",slug:"概览",normalizedTitle:"概览",charIndex:2},{level:3,title:"3.x 更新",slug:"_3-x-更新",normalizedTitle:"3.x 更新",charIndex:805},{level:3,title:"迁移策略",slug:"迁移策略",normalizedTitle:"迁移策略",charIndex:895}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"概览 3.x 更新 迁移策略",content:"# 概览\n\n$on，$off 和 $once 实例方法已被移除，应用实例不再实现事件触发接口。\n\n\n# 2.x 语法\n\n在 2.x 中，Vue 实例可用于触发由事件触发 API 通过指令式方式添加的处理函数 ($on，$off 和 $once)。这可以创建 event hub，用来创建在整个应用程序中可用的全局事件监听器：\n\n// eventHub.js\n\nconst eventHub = new Vue()\n\nexport default eventHub\n\n\n1\n2\n3\n\n\n// ChildComponent.vue\nimport eventHub from './eventHub'\n\nexport default {\n  mounted() {\n    // 添加 eventHub 监听器\n    eventHub.$on('custom-event', () => {\n      console.log('Custom event triggered!')\n    })\n  },\n  beforeDestroy() {\n    // 移除 eventHub 监听器\n    eventHub.$off('custom-event')\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n// ParentComponent.vue\nimport eventHub from './eventHub'\n\nexport default {\n  methods: {\n    callGlobalCustomEvent() {\n      eventHub.$emit('custom-event') // 当 ChildComponent 被挂载，控制台中将显示一条消息\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 3.x 更新\n\n我们从实例中完全移除了 $on、$off 和 $once 方法。$emit 仍然包含于现有的 API 中，因为它用于触发由父组件声明式添加的事件处理函数。\n\n\n# 迁移策略\n\n可以使用实现了事件触发接口的外部库来替换现有的 event hub，例如 mitt 或 tiny-emitter。\n\n兼容性构建中也支持这些方法。\n\n最好我们选择其他方式实现吧。",normalizedContent:"# 概览\n\n$on，$off 和 $once 实例方法已被移除，应用实例不再实现事件触发接口。\n\n\n# 2.x 语法\n\n在 2.x 中，vue 实例可用于触发由事件触发 api 通过指令式方式添加的处理函数 ($on，$off 和 $once)。这可以创建 event hub，用来创建在整个应用程序中可用的全局事件监听器：\n\n// eventhub.js\n\nconst eventhub = new vue()\n\nexport default eventhub\n\n\n1\n2\n3\n\n\n// childcomponent.vue\nimport eventhub from './eventhub'\n\nexport default {\n  mounted() {\n    // 添加 eventhub 监听器\n    eventhub.$on('custom-event', () => {\n      console.log('custom event triggered!')\n    })\n  },\n  beforedestroy() {\n    // 移除 eventhub 监听器\n    eventhub.$off('custom-event')\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n// parentcomponent.vue\nimport eventhub from './eventhub'\n\nexport default {\n  methods: {\n    callglobalcustomevent() {\n      eventhub.$emit('custom-event') // 当 childcomponent 被挂载，控制台中将显示一条消息\n    }\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 3.x 更新\n\n我们从实例中完全移除了 $on、$off 和 $once 方法。$emit 仍然包含于现有的 api 中，因为它用于触发由父组件声明式添加的事件处理函数。\n\n\n# 迁移策略\n\n可以使用实现了事件触发接口的外部库来替换现有的 event hub，例如 mitt 或 tiny-emitter。\n\n兼容性构建中也支持这些方法。\n\n最好我们选择其他方式实现吧。",charsets:{cjk:!0}},{title:"Vue3笔记之自定义指令",frontmatter:{title:"Vue3笔记之自定义指令",date:"2020-12-13T10:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/04bd0a/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/10.Vue3/Vue3%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4.html",relativePath:"20.前端/10.Vue3/Vue3笔记之自定义指令.md",key:"v-16c87ba2",path:"/pages/04bd0a/",headers:[{level:3,title:"2.x 语法",slug:"_2-x-语法",normalizedTitle:"2.x 语法",charIndex:2},{level:3,title:"3.x 语法",slug:"_3-x-语法",normalizedTitle:"3.x 语法",charIndex:435},{level:3,title:"参数中组件实例获取方式",slug:"参数中组件实例获取方式",normalizedTitle:"参数中组件实例获取方式",charIndex:1233},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1510}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"2.x 语法 3.x 语法 参数中组件实例获取方式 总结",content:"# 2.x 语法\n\n在 Vue 2，自定义指令是通过使用下面列出的钩子来创建的，这些钩子都是可选的\n\nbind - 指令绑定到元素后发生。只发生一次。 inserted - 元素插入父 DOM 后发生。 update - 当元素更新，但子元素尚未更新时，将调用此钩子。 componentUpdated - 一旦组件和子级被更新，就会调用这个钩子。 unbind - 一旦指令被移除，就会调用这个钩子。也只调用一次。 下面是一个例子：\n\n<p v-highlight=\"'yellow'\">高亮显示此文本亮黄色</p>\nVue.directive('highlight', {\n  bind(el, binding, vnode) {\n    el.style.background = binding.value\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n在这里，在这个元素的初始设置中，指令通过传递一个值来绑定样式，该值可以通过应用程序更新为不同的值。\n\n\n# 3.x 语法\n\n然而，在 Vue 3 中，我们为自定义指令创建了一个更具凝聚力的 API。正如你所看到的，它们与我们的组件生命周期方法有很大的不同，即使我们正与类似的事件钩子，我们现在把它们统一起来了：\n\nbind → beforeMount inserted → mounted beforeUpdate：新的！这是在元素本身更新之前调用的，很像组件生命周期钩子。 update → 移除！有太多的相似之处要更新，所以这是多余的，请改用 updated。 componentUpdated → updated beforeUnmount：新的！与组件生命周期钩子类似，它将在卸载元素之前调用。 unbind -> unmounted 最终 API 如下：\n\nconst MyDirective = {\n  beforeMount(el, binding, vnode, prevVnode) {},\n  mounted() {},\n  beforeUpdate() {}, // 新\n  updated() {},\n  beforeUnmount() {}, // 新\n  unmounted() {}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n生成的 API 可以这样使用，与前面的示例相同：\n\n<p v-highlight=\"'yellow'\">高亮显示此文本亮黄色</p>\nconst app = Vue.createApp({})\n\napp.directive('highlight', {\n  beforeMount(el, binding, vnode) {\n    el.style.background = binding.value\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n既然定制指令生命周期钩子映射了组件本身的那些，那么它们就更容易推理和记住了！\n\n\n# 参数中组件实例获取方式\n\n在Vue 2中，通过vnode获取组件实例：\n\nbind(el, binding, vnode) {\n  const vm = vnode.context\n}\n\n\n1\n2\n3\n\n\n在Vue 3中, 通过binding获取组件实例:\n\nmounted(el, binding, vnode) {\n  const vm = binding.instance\n}\n\n\n1\n2\n3\n\n\n::: WARNING 注意！ 有了片段(fragments)支持，组件可能有多个根节点。当应用于多根组件时，将忽略指令并记录警告。 :::\n\n\n# 总结\n\n在Vue 3中，自定义指令发生了不少变化，我们总结以下几点：\n\n 1. Vue2中自定义组件是全局API，即通过Vue.directive()使用\n 2. Vue3中自定义组件是应用API，即通过createApp({})返回的实例来调用：app.directive()\n 3. 生命周期的钩子函数调整，Vue3中和组件生命周期钩子函数进行了统一\n 4. 在Vue 2中，通过vnode获取组件实例，在Vue 3中, 通过binding获取组件实例\n 5. 在Vue3中，有多个根节点的组件，自定义组件应用于多根组件时，不会生效。",normalizedContent:"# 2.x 语法\n\n在 vue 2，自定义指令是通过使用下面列出的钩子来创建的，这些钩子都是可选的\n\nbind - 指令绑定到元素后发生。只发生一次。 inserted - 元素插入父 dom 后发生。 update - 当元素更新，但子元素尚未更新时，将调用此钩子。 componentupdated - 一旦组件和子级被更新，就会调用这个钩子。 unbind - 一旦指令被移除，就会调用这个钩子。也只调用一次。 下面是一个例子：\n\n<p v-highlight=\"'yellow'\">高亮显示此文本亮黄色</p>\nvue.directive('highlight', {\n  bind(el, binding, vnode) {\n    el.style.background = binding.value\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n\n\n在这里，在这个元素的初始设置中，指令通过传递一个值来绑定样式，该值可以通过应用程序更新为不同的值。\n\n\n# 3.x 语法\n\n然而，在 vue 3 中，我们为自定义指令创建了一个更具凝聚力的 api。正如你所看到的，它们与我们的组件生命周期方法有很大的不同，即使我们正与类似的事件钩子，我们现在把它们统一起来了：\n\nbind → beforemount inserted → mounted beforeupdate：新的！这是在元素本身更新之前调用的，很像组件生命周期钩子。 update → 移除！有太多的相似之处要更新，所以这是多余的，请改用 updated。 componentupdated → updated beforeunmount：新的！与组件生命周期钩子类似，它将在卸载元素之前调用。 unbind -> unmounted 最终 api 如下：\n\nconst mydirective = {\n  beforemount(el, binding, vnode, prevvnode) {},\n  mounted() {},\n  beforeupdate() {}, // 新\n  updated() {},\n  beforeunmount() {}, // 新\n  unmounted() {}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n生成的 api 可以这样使用，与前面的示例相同：\n\n<p v-highlight=\"'yellow'\">高亮显示此文本亮黄色</p>\nconst app = vue.createapp({})\n\napp.directive('highlight', {\n  beforemount(el, binding, vnode) {\n    el.style.background = binding.value\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n既然定制指令生命周期钩子映射了组件本身的那些，那么它们就更容易推理和记住了！\n\n\n# 参数中组件实例获取方式\n\n在vue 2中，通过vnode获取组件实例：\n\nbind(el, binding, vnode) {\n  const vm = vnode.context\n}\n\n\n1\n2\n3\n\n\n在vue 3中, 通过binding获取组件实例:\n\nmounted(el, binding, vnode) {\n  const vm = binding.instance\n}\n\n\n1\n2\n3\n\n\n::: warning 注意！ 有了片段(fragments)支持，组件可能有多个根节点。当应用于多根组件时，将忽略指令并记录警告。 :::\n\n\n# 总结\n\n在vue 3中，自定义指令发生了不少变化，我们总结以下几点：\n\n 1. vue2中自定义组件是全局api，即通过vue.directive()使用\n 2. vue3中自定义组件是应用api，即通过createapp({})返回的实例来调用：app.directive()\n 3. 生命周期的钩子函数调整，vue3中和组件生命周期钩子函数进行了统一\n 4. 在vue 2中，通过vnode获取组件实例，在vue 3中, 通过binding获取组件实例\n 5. 在vue3中，有多个根节点的组件，自定义组件应用于多根组件时，不会生效。",charsets:{cjk:!0}},{title:"Vue中使用Axios自动刷新Token",frontmatter:{title:"Vue中使用Axios自动刷新Token",date:"2020-09-14T00:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Axios","Token"],publish:!0,permalink:"/pages/ac0f1b/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/20.web/Vue%E4%B8%AD%E4%BD%BF%E7%94%A8Axios%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0Token.html",relativePath:"20.前端/20.web/Vue中使用Axios自动刷新Token.md",key:"v-cde56040",path:"/pages/ac0f1b/",headers:[{level:3,title:"需求分析",slug:"需求分析",normalizedTitle:"需求分析",charIndex:210},{level:3,title:"思考",slug:"思考",normalizedTitle:"思考",charIndex:324},{level:3,title:"axios实现",slug:"axios实现",normalizedTitle:"axios实现",charIndex:709},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:3522}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"需求分析 思考 axios实现 总结",content:"> 现在许多项目都是前后端分离的，前端项目访问后端接口请求对应的数据信息，通常我们都是通过登录获取accessToken和refreshToken前端保存在本地， 每次请求都在header中携带accessToken信息，如果accessToken过期，则后台会返回特定的错误码，前端此时就需要使用refreshToken去获取新的accessToken了。\n\n今天我们来聊一聊Vue中实现自动刷新token。\n\n\n# 需求分析\n\n针对上面这种情况，我们知道，业务中的每次请求都需要携带token，如果失败了，我们希望能够 自动进行刷新token的操作，并且刷新成功之后，再尝试重新访问刚才的请求，这样对用户做到 无感知的刷新token。\n\n\n# 思考\n\n如果项目中有上诉需求的接口只有一个的话，我们可以很显然的想到， 判断请求结果的response的status或者自定义body中的code， 如果是后端定义的 **“accessToken过期”**的错误码， 我们就再调用刷新token的接口，获取到新的aceessToken， 然后携带新的acessToken再请求一次之前业务中请求的接口，返回给调用者即可。\n\n但是项目中接口非常多的时候，我们不可能在每个调用的地方都重复这样的操作， 所以我们需要将这些相同的操作抽象出来统一操作。\n\n像这种多个业务具有统一的和业务没有直接关联的功能， 如果熟悉后端开发的同学可能知道， java中的拦截器或者过滤器，其实都可以实现类似的操作。 同时Spring提供的AOP面向切面编程则更加强大。\n\n在axios中也有拦截器的概念，下面我们就用其来实现这个需求。\n\n\n# axios实现\n\n首先是刷新token的代码\n\nfunction refreshToken () {\n    return axios.request({\n        url: '/token/refresh',\n        headers: {\n            isToken:false\n        },\n        method: 'post',\n        params: { refreshToken: refreshToken }\n    }).then(res => res.data)\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n下面是axios的响应拦截器\n\naxios.interceptors.response.use(res => {\n    const status = Number(res.status) || 200;\n    const message = res.data.msg || '未知错误';\n    //如果请求为200则放过，否者默认统一处理,或者在website中配置statusWhiteList白名单自行处理\n    // 401  access_token错误，先尝试用refresh_token刷新\n    if (status === 400 && res.data.code === 401){\n        const config = res.config\n        if (!isRefreshing) {\n            isRefreshing = true\n            return refreshToken().then(res => {\n                console.log(\"刷新token:\",res)\n                let data = res.data\n                // TODO 在这里保存token\n                config.headers['token'] = data.accessToken\n                // 已经刷新了token，将所有队列中的请求进行重试\n                requests.forEach(cb => cb(data.accessToken))\n                return axios(config)\n            }).catch(e => {\n                return Promise.reject(e)\n            }).finally(() => {\n                isRefreshing = false\n            })\n        } else {\n            // 正在刷新token，返回一个未执行resolve的promise\n            return new Promise((resolve) => {\n                // 将resolve放进队列，用一个函数形式来保存，等token刷新后直接执行\n                requests.push((token) => {\n                    //config.baseURL = ''\n                    config.headers['token'] = token\n                    resolve(axios(config))\n                })\n            })\n        }\n    }\n    // refresh_token错误 清空用户信息，并弹出登录窗口\n    if (status === 400 && res.data.code === 402){\n        // TODO 清空用户信息\n        Message({\n            message: \"登录已过期,请重新登录\",\n            type: 'error'\n        })\n        return Promise.reject(new Error(\"登录已过期,请重新登录\"))\n    }\n    console.log(\"进入结果拦截器：\")\n    if (status !== 200) {\n        if (status === 400 && res.data.code === 400){\n            Message({\n                message: message,\n                type: 'error'\n            })\n        }\n        return Promise.reject(res)\n    }\n    return res;\n}, error => {\n    console.log(error);\n    return Promise.reject(new Error(error));\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n下面是axios请求拦截器\n\n//HTTPRequest拦截\naxios.interceptors.request.use(config => {\n    const isToken = (config.data || {}).isToken === false\n    let token = store.state.user.accessToken\n    if (token && !isToken) {\n        config.headers['token'] = token // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\n    }\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 总结\n\n以上就是axios实现的访问失败时自动刷新token 这种方式必须要后端配合，当请求携带的aceessToken过期时，返回特定的错误码",normalizedContent:"> 现在许多项目都是前后端分离的，前端项目访问后端接口请求对应的数据信息，通常我们都是通过登录获取accesstoken和refreshtoken前端保存在本地， 每次请求都在header中携带accesstoken信息，如果accesstoken过期，则后台会返回特定的错误码，前端此时就需要使用refreshtoken去获取新的accesstoken了。\n\n今天我们来聊一聊vue中实现自动刷新token。\n\n\n# 需求分析\n\n针对上面这种情况，我们知道，业务中的每次请求都需要携带token，如果失败了，我们希望能够 自动进行刷新token的操作，并且刷新成功之后，再尝试重新访问刚才的请求，这样对用户做到 无感知的刷新token。\n\n\n# 思考\n\n如果项目中有上诉需求的接口只有一个的话，我们可以很显然的想到， 判断请求结果的response的status或者自定义body中的code， 如果是后端定义的 **“accesstoken过期”**的错误码， 我们就再调用刷新token的接口，获取到新的aceesstoken， 然后携带新的acesstoken再请求一次之前业务中请求的接口，返回给调用者即可。\n\n但是项目中接口非常多的时候，我们不可能在每个调用的地方都重复这样的操作， 所以我们需要将这些相同的操作抽象出来统一操作。\n\n像这种多个业务具有统一的和业务没有直接关联的功能， 如果熟悉后端开发的同学可能知道， java中的拦截器或者过滤器，其实都可以实现类似的操作。 同时spring提供的aop面向切面编程则更加强大。\n\n在axios中也有拦截器的概念，下面我们就用其来实现这个需求。\n\n\n# axios实现\n\n首先是刷新token的代码\n\nfunction refreshtoken () {\n    return axios.request({\n        url: '/token/refresh',\n        headers: {\n            istoken:false\n        },\n        method: 'post',\n        params: { refreshtoken: refreshtoken }\n    }).then(res => res.data)\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n下面是axios的响应拦截器\n\naxios.interceptors.response.use(res => {\n    const status = number(res.status) || 200;\n    const message = res.data.msg || '未知错误';\n    //如果请求为200则放过，否者默认统一处理,或者在website中配置statuswhitelist白名单自行处理\n    // 401  access_token错误，先尝试用refresh_token刷新\n    if (status === 400 && res.data.code === 401){\n        const config = res.config\n        if (!isrefreshing) {\n            isrefreshing = true\n            return refreshtoken().then(res => {\n                console.log(\"刷新token:\",res)\n                let data = res.data\n                // todo 在这里保存token\n                config.headers['token'] = data.accesstoken\n                // 已经刷新了token，将所有队列中的请求进行重试\n                requests.foreach(cb => cb(data.accesstoken))\n                return axios(config)\n            }).catch(e => {\n                return promise.reject(e)\n            }).finally(() => {\n                isrefreshing = false\n            })\n        } else {\n            // 正在刷新token，返回一个未执行resolve的promise\n            return new promise((resolve) => {\n                // 将resolve放进队列，用一个函数形式来保存，等token刷新后直接执行\n                requests.push((token) => {\n                    //config.baseurl = ''\n                    config.headers['token'] = token\n                    resolve(axios(config))\n                })\n            })\n        }\n    }\n    // refresh_token错误 清空用户信息，并弹出登录窗口\n    if (status === 400 && res.data.code === 402){\n        // todo 清空用户信息\n        message({\n            message: \"登录已过期,请重新登录\",\n            type: 'error'\n        })\n        return promise.reject(new error(\"登录已过期,请重新登录\"))\n    }\n    console.log(\"进入结果拦截器：\")\n    if (status !== 200) {\n        if (status === 400 && res.data.code === 400){\n            message({\n                message: message,\n                type: 'error'\n            })\n        }\n        return promise.reject(res)\n    }\n    return res;\n}, error => {\n    console.log(error);\n    return promise.reject(new error(error));\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n下面是axios请求拦截器\n\n//httprequest拦截\naxios.interceptors.request.use(config => {\n    const istoken = (config.data || {}).istoken === false\n    let token = store.state.user.accesstoken\n    if (token && !istoken) {\n        config.headers['token'] = token // 让每个请求携带token--['authorization']为自定义key 请根据实际情况自行修改\n    }\n    return config\n}, error => {\n    return promise.reject(error)\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 总结\n\n以上就是axios实现的访问失败时自动刷新token 这种方式必须要后端配合，当请求携带的aceesstoken过期时，返回特定的错误码",charsets:{cjk:!0}},{title:"yarn搭建与使用",frontmatter:{title:"yarn搭建与使用",date:"2021-01-28T11:29:00.000Z",sidebar:"auto",categories:["前端"],tags:["npm"],publish:!0,permalink:"/pages/eb33ad/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/20.web/yarn%E4%BD%BF%E7%94%A8.html",relativePath:"20.前端/20.web/yarn使用.md",key:"v-89e951b8",path:"/pages/eb33ad/",headers:[{level:3,title:"引言",slug:"引言",normalizedTitle:"引言",charIndex:2},{level:3,title:"yarn的特点：",slug:"yarn的特点",normalizedTitle:"yarn的特点：",charIndex:43},{level:3,title:"yarn的安装:",slug:"yarn的安装",normalizedTitle:"yarn的安装:",charIndex:216},{level:3,title:"常用yarn命令",slug:"常用yarn命令",normalizedTitle:"常用yarn命令",charIndex:555},{level:3,title:"npm与yarn命令比较",slug:"npm与yarn命令比较",normalizedTitle:"npm与yarn命令比较",charIndex:2249},{level:3,title:"快速删除node_modules",slug:"快速删除node-modules",normalizedTitle:"快速删除node_modules",charIndex:2966},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:3093}],lastUpdated:"12/6/2022, 10:02:15 PM",lastUpdatedTimestamp:1670335335e3,headersStr:"引言 yarn的特点： yarn的安装: 常用yarn命令 npm与yarn命令比较 快速删除node_modules 参考文献",content:"# 引言\n\n> Yarn是facebook发布的一款取代npm的包管理工具。\n\n\n# yarn的特点：\n\n1，速度超快。 Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。 2，超级安全。 在执行代码之前，Yarn 会通过算法校验每个安装包的完整性。 3，超级可靠。 使用详细、简洁的锁文件格式和明确的安装算法，Yarn 能够保证在不同系统上无差异的工作。\n\n\n# yarn的安装:\n\n下载node.js，使用npm安装\n\nnpm install -g yarn \n\n\n1\n\n\n如果npm安装后提示yarn命令不存在，去官网下载msi安装：\n\nhttps://classic.yarnpkg.com/en/docs/install#windows-stable\n\n查看版本：\n\nyarn --version\n\n\n1\n\n\nYarn 淘宝源安装：\n\nyarn config set registry https://registry.npm.taobao.org -g \nyarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g\n\n\n1\n2\n\n\n\n# 常用yarn命令\n\n安装yarn \nnpm install -g yarn\n安装成功后，查看版本号： \nyarn --version\n创建文件夹 yarn \nmd yarn\n进入yarn文件夹 \ncd yarn\n初始化项目 \nyarn init // 同npm init，执行输入信息后，会生成package.json文件\n\nyarn的配置项： \nyarn config list // 显示所有配置项\nyarn config get <key> //显示某配置项\nyarn config delete <key> //删除某配置项\nyarn config set <key> <value> [-g|--global] //设置配置项\n\n安装包： \nyarn install //安装package.json里所有包，并将包及它的所有依赖项保存进yarn.lock\nyarn install --flat //安装一个包的单一版本\nyarn install --force //强制重新下载所有包\nyarn install --production //只安装dependencies里的包\nyarn install --no-lockfile //不读取或生成yarn.lock\nyarn install --pure-lockfile //不生成yarn.lock\n\n\n添加包（会更新package.json和yarn.lock）：\nyarn add [package] // 在当前的项目中添加一个依赖包，会自动更新到package.json和yarn.lock文件中\nyarn add [package]@[version] // 安装指定版本，这里指的是主要版本，如果需要精确到小版本，使用-E参数\nyarn add [package]@[tag] // 安装某个tag（比如beta,next或者latest）\n//不指定依赖类型默认安装到dependencies里，你也可以指定依赖类型：\n\nyarn add --dev/-D // 加到 devDependencies\nyarn add --peer/-P // 加到 peerDependencies\nyarn add --optional/-O // 加到 optionalDependencies\n//默认安装包的主要版本里的最新版本，下面两个命令可以指定版本：\n\nyarn add --exact/-E // 安装包的精确版本。例如yarn add foo@1.2.3会接受1.9.1版，但是yarn add foo@1.2.3 --exact只会接受1.2.3版\nyarn add --tilde/-T // 安装包的次要版本里的最新版。例如yarn add foo@1.2.3 --tilde会接受1.2.9，但不接受1.3.0\n发布包\n\nyarn publish\n移除一个包 \nyarn remove <packageName>：移除一个包，会自动更新package.json和yarn.lock\n更新一个依赖 \nyarn upgrade 用于更新包到基于规范范围的最新版本\n运行脚本 \nyarn run 用来执行在 package.json 中 scripts 属性下定义的脚本\n显示某个包的信息 \nyarn info <packageName> 可以用来查看某个模块的最新版本信息\n缓存 \nyarn cache \nyarn cache list # 列出已缓存的每个包 \nyarn cache dir # 返回 全局缓存位置 \nyarn cache clean # 清除缓存\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n\n# npm与yarn命令比较\n\nNPM                           YARN                        说明\nnpm init                      yarn int                    初始化某个项目\nnpm install/link              yarn install/link           默认的安装依赖操作\nnpm install taco -save        yarn add taco               安装某个依赖，并且默认保存到package.\nnpm uninstall taco -save      yarn remove taco            移除某个依赖项目\nnpm install taco -save -dev   yarn add taco -dev          安装某个开发时依赖项目\nnpm update taco -save         yarn upgrage taco           更新某个依赖项目\nnpm install taco --global     yarn global add taco        安装某个全局依赖项目\nnpm publish/login/logout      yarn publish/login/logout   发布/登录/登出，一系列NPM Registry操作\nnpm run/test                  yarn run/test               运行某个命令\n\n\n# 快速删除node_modules\n\n手动删除真的很慢：\n\n安装： npm install rimraf -g 使用：rimraf node_modules\n\nrimraf是node的一个包，可以快速删除node_modules，再也不用等半天了\n\n\n# 参考文献\n\nyarn的安装和使用",normalizedContent:"# 引言\n\n> yarn是facebook发布的一款取代npm的包管理工具。\n\n\n# yarn的特点：\n\n1，速度超快。 yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。 2，超级安全。 在执行代码之前，yarn 会通过算法校验每个安装包的完整性。 3，超级可靠。 使用详细、简洁的锁文件格式和明确的安装算法，yarn 能够保证在不同系统上无差异的工作。\n\n\n# yarn的安装:\n\n下载node.js，使用npm安装\n\nnpm install -g yarn \n\n\n1\n\n\n如果npm安装后提示yarn命令不存在，去官网下载msi安装：\n\nhttps://classic.yarnpkg.com/en/docs/install#windows-stable\n\n查看版本：\n\nyarn --version\n\n\n1\n\n\nyarn 淘宝源安装：\n\nyarn config set registry https://registry.npm.taobao.org -g \nyarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g\n\n\n1\n2\n\n\n\n# 常用yarn命令\n\n安装yarn \nnpm install -g yarn\n安装成功后，查看版本号： \nyarn --version\n创建文件夹 yarn \nmd yarn\n进入yarn文件夹 \ncd yarn\n初始化项目 \nyarn init // 同npm init，执行输入信息后，会生成package.json文件\n\nyarn的配置项： \nyarn config list // 显示所有配置项\nyarn config get <key> //显示某配置项\nyarn config delete <key> //删除某配置项\nyarn config set <key> <value> [-g|--global] //设置配置项\n\n安装包： \nyarn install //安装package.json里所有包，并将包及它的所有依赖项保存进yarn.lock\nyarn install --flat //安装一个包的单一版本\nyarn install --force //强制重新下载所有包\nyarn install --production //只安装dependencies里的包\nyarn install --no-lockfile //不读取或生成yarn.lock\nyarn install --pure-lockfile //不生成yarn.lock\n\n\n添加包（会更新package.json和yarn.lock）：\nyarn add [package] // 在当前的项目中添加一个依赖包，会自动更新到package.json和yarn.lock文件中\nyarn add [package]@[version] // 安装指定版本，这里指的是主要版本，如果需要精确到小版本，使用-e参数\nyarn add [package]@[tag] // 安装某个tag（比如beta,next或者latest）\n//不指定依赖类型默认安装到dependencies里，你也可以指定依赖类型：\n\nyarn add --dev/-d // 加到 devdependencies\nyarn add --peer/-p // 加到 peerdependencies\nyarn add --optional/-o // 加到 optionaldependencies\n//默认安装包的主要版本里的最新版本，下面两个命令可以指定版本：\n\nyarn add --exact/-e // 安装包的精确版本。例如yarn add foo@1.2.3会接受1.9.1版，但是yarn add foo@1.2.3 --exact只会接受1.2.3版\nyarn add --tilde/-t // 安装包的次要版本里的最新版。例如yarn add foo@1.2.3 --tilde会接受1.2.9，但不接受1.3.0\n发布包\n\nyarn publish\n移除一个包 \nyarn remove <packagename>：移除一个包，会自动更新package.json和yarn.lock\n更新一个依赖 \nyarn upgrade 用于更新包到基于规范范围的最新版本\n运行脚本 \nyarn run 用来执行在 package.json 中 scripts 属性下定义的脚本\n显示某个包的信息 \nyarn info <packagename> 可以用来查看某个模块的最新版本信息\n缓存 \nyarn cache \nyarn cache list # 列出已缓存的每个包 \nyarn cache dir # 返回 全局缓存位置 \nyarn cache clean # 清除缓存\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n\n# npm与yarn命令比较\n\nnpm                           yarn                        说明\nnpm init                      yarn int                    初始化某个项目\nnpm install/link              yarn install/link           默认的安装依赖操作\nnpm install taco -save        yarn add taco               安装某个依赖，并且默认保存到package.\nnpm uninstall taco -save      yarn remove taco            移除某个依赖项目\nnpm install taco -save -dev   yarn add taco -dev          安装某个开发时依赖项目\nnpm update taco -save         yarn upgrage taco           更新某个依赖项目\nnpm install taco --global     yarn global add taco        安装某个全局依赖项目\nnpm publish/login/logout      yarn publish/login/logout   发布/登录/登出，一系列npm registry操作\nnpm run/test                  yarn run/test               运行某个命令\n\n\n# 快速删除node_modules\n\n手动删除真的很慢：\n\n安装： npm install rimraf -g 使用：rimraf node_modules\n\nrimraf是node的一个包，可以快速删除node_modules，再也不用等半天了\n\n\n# 参考文献\n\nyarn的安装和使用",charsets:{cjk:!0}},{title:"Flutter Platform channel 数据类型与Java对应关系",frontmatter:{title:"Flutter Platform channel 数据类型与Java对应关系",date:"2021-05-29T22:46:00.000Z",sidebar:"auto",categories:["前端"],tags:["Flutter","Dart"],publish:!0,permalink:"/pages/0e0bfe/",readingShow:"top"},regularPath:"/20.%E5%89%8D%E7%AB%AF/30.flutter/Flutter%20Platform%20Channel%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB.html",relativePath:"20.前端/30.flutter/Flutter Platform Channel数据类型对应关系.md",key:"v-3bc8f191",path:"/pages/0e0bfe/",headers:[{level:3,title:"Flutter Platform channel简介",slug:"flutter-platform-channel简介",normalizedTitle:"flutter platform channel简介",charIndex:2},{level:3,title:"类型对照表",slug:"类型对照表",normalizedTitle:"类型对照表",charIndex:79},{level:3,title:"拓展",slug:"拓展",normalizedTitle:"拓展",charIndex:1943},{level:3,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:1984}],lastUpdated:"12/6/2022, 10:02:15 PM",lastUpdatedTimestamp:1670335335e3,headersStr:"Flutter Platform channel简介 类型对照表 拓展 参考资料",content:"# Flutter Platform channel简介\n\nFlutter中通过Platform Channel实现Flutter和原生端的数据传递\n\n\n# 类型对照表\n\nThe following table shows how Dart values are received on the platform side and vice versa:\n\nDART                         JAVA                  KOTLIN        OBJ-C                                            SWIFT\nnull                         null                  null          nil (NSNull when nested)                         nil\nbool                         java.lang.Boolean     Boolean       NSNumber numberWithBool:                         NSNumber(value: Bool)\nint                          java.lang.Integer     Int           NSNumber numberWithInt:                          NSNumber(value: Int32)\nint, if 32 bits not enough   java.lang.Long        Long          NSNumber numberWithLong:                         NSNumber(value: Int)\ndouble                       java.lang.Double      Double        NSNumber numberWithDouble:                       NSNumber(value: Double)\nString                       java.lang.String      String        NSString                                         String\nUint8List                    byte[]                ByteArray     FlutterStandardTypedData typedDataWithBytes:     FlutterStandardTypedData(bytes: Data)\nInt32List                    int[]                 IntArray      FlutterStandardTypedData typedDataWithInt32:     FlutterStandardTypedData(int32: Data)\nInt64List                    long[]                LongArray     FlutterStandardTypedData typedDataWithInt64:     FlutterStandardTypedData(int64: Data)\nFloat64List                  double[]              DoubleArray   FlutterStandardTypedData typedDataWithFloat64:   FlutterStandardTypedData(float64: Data)\nList                         java.util.ArrayList   List          NSArray                                          Array\nMap                          java.util.HashMap     HashMap       NSDictionary                                     Dictionary\n\n\n# 拓展\n\nFIDL：Flutter与原生通讯的新姿势，不局限于基础数据类型\n\n\n# 参考资料\n\nFlutter官方文档： Writing custom platform-specific code",normalizedContent:"# flutter platform channel简介\n\nflutter中通过platform channel实现flutter和原生端的数据传递\n\n\n# 类型对照表\n\nthe following table shows how dart values are received on the platform side and vice versa:\n\ndart                         java                  kotlin        obj-c                                            swift\nnull                         null                  null          nil (nsnull when nested)                         nil\nbool                         java.lang.boolean     boolean       nsnumber numberwithbool:                         nsnumber(value: bool)\nint                          java.lang.integer     int           nsnumber numberwithint:                          nsnumber(value: int32)\nint, if 32 bits not enough   java.lang.long        long          nsnumber numberwithlong:                         nsnumber(value: int)\ndouble                       java.lang.double      double        nsnumber numberwithdouble:                       nsnumber(value: double)\nstring                       java.lang.string      string        nsstring                                         string\nuint8list                    byte[]                bytearray     flutterstandardtypeddata typeddatawithbytes:     flutterstandardtypeddata(bytes: data)\nint32list                    int[]                 intarray      flutterstandardtypeddata typeddatawithint32:     flutterstandardtypeddata(int32: data)\nint64list                    long[]                longarray     flutterstandardtypeddata typeddatawithint64:     flutterstandardtypeddata(int64: data)\nfloat64list                  double[]              doublearray   flutterstandardtypeddata typeddatawithfloat64:   flutterstandardtypeddata(float64: data)\nlist                         java.util.arraylist   list          nsarray                                          array\nmap                          java.util.hashmap     hashmap       nsdictionary                                     dictionary\n\n\n# 拓展\n\nfidl：flutter与原生通讯的新姿势，不局限于基础数据类型\n\n\n# 参考资料\n\nflutter官方文档： writing custom platform-specific code",charsets:{cjk:!0}},{title:"事务专题一之事务理论",frontmatter:{title:"事务专题一之事务理论",date:"2020-12-07T00:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["事务","分布式事务"],publish:!0,permalink:"/pages/12a234/",readingShow:"top"},regularPath:"/30.%E6%95%B0%E6%8D%AE/10.%E4%BA%8B%E5%8A%A1/%E4%BA%8B%E5%8A%A1%E4%B8%93%E9%A2%98%E4%B8%80%E4%B9%8B%E4%BA%8B%E5%8A%A1%E7%90%86%E8%AE%BA.html",relativePath:"30.数据/10.事务/事务专题一之事务理论.md",key:"v-a460c28e",path:"/pages/12a234/",headers:[{level:3,title:"为什么需要事务？",slug:"为什么需要事务",normalizedTitle:"为什么需要事务？",charIndex:2},{level:3,title:"相关术语",slug:"相关术语",normalizedTitle:"相关术语",charIndex:355},{level:3,title:"事务的概念",slug:"事务的概念",normalizedTitle:"事务的概念",charIndex:468},{level:3,title:"事务的ACID特性",slug:"事务的acid特性",normalizedTitle:"事务的acid特性",charIndex:618},{level:3,title:"事务的分类",slug:"事务的分类",normalizedTitle:"事务的分类",charIndex:1293},{level:3,title:"本地事务/数据库事务",slug:"本地事务-数据库事务",normalizedTitle:"本地事务/数据库事务",charIndex:1318},{level:4,title:"InnoDB 实现原理",slug:"innodb-实现原理",normalizedTitle:"innodb 实现原理",charIndex:1356},{level:3,title:"分布式事务",slug:"分布式事务",normalizedTitle:"分布式事务",charIndex:438},{level:4,title:"分布式事务的概念",slug:"分布式事务的概念",normalizedTitle:"分布式事务的概念",charIndex:1959},{level:4,title:"分布式事务产生的背景",slug:"分布式事务产生的背景",normalizedTitle:"分布式事务产生的背景",charIndex:2137},{level:4,title:"分布式理论",slug:"分布式理论",normalizedTitle:"分布式理论",charIndex:2523},{level:3,title:"分布式事务解决方案",slug:"分布式事务解决方案",normalizedTitle:"分布式事务解决方案",charIndex:3921},{level:4,title:"2PC",slug:"_2pc",normalizedTitle:"2pc",charIndex:3934},{level:4,title:"TCC",slug:"tcc",normalizedTitle:"tcc",charIndex:419},{level:4,title:"本地消息表",slug:"本地消息表",normalizedTitle:"本地消息表",charIndex:5288},{level:3,title:"MQ事务",slug:"mq事务",normalizedTitle:"mq事务",charIndex:5930},{level:4,title:"Saga事务",slug:"saga事务",normalizedTitle:"saga事务",charIndex:6342},{level:3,title:"相关知识",slug:"相关知识",normalizedTitle:"相关知识",charIndex:7311},{level:4,title:"什么是幂等性？",slug:"什么是幂等性",normalizedTitle:"什么是幂等性？",charIndex:7319},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:7478}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"为什么需要事务？ 相关术语 事务的概念 事务的ACID特性 事务的分类 本地事务/数据库事务 InnoDB 实现原理 分布式事务 分布式事务的概念 分布式事务产生的背景 分布式理论 分布式事务解决方案 2PC TCC 本地消息表 MQ事务 Saga事务 相关知识 什么是幂等性？ 参考文献",content:"# 为什么需要事务？\n\n> 引言：在实际开发中，我们经常遇到类似下面的情况： 场景一：A账户给B账户转账1000元，实际上这个操作包含两个主要步骤，首先是A账户扣除1000元，然后在B账户增加1000元。假如因为某些故障，A账户已经扣除了1000元，但是B账户却没有增加1000元，这就产生了数据不一致的情况。实际上，我们希望整个转账过程要么减少和增加都成功，要么减少和增加都失败。 场景二：用户在电商平台下单，一般会涉及到以下流程：首先减少商品的库存，然后生成订单。加入库存扣除成功了，但是生成订单失败，那么库存数据与实际库存就产生了不一致的情况。我们希望整个流程都成功时，库存才减少，而某个流程失败是，库存能够回退。\n\n为了解决上面类似的场景的情况，我们在计算机软件开发中引入了“事务”这一概念。\n\n\n# 相关术语\n\n推开事务的大门，扑面而来的是一大堆晦涩难懂的专业术语与名词，大家不妨先看看：\n\nACID JTA CAP BASE TCC Saga AT\n\n数据库事务 分布式事务 本地事务 全局事务 刚性事务 柔性事务\n\n\n# 事务的概念\n\n事务提供一种机制将一个活动涉及的所有操作纳入到一个不可分割的执行单元，组成事务的所有操作只有在所有操作均能正常执行的情况下方能提交，只要其中任一操作执行失败，都将导致整个事务的回滚。\n\n简单地说，事务提供一种“要么什么都不做，要么做全套（All or Nothing）”机制。\n\n\n# 事务的ACID特性\n\nA：原子性(Atomicity) 一个事务(transaction)中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。\n\n事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。\n\n就像你买东西要么交钱收货一起都执行，要么发不出货，就退钱。\n\nC：一致性(Consistency) 事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。\n\n如果事务成功地完成，那么系统中所有变化将正确地应用，系统处于有效状态。\n\n如果在事务中出现错误，那么系统中的所有变化将自动地回滚，系统返回到原始状态。\n\n操作前A：800，B：200 操作后A：600，B：400\n\n一致性表示事务完成后，符合逻辑运算\n\n不一致的意思：之前总共有1000，现在总共只有900了\n\n这里的一致性，是应用层感知的\n\nI：隔离性(Isolation) 指的是在并发环境中，当不同的事务同时操纵相同的数据时，每个事务都有各自的完整数据空间。\n\n由并发事务所做的修改必须与任何其他并发事务所做的修改隔离。事务查看数据更新时，数据所处的状态要么是另一事务修改它之前的状态，要么是另一事务修改它之后的状态，事务不会查看到中间状态的数据。\n\n打个比方，你买东西这个事情，是不影响其他人的。\n\nD：持久性(Durability) 指的是只要事务成功结束，它对数据库所做的更新就必须永久保存下来。\n\n即使发生系统崩溃，重新启动数据库系统后，数据库还能恢复到事务成功结束时的状态。\n\n\n# 事务的分类\n\n根据事务参与者的分布来分：\n\n * 本地事务/数据库事务\n * 分布式事务\n\n\n# 本地事务/数据库事务\n\n# InnoDB 实现原理\n\nInnoDB 是 MySQL 的一个存储引擎，大部分人对 MySQL 都比较熟悉，这里简单介绍一下数据库事务实现的一些基本原理。\n\n在本地事务中，服务和资源在事务的包裹下可以看做是一体的，如下图：\n\n我们的本地事务由资源管理器进行管理：\n\n而事务的 ACID 是通过 InnoDB 日志和锁来保证。事务的隔离性是通过数据库锁的机制实现的，持久性通过 Redo Log（重做日志）来实现，原子性和一致性通过 Undo Log 来实现。\n\nUndo Log 的原理很简单，为了满足事务的原子性，在操作任何数据之前，首先将数据备份到一个地方（这个存储数据备份的地方称为 Undo Log）。然后进行数据的修改。\n\n如果出现了错误或者用户执行了 Rollback 语句，系统可以利用 Undo Log 中的备份将数据恢复到事务开始之前的状态。\n\n和 Undo Log 相反，Redo Log 记录的是新数据的备份。在事务提交前，只要将 Redo Log 持久化即可，不需要将数据持久化。\n\n当系统崩溃时，虽然数据没有持久化，但是 Redo Log 已经持久化。系统可以根据 Redo Log 的内容，将所有数据恢复到***的状态。对具体实现过程有兴趣的同学可以去自行搜索扩展。\n\n\n# 分布式事务\n\n要学习分布式事务，首先需要了解“分布式”的基本概念，以及“本地事务”的基本概念。\n\n# 分布式事务的概念\n\n分布式事务指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。\n\n简单的说，就是一次大的操作由不同的小操作组成，这些小的操作分布在不同的服务器上，且属于不同的应用，分布式事务需要保证这些小操作要么全部成功，要么全部失败。\n\n本质上来说，分布式事务就是为了保证不同数据库的数据一致性。\n\n# 分布式事务产生的背景\n\n在数据操作过程中，我们可以分为两个部分：\n\n 1. Service 服务\n 2. Resource 资源\n\n# Service\n\n随着互联网快速发展，微服务，SOA 等服务架构模式正在被大规模的使用，这就让一个Service产生了多个节点\n\n举个简单的例子，一个公司之内，用户的资产可能分为好多个部分，比如余额，积分，优惠券等等。 在公司内部有可能积分功能由一个微服务团队维护，优惠券又是另外的团队维护。 这样的话就无法保证积分扣减了之后，优惠券能否扣减成功。\n\n# Resource\n\n同样的，互联网发展得太快了，我们的 MySQL 一般来说装的数据就得进行分库分表，这就产生了多个Resource节点\n\n对于一个支付宝的转账业务来说，你给朋友转钱，有可能你的数据库是在北京，而你的朋友的钱是存在上海，所以我们依然无法保证他们能同时成功。\n\n# 分布式理论\n\n从上面来看分布式事务是随着互联网高速发展应运而生的，这是一个必然。\n\n我们之前说过数据库的 ACID 四大特性，已经无法满足我们分布式事务，这个时候又有一些新的大佬提出一些新的理论。\n\n# CAP\n\nCAP 定理，又被叫作布鲁尔定理。对于设计分布式系统(不仅仅是分布式事务)的架构师来说，CAP 就是你的入门理论。\n\nC (一致性)：对某个指定的客户端来说，读操作能返回***的写操作。\n\n对于数据分布在不同节点上的数据来说，如果在某个节点更新了数据，那么在其他节点如果都能读取到这个***的数据，那么就称为强一致，如果有某个节点没有读取到，那就是分布式不一致。\n\nA (可用性)：非故障的节点在合理的时间内返回合理的响应(不是错误和超时的响应)。可用性的两个关键一个是合理的时间，一个是合理的响应。\n\n合理的时间指的是请求不能***被阻塞，应该在合理的时间给出返回。合理的响应指的是系统应该明确返回结果并且结果是正确的，这里的正确指的是比如应该返回 50，而不是返回 40。\n\nP (分区容错性)：当出现网络分区后，系统能够继续工作。打个比方，这里集群有多台机器，有台机器网络出现了问题，但是这个集群仍然可以正常工作。\n\n熟悉 CAP 的人都知道，三者不能共有，如果感兴趣可以搜索 CAP 的证明，在分布式系统中，网络无法 100% 可靠，分区其实是一个必然现象。\n\n如果我们选择了 CA 而放弃了 P，那么当发生分区现象时，为了保证一致性，这个时候必须拒绝请求，但是 A 又不允许，所以分布式系统理论上不可能选择 CA 架构，只能选择 CP 或者 AP 架构。\n\n对于 CP 来说，放弃可用性，追求一致性和分区容错性，我们的 ZooKeeper 其实就是追求的强一致。\n\n对于 AP 来说，放弃一致性(这里说的一致性是强一致性)，追求分区容错性和可用性，这是很多分布式系统设计时的选择，后面的 BASE 也是根据 AP 来扩展。\n\n顺便一提，CAP 理论中是忽略网络延迟，也就是当事务提交时，从节点 A 复制到节点 B 没有延迟，但是在现实中这个是明显不可能的，所以总会有一定的时间是不一致。\n\n同时 CAP 中选择两个，比如你选择了 CP，并不是叫你放弃 A。因为 P 出现的概率实在是太小了，大部分的时间你仍然需要保证 CA。\n\n就算分区出现了你也要为后来的 A 做准备，比如通过一些日志的手段，是其他机器回复至可用。\n\n# BASE\n\nBASE 是 Basically Available(基本可用)、Soft state(软状态)和 Eventually consistent (最终一致性)三个短语的缩写，是对 CAP 中 AP 的一个扩展。\n\n基本可用：分布式系统在出现故障时，允许损失部分可用功能，保证核心功能可用。\n\n软状态：允许系统中存在中间状态，这个状态不影响系统可用性，这里指的是 CAP 中的不一致。\n\n最终一致：最终一致是指经过一段时间后，所有节点数据都将会达到一致。\n\nBASE 解决了 CAP 中理论没有网络延迟，在 BASE 中用软状态和最终一致，保证了延迟后的一致性。\n\nBASE 和 ACID 是相反的，它完全不同于 ACID 的强一致性模型，而是通过牺牲强一致性来获得可用性，并允许数据在一段时间内是不一致的，但最终达到一致状态。\n\n\n# 分布式事务解决方案\n\n# 2PC\n\n说到2PC就不得不聊数据库分布式事务中的 XA Transactions。 在XA协议中分为两阶段:\n\n第一阶段：事务管理器要求每个涉及到事务的数据库预提交(precommit)此操作，并反映是否可以提交.\n\n第二阶段：事务协调器要求每个数据库提交数据，或者回滚数据。\n\n优点： 尽量保证了数据的强一致，实现成本较低，在各大主流数据库都有自己实现，对于MySQL是从5.5开始支持。\n\n缺点:\n\n单点问题:事务管理器在整个流程中扮演的角色很关键，如果其宕机，比如在第一阶段已经完成，在第二阶段正准备提交的时候事务管理器宕机，资源管理器就会一直阻塞，导致数据库无法使用。 同步阻塞:在准备就绪之后，资源管理器中的资源一直处于阻塞，直到提交完成，释放资源。 数据不一致:两阶段提交协议虽然为分布式数据强一致性所设计，但仍然存在数据不一致性的可能，比如在第二阶段中，假设协调者发出了事务commit的通知，但是因为网络问题该通知仅被一部分参与者所收到并执行了commit操作，其余的参与者则因为没有收到通知一直处于阻塞状态，这时候就产生了数据的不一致性。 总的来说，XA协议比较简单，成本较低，但是其单点问题，以及不能支持高并发(由于同步阻塞)依然是其最大的弱点。\n\n# TCC\n\n关于TCC（Try-Confirm-Cancel）的概念，最早是由Pat Helland于2007年发表的一篇名为《Life beyond Distributed Transactions:an Apostate’s Opinion》的论文提出。 TCC事务机制相比于上面介绍的XA，解决了其几个缺点:\n\n 1. 解决了协调者单点，由主业务方发起并完成这个业务活动。业务活动管理器也变成多点，引入集群。\n 2. 同步阻塞:引入超时，超时后进行补偿，并且不会锁定整个资源，将资源转换为业务逻辑形式，粒度变小。\n 3. 数据一致性，有了补偿机制之后，由业务活动管理器控制一致性。 对于TCC的解释:\n\nTry阶段： 尝试执行,完成所有业务检查（一致性）,预留必须业务资源（准隔离性）\n\nConfirm阶段： 确认执行真正执行业务，不作任何业务检查，只使用Try阶段预留的业务资源，Confirm操作满足幂等性。要求具备幂等设计，Confirm失败后需要进行重试。\n\nCancel阶段： 取消执行，释放Try阶段预留的业务资源 Cancel操作满足幂等性Cancel阶段的异常和Confirm阶段异常处理方案基本上一致。\n\n举个简单的例子如果你用100元买了一瓶水， Try阶段:你需要向你的钱包检查是否够100元并锁住这100元，水也是一样的。\n\n如果有一个失败，则进行cancel(释放这100元和这一瓶水)，如果cancel失败不论什么失败都进行重试cancel，所以需要保持幂等。\n\n如果都成功，则进行confirm,确认这100元扣，和这一瓶水被卖，如果confirm失败无论什么失败则重试(会依靠活动日志进行重试)\n\n对于TCC来说适合一些:\n\n强隔离性，严格一致性要求的活动业务。 执行时间较短的业务 实现参考:ByteTCC:https://github.com/liuyangming/ByteTCC/\n\n# 本地消息表\n\n本地消息表这个方案最初是ebay提出的 ebay的完整方案https://queue.acm.org/detail.cfm?id=1394128。\n\n此方案的核心是将需要分布式处理的任务通过消息日志的方式来异步执行。消息日志可以存储到本地文本、数据库或消息队列，再通过业务规则自动或人工发起重试。人工重试更多的是应用于支付场景，通过对账系统对事后问题的处理。\n\n对于本地消息队列来说核心是把大事务转变为小事务。还是举上面用100元去买一瓶水的例子。\n\n1.当你扣钱的时候，你需要在你扣钱的服务器上新增加一个本地消息表，你需要把你扣钱和写入减去水的库存到本地消息表放入同一个事务(依靠数据库本地事务保证一致性。\n\n2.这个时候有个定时任务去轮询这个本地事务表，把没有发送的消息，扔给商品库存服务器，叫他减去水的库存，到达商品服务器之后这个时候得先写入这个服务器的事务表，然后进行扣减，扣减成功后，更新事务表中的状态。\n\n3.商品服务器通过定时任务扫描消息表或者直接通知扣钱服务器，扣钱服务器本地消息表进行状态更新。\n\n4.针对一些异常情况，定时扫描未成功处理的消息，进行重新发送，在商品服务器接到消息之后，首先判断是否是重复的，如果已经接收，在判断是否执行，如果执行在马上又进行通知事务，如果未执行，需要重新执行需要由业务保证幂等，也就是不会多扣一瓶水。\n\n本地消息队列是BASE理论，是最终一致模型，适用于对一致性要求不高的。实现这个模型时需要注意重试的幂等。\n\n\n# MQ事务\n\n在RocketMQ中实现了分布式事务，实际上其实是对本地消息表的一个封装，将本地消息表移动到了MQ内部，下面简单介绍一下MQ事务，如果想对其详细了解可以参考: https://www.jianshu.com/p/453c6e7ff81c\n\n基本流程如下: 第一阶段Prepared消息，会拿到消息的地址。\n\n第二阶段执行本地事务。\n\n第三阶段通过第一阶段拿到的地址去访问消息，并修改状态。消息接受者就能使用这个消息。\n\n如果确认消息失败，在RocketMq Broker中提供了定时扫描没有更新状态的消息，如果有消息没有得到确认，会向消息发送者发送消息，来判断是否提交，在rocketmq中是以listener的形式给发送者，用来处理 如果消费超时，则需要一直重试，消息接收端需要保证幂等。如果消息消费失败，这个就需要人工进行处理，因为这个概率较低，如果为了这种小概率时间而设计这个复杂的流程反而得不偿失\n\n# Saga事务\n\nSaga是30年前一篇数据库伦理提到的一个概念。其核心思想是将长事务拆分为多个本地短事务，由Saga事务协调器协调，如果正常结束那就正常完成，如果某个步骤失败，则根据相反顺序一次调用补偿操作。 Saga的组成：\n\n每个Saga由一系列sub-transaction Ti 组成 每个Ti 都有对应的补偿动作Ci，补偿动作用于撤销Ti造成的结果,这里的每个T，都是一个本地事务。 可以看到，和TCC相比，Saga没有“预留 try”动作，它的Ti就是直接提交到库。\n\nSaga的执行顺序有两种：\n\nT1, T2, T3, ..., Tn\n\nT1, T2, ..., Tj, Cj,..., C2, C1，其中0 < j < n Saga定义了两种恢复策略：\n\n向后恢复，即上面提到的第二种执行顺序，其中j是发生错误的sub-transaction，这种做法的效果是撤销掉之前所有成功的sub-transation，使得整个Saga的执行结果撤销。 向前恢复，适用于必须要成功的场景，执行顺序是类似于这样的：T1, T2, ..., Tj(失败), Tj(重试),..., Tn，其中j是发生错误的sub-transaction。该情况下不需要Ci。\n\n这里要注意的是，在saga模式中不能保证隔离性，因为没有锁住资源，其他事务依然可以覆盖或者影响当前事务。\n\n还是拿100元买一瓶水的例子来说，这里定义\n\nT1=扣100元 T2=给用户加一瓶水 T3=减库存一瓶水\n\nC1=加100元 C2=给用户减一瓶水 C3=给库存加一瓶水\n\n我们一次进行T1,T2，T3如果发生问题，就执行发生问题的C操作的反向。 上面说到的隔离性的问题会出现在，如果执行到T3这个时候需要执行回滚，但是这个用户已经把水喝了(另外一个事务)，回滚的时候就会发现，无法给用户减一瓶水了。这就是事务之间没有隔离性的问题\n\n可以看见saga模式没有隔离性的影响还是较大，可以参照华为的解决方案:从业务层面入手加入一 Session 以及锁的机制来保证能够串行化操作资源。也可以在业务层面通过预先冻结资金的方式隔离这部分资源， 最后在业务操作的过程中可以通过及时读取当前状态的方式获取到最新的更新。\n\n具体实例:可以参考华为的servicecomb\n\n\n# 相关知识\n\n# 什么是幂等性？\n\n> 幂等性是指同一个操作无论请求多少次，其结果都相同。 幂等操作实现方式有：\n\n 1. 操作之前在业务方法进行判断如果执行过了就不再执行。\n 2. 缓存所有请求和处理的结果，已经处理的请求则直接返回结果。\n 3. 在数据库表中加一个状态字段（未处理，已处理），数据操作时判断未处理时再处理。\n\n\n# 参考文献\n\n再有人问你分布式事务，把这篇扔给他",normalizedContent:"# 为什么需要事务？\n\n> 引言：在实际开发中，我们经常遇到类似下面的情况： 场景一：a账户给b账户转账1000元，实际上这个操作包含两个主要步骤，首先是a账户扣除1000元，然后在b账户增加1000元。假如因为某些故障，a账户已经扣除了1000元，但是b账户却没有增加1000元，这就产生了数据不一致的情况。实际上，我们希望整个转账过程要么减少和增加都成功，要么减少和增加都失败。 场景二：用户在电商平台下单，一般会涉及到以下流程：首先减少商品的库存，然后生成订单。加入库存扣除成功了，但是生成订单失败，那么库存数据与实际库存就产生了不一致的情况。我们希望整个流程都成功时，库存才减少，而某个流程失败是，库存能够回退。\n\n为了解决上面类似的场景的情况，我们在计算机软件开发中引入了“事务”这一概念。\n\n\n# 相关术语\n\n推开事务的大门，扑面而来的是一大堆晦涩难懂的专业术语与名词，大家不妨先看看：\n\nacid jta cap base tcc saga at\n\n数据库事务 分布式事务 本地事务 全局事务 刚性事务 柔性事务\n\n\n# 事务的概念\n\n事务提供一种机制将一个活动涉及的所有操作纳入到一个不可分割的执行单元，组成事务的所有操作只有在所有操作均能正常执行的情况下方能提交，只要其中任一操作执行失败，都将导致整个事务的回滚。\n\n简单地说，事务提供一种“要么什么都不做，要么做全套（all or nothing）”机制。\n\n\n# 事务的acid特性\n\na：原子性(atomicity) 一个事务(transaction)中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。\n\n事务在执行过程中发生错误，会被回滚（rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。\n\n就像你买东西要么交钱收货一起都执行，要么发不出货，就退钱。\n\nc：一致性(consistency) 事务的一致性指的是在一个事务执行之前和执行之后数据库都必须处于一致性状态。\n\n如果事务成功地完成，那么系统中所有变化将正确地应用，系统处于有效状态。\n\n如果在事务中出现错误，那么系统中的所有变化将自动地回滚，系统返回到原始状态。\n\n操作前a：800，b：200 操作后a：600，b：400\n\n一致性表示事务完成后，符合逻辑运算\n\n不一致的意思：之前总共有1000，现在总共只有900了\n\n这里的一致性，是应用层感知的\n\ni：隔离性(isolation) 指的是在并发环境中，当不同的事务同时操纵相同的数据时，每个事务都有各自的完整数据空间。\n\n由并发事务所做的修改必须与任何其他并发事务所做的修改隔离。事务查看数据更新时，数据所处的状态要么是另一事务修改它之前的状态，要么是另一事务修改它之后的状态，事务不会查看到中间状态的数据。\n\n打个比方，你买东西这个事情，是不影响其他人的。\n\nd：持久性(durability) 指的是只要事务成功结束，它对数据库所做的更新就必须永久保存下来。\n\n即使发生系统崩溃，重新启动数据库系统后，数据库还能恢复到事务成功结束时的状态。\n\n\n# 事务的分类\n\n根据事务参与者的分布来分：\n\n * 本地事务/数据库事务\n * 分布式事务\n\n\n# 本地事务/数据库事务\n\n# innodb 实现原理\n\ninnodb 是 mysql 的一个存储引擎，大部分人对 mysql 都比较熟悉，这里简单介绍一下数据库事务实现的一些基本原理。\n\n在本地事务中，服务和资源在事务的包裹下可以看做是一体的，如下图：\n\n我们的本地事务由资源管理器进行管理：\n\n而事务的 acid 是通过 innodb 日志和锁来保证。事务的隔离性是通过数据库锁的机制实现的，持久性通过 redo log（重做日志）来实现，原子性和一致性通过 undo log 来实现。\n\nundo log 的原理很简单，为了满足事务的原子性，在操作任何数据之前，首先将数据备份到一个地方（这个存储数据备份的地方称为 undo log）。然后进行数据的修改。\n\n如果出现了错误或者用户执行了 rollback 语句，系统可以利用 undo log 中的备份将数据恢复到事务开始之前的状态。\n\n和 undo log 相反，redo log 记录的是新数据的备份。在事务提交前，只要将 redo log 持久化即可，不需要将数据持久化。\n\n当系统崩溃时，虽然数据没有持久化，但是 redo log 已经持久化。系统可以根据 redo log 的内容，将所有数据恢复到***的状态。对具体实现过程有兴趣的同学可以去自行搜索扩展。\n\n\n# 分布式事务\n\n要学习分布式事务，首先需要了解“分布式”的基本概念，以及“本地事务”的基本概念。\n\n# 分布式事务的概念\n\n分布式事务指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。\n\n简单的说，就是一次大的操作由不同的小操作组成，这些小的操作分布在不同的服务器上，且属于不同的应用，分布式事务需要保证这些小操作要么全部成功，要么全部失败。\n\n本质上来说，分布式事务就是为了保证不同数据库的数据一致性。\n\n# 分布式事务产生的背景\n\n在数据操作过程中，我们可以分为两个部分：\n\n 1. service 服务\n 2. resource 资源\n\n# service\n\n随着互联网快速发展，微服务，soa 等服务架构模式正在被大规模的使用，这就让一个service产生了多个节点\n\n举个简单的例子，一个公司之内，用户的资产可能分为好多个部分，比如余额，积分，优惠券等等。 在公司内部有可能积分功能由一个微服务团队维护，优惠券又是另外的团队维护。 这样的话就无法保证积分扣减了之后，优惠券能否扣减成功。\n\n# resource\n\n同样的，互联网发展得太快了，我们的 mysql 一般来说装的数据就得进行分库分表，这就产生了多个resource节点\n\n对于一个支付宝的转账业务来说，你给朋友转钱，有可能你的数据库是在北京，而你的朋友的钱是存在上海，所以我们依然无法保证他们能同时成功。\n\n# 分布式理论\n\n从上面来看分布式事务是随着互联网高速发展应运而生的，这是一个必然。\n\n我们之前说过数据库的 acid 四大特性，已经无法满足我们分布式事务，这个时候又有一些新的大佬提出一些新的理论。\n\n# cap\n\ncap 定理，又被叫作布鲁尔定理。对于设计分布式系统(不仅仅是分布式事务)的架构师来说，cap 就是你的入门理论。\n\nc (一致性)：对某个指定的客户端来说，读操作能返回***的写操作。\n\n对于数据分布在不同节点上的数据来说，如果在某个节点更新了数据，那么在其他节点如果都能读取到这个***的数据，那么就称为强一致，如果有某个节点没有读取到，那就是分布式不一致。\n\na (可用性)：非故障的节点在合理的时间内返回合理的响应(不是错误和超时的响应)。可用性的两个关键一个是合理的时间，一个是合理的响应。\n\n合理的时间指的是请求不能***被阻塞，应该在合理的时间给出返回。合理的响应指的是系统应该明确返回结果并且结果是正确的，这里的正确指的是比如应该返回 50，而不是返回 40。\n\np (分区容错性)：当出现网络分区后，系统能够继续工作。打个比方，这里集群有多台机器，有台机器网络出现了问题，但是这个集群仍然可以正常工作。\n\n熟悉 cap 的人都知道，三者不能共有，如果感兴趣可以搜索 cap 的证明，在分布式系统中，网络无法 100% 可靠，分区其实是一个必然现象。\n\n如果我们选择了 ca 而放弃了 p，那么当发生分区现象时，为了保证一致性，这个时候必须拒绝请求，但是 a 又不允许，所以分布式系统理论上不可能选择 ca 架构，只能选择 cp 或者 ap 架构。\n\n对于 cp 来说，放弃可用性，追求一致性和分区容错性，我们的 zookeeper 其实就是追求的强一致。\n\n对于 ap 来说，放弃一致性(这里说的一致性是强一致性)，追求分区容错性和可用性，这是很多分布式系统设计时的选择，后面的 base 也是根据 ap 来扩展。\n\n顺便一提，cap 理论中是忽略网络延迟，也就是当事务提交时，从节点 a 复制到节点 b 没有延迟，但是在现实中这个是明显不可能的，所以总会有一定的时间是不一致。\n\n同时 cap 中选择两个，比如你选择了 cp，并不是叫你放弃 a。因为 p 出现的概率实在是太小了，大部分的时间你仍然需要保证 ca。\n\n就算分区出现了你也要为后来的 a 做准备，比如通过一些日志的手段，是其他机器回复至可用。\n\n# base\n\nbase 是 basically available(基本可用)、soft state(软状态)和 eventually consistent (最终一致性)三个短语的缩写，是对 cap 中 ap 的一个扩展。\n\n基本可用：分布式系统在出现故障时，允许损失部分可用功能，保证核心功能可用。\n\n软状态：允许系统中存在中间状态，这个状态不影响系统可用性，这里指的是 cap 中的不一致。\n\n最终一致：最终一致是指经过一段时间后，所有节点数据都将会达到一致。\n\nbase 解决了 cap 中理论没有网络延迟，在 base 中用软状态和最终一致，保证了延迟后的一致性。\n\nbase 和 acid 是相反的，它完全不同于 acid 的强一致性模型，而是通过牺牲强一致性来获得可用性，并允许数据在一段时间内是不一致的，但最终达到一致状态。\n\n\n# 分布式事务解决方案\n\n# 2pc\n\n说到2pc就不得不聊数据库分布式事务中的 xa transactions。 在xa协议中分为两阶段:\n\n第一阶段：事务管理器要求每个涉及到事务的数据库预提交(precommit)此操作，并反映是否可以提交.\n\n第二阶段：事务协调器要求每个数据库提交数据，或者回滚数据。\n\n优点： 尽量保证了数据的强一致，实现成本较低，在各大主流数据库都有自己实现，对于mysql是从5.5开始支持。\n\n缺点:\n\n单点问题:事务管理器在整个流程中扮演的角色很关键，如果其宕机，比如在第一阶段已经完成，在第二阶段正准备提交的时候事务管理器宕机，资源管理器就会一直阻塞，导致数据库无法使用。 同步阻塞:在准备就绪之后，资源管理器中的资源一直处于阻塞，直到提交完成，释放资源。 数据不一致:两阶段提交协议虽然为分布式数据强一致性所设计，但仍然存在数据不一致性的可能，比如在第二阶段中，假设协调者发出了事务commit的通知，但是因为网络问题该通知仅被一部分参与者所收到并执行了commit操作，其余的参与者则因为没有收到通知一直处于阻塞状态，这时候就产生了数据的不一致性。 总的来说，xa协议比较简单，成本较低，但是其单点问题，以及不能支持高并发(由于同步阻塞)依然是其最大的弱点。\n\n# tcc\n\n关于tcc（try-confirm-cancel）的概念，最早是由pat helland于2007年发表的一篇名为《life beyond distributed transactions:an apostate’s opinion》的论文提出。 tcc事务机制相比于上面介绍的xa，解决了其几个缺点:\n\n 1. 解决了协调者单点，由主业务方发起并完成这个业务活动。业务活动管理器也变成多点，引入集群。\n 2. 同步阻塞:引入超时，超时后进行补偿，并且不会锁定整个资源，将资源转换为业务逻辑形式，粒度变小。\n 3. 数据一致性，有了补偿机制之后，由业务活动管理器控制一致性。 对于tcc的解释:\n\ntry阶段： 尝试执行,完成所有业务检查（一致性）,预留必须业务资源（准隔离性）\n\nconfirm阶段： 确认执行真正执行业务，不作任何业务检查，只使用try阶段预留的业务资源，confirm操作满足幂等性。要求具备幂等设计，confirm失败后需要进行重试。\n\ncancel阶段： 取消执行，释放try阶段预留的业务资源 cancel操作满足幂等性cancel阶段的异常和confirm阶段异常处理方案基本上一致。\n\n举个简单的例子如果你用100元买了一瓶水， try阶段:你需要向你的钱包检查是否够100元并锁住这100元，水也是一样的。\n\n如果有一个失败，则进行cancel(释放这100元和这一瓶水)，如果cancel失败不论什么失败都进行重试cancel，所以需要保持幂等。\n\n如果都成功，则进行confirm,确认这100元扣，和这一瓶水被卖，如果confirm失败无论什么失败则重试(会依靠活动日志进行重试)\n\n对于tcc来说适合一些:\n\n强隔离性，严格一致性要求的活动业务。 执行时间较短的业务 实现参考:bytetcc:https://github.com/liuyangming/bytetcc/\n\n# 本地消息表\n\n本地消息表这个方案最初是ebay提出的 ebay的完整方案https://queue.acm.org/detail.cfm?id=1394128。\n\n此方案的核心是将需要分布式处理的任务通过消息日志的方式来异步执行。消息日志可以存储到本地文本、数据库或消息队列，再通过业务规则自动或人工发起重试。人工重试更多的是应用于支付场景，通过对账系统对事后问题的处理。\n\n对于本地消息队列来说核心是把大事务转变为小事务。还是举上面用100元去买一瓶水的例子。\n\n1.当你扣钱的时候，你需要在你扣钱的服务器上新增加一个本地消息表，你需要把你扣钱和写入减去水的库存到本地消息表放入同一个事务(依靠数据库本地事务保证一致性。\n\n2.这个时候有个定时任务去轮询这个本地事务表，把没有发送的消息，扔给商品库存服务器，叫他减去水的库存，到达商品服务器之后这个时候得先写入这个服务器的事务表，然后进行扣减，扣减成功后，更新事务表中的状态。\n\n3.商品服务器通过定时任务扫描消息表或者直接通知扣钱服务器，扣钱服务器本地消息表进行状态更新。\n\n4.针对一些异常情况，定时扫描未成功处理的消息，进行重新发送，在商品服务器接到消息之后，首先判断是否是重复的，如果已经接收，在判断是否执行，如果执行在马上又进行通知事务，如果未执行，需要重新执行需要由业务保证幂等，也就是不会多扣一瓶水。\n\n本地消息队列是base理论，是最终一致模型，适用于对一致性要求不高的。实现这个模型时需要注意重试的幂等。\n\n\n# mq事务\n\n在rocketmq中实现了分布式事务，实际上其实是对本地消息表的一个封装，将本地消息表移动到了mq内部，下面简单介绍一下mq事务，如果想对其详细了解可以参考: https://www.jianshu.com/p/453c6e7ff81c\n\n基本流程如下: 第一阶段prepared消息，会拿到消息的地址。\n\n第二阶段执行本地事务。\n\n第三阶段通过第一阶段拿到的地址去访问消息，并修改状态。消息接受者就能使用这个消息。\n\n如果确认消息失败，在rocketmq broker中提供了定时扫描没有更新状态的消息，如果有消息没有得到确认，会向消息发送者发送消息，来判断是否提交，在rocketmq中是以listener的形式给发送者，用来处理 如果消费超时，则需要一直重试，消息接收端需要保证幂等。如果消息消费失败，这个就需要人工进行处理，因为这个概率较低，如果为了这种小概率时间而设计这个复杂的流程反而得不偿失\n\n# saga事务\n\nsaga是30年前一篇数据库伦理提到的一个概念。其核心思想是将长事务拆分为多个本地短事务，由saga事务协调器协调，如果正常结束那就正常完成，如果某个步骤失败，则根据相反顺序一次调用补偿操作。 saga的组成：\n\n每个saga由一系列sub-transaction ti 组成 每个ti 都有对应的补偿动作ci，补偿动作用于撤销ti造成的结果,这里的每个t，都是一个本地事务。 可以看到，和tcc相比，saga没有“预留 try”动作，它的ti就是直接提交到库。\n\nsaga的执行顺序有两种：\n\nt1, t2, t3, ..., tn\n\nt1, t2, ..., tj, cj,..., c2, c1，其中0 < j < n saga定义了两种恢复策略：\n\n向后恢复，即上面提到的第二种执行顺序，其中j是发生错误的sub-transaction，这种做法的效果是撤销掉之前所有成功的sub-transation，使得整个saga的执行结果撤销。 向前恢复，适用于必须要成功的场景，执行顺序是类似于这样的：t1, t2, ..., tj(失败), tj(重试),..., tn，其中j是发生错误的sub-transaction。该情况下不需要ci。\n\n这里要注意的是，在saga模式中不能保证隔离性，因为没有锁住资源，其他事务依然可以覆盖或者影响当前事务。\n\n还是拿100元买一瓶水的例子来说，这里定义\n\nt1=扣100元 t2=给用户加一瓶水 t3=减库存一瓶水\n\nc1=加100元 c2=给用户减一瓶水 c3=给库存加一瓶水\n\n我们一次进行t1,t2，t3如果发生问题，就执行发生问题的c操作的反向。 上面说到的隔离性的问题会出现在，如果执行到t3这个时候需要执行回滚，但是这个用户已经把水喝了(另外一个事务)，回滚的时候就会发现，无法给用户减一瓶水了。这就是事务之间没有隔离性的问题\n\n可以看见saga模式没有隔离性的影响还是较大，可以参照华为的解决方案:从业务层面入手加入一 session 以及锁的机制来保证能够串行化操作资源。也可以在业务层面通过预先冻结资金的方式隔离这部分资源， 最后在业务操作的过程中可以通过及时读取当前状态的方式获取到最新的更新。\n\n具体实例:可以参考华为的servicecomb\n\n\n# 相关知识\n\n# 什么是幂等性？\n\n> 幂等性是指同一个操作无论请求多少次，其结果都相同。 幂等操作实现方式有：\n\n 1. 操作之前在业务方法进行判断如果执行过了就不再执行。\n 2. 缓存所有请求和处理的结果，已经处理的请求则直接返回结果。\n 3. 在数据库表中加一个状态字段（未处理，已处理），数据操作时判断未处理时再处理。\n\n\n# 参考文献\n\n再有人问你分布式事务，把这篇扔给他",charsets:{cjk:!0}},{title:"事务专题一SpringBoot事务",frontmatter:{title:"事务专题一SpringBoot事务",date:"2021-02-06T20:50:00.000Z",sidebar:"auto",categories:["后端"],tags:["事务","分布式事务"],publish:!0,permalink:"/pages/8d33c7/",readingShow:"top"},regularPath:"/30.%E6%95%B0%E6%8D%AE/10.%E4%BA%8B%E5%8A%A1/%E4%BA%8B%E5%8A%A1%E4%B8%93%E9%A2%98%E4%B9%8BSpringBoot%E4%BA%8B%E5%8A%A1.html",relativePath:"30.数据/10.事务/事务专题之SpringBoot事务.md",key:"v-ed7c4fe0",path:"/pages/8d33c7/",headers:[{level:3,title:"一、事务传播机制：",slug:"一、事务传播机制",normalizedTitle:"一、事务传播机制：",charIndex:2},{level:4,title:"2.1.1 REQUIRED",slug:"_2-1-1-required",normalizedTitle:"2.1.1 required",charIndex:823},{level:4,title:"2.1.2 REQUIRES_NEW",slug:"_2-1-2-requires-new",normalizedTitle:"2.1.2 requires_new",charIndex:2366},{level:4,title:"2.1.3 NESTED：",slug:"_2-1-3-nested",normalizedTitle:"2.1.3 nested：",charIndex:4722},{level:4,title:"2.1.4.SUPPORTS：",slug:"_2-1-4-supports",normalizedTitle:"2.1.4.supports：",charIndex:7534},{level:4,title:"2.1.5.MANDATORY",slug:"_2-1-5-mandatory",normalizedTitle:"2.1.5.mandatory",charIndex:9339},{level:4,title:"2.1.6.NOT_SUPPORTED",slug:"_2-1-6-not-supported",normalizedTitle:"2.1.6.not_supported",charIndex:11e3},{level:4,title:"2.1.7.NEVER",slug:"_2-1-7-never",normalizedTitle:"2.1.7.never",charIndex:12101},{level:3,title:"二、事务的隔离机制",slug:"二、事务的隔离机制",normalizedTitle:"二、事务的隔离机制",charIndex:13281},{level:4,title:"2.1事务隔离级别",slug:"_2-1事务隔离级别",normalizedTitle:"2.1事务隔离级别",charIndex:13294},{level:4,title:"2.2脏读、不可重复读、幻读解释：",slug:"_2-2脏读、不可重复读、幻读解释",normalizedTitle:"2.2脏读、不可重复读、幻读解释：",charIndex:13713},{level:3,title:"参考",slug:"参考",normalizedTitle:"参考",charIndex:14260}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"一、事务传播机制： 2.1.1 REQUIRED 2.1.2 REQUIRES_NEW 2.1.3 NESTED： 2.1.4.SUPPORTS： 2.1.5.MANDATORY 2.1.6.NOT_SUPPORTED 2.1.7.NEVER 二、事务的隔离机制 2.1事务隔离级别 2.2脏读、不可重复读、幻读解释： 参考",content:'# 一、事务传播机制：\n\n事务的传播行为是针对嵌套事务而言。 示例：\n\n@Transactional(propagation = Propagation.REQUIRED)\n\n在TransactionDefinition定义中包括了如下几个表示传播行为的常量：\n\n常量                                                含义\nTransactionDefinition.PROPAGATION_REQUIRED        如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。这是默认值。\nTransactionDefinition.PROPAGATION_REQUIRES_NEW    创建一个新的事务，如果当前存在事务，则把当前事务挂起。\nTransactionDefinition.PROPAGATION_SUPPORTS        如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。\nTransactionDefinition.PROPAGATION_NOT_SUPPORTED   以非事务方式运行，如果当前存在事务，则把当前事务挂起。\nTransactionDefinition.PROPAGATION_NEVER           以非事务方式运行，如果当前存在事务，则抛出异常。\nTransactionDefinition.PROPAGATION_MANDATORY       如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。\nTransactionDefinition.PROPAGATION_NESTED          如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于TransactionDefinition.PROPAGATION_REQUIRED。\n\n# 2.1.1 REQUIRED\n\nspring默认的事务传播行为就是它。\n\n支持事务。如果业务方法执行时已经在一个事务中，则加入当前事务，否则重新开启一个事务。\n\n外层事务提交了，内层才会提交。\n\n内/外只要有报错，他俩会一起回滚。\n\n只要内层方法报错抛出异常，即使外层有try-catch，该事务也会回滚！\n\n因为内外层方法在同一个事务中，内层只要抛出了异常，这个事务就会被设置成rollback-only，即使外层try-catch内层的异常，该事务也会回滚。\n\n例子：\n\n外层方法在调用内层方法的时候包裹住try-catch，内层方法报错抛出异常。\n\n外层方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        try {\n            studentService.addStudent(student);\n        }catch (Exception e){\n            //不抛出\n        }\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n内层方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional//(propagation = Propagation.NESTED)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        int j =  10/ 0;  // 内层报错抛出异常\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n事务回滚，user表和student表都没有插入数据。\n\n因为内外层方法在同一个事务中，内层只要抛出了异常，这个事务就会被设置成rollback-only，即使外层try-catch内层的异常，该事务也会回滚。\n\n报错\n\norg.springframework.transaction.UnexpectedRollbackException: Transaction rolled back because it has been marked as rollback-only\n\n# 2.1.2 REQUIRES_NEW\n\n支持事务。每次都是创建一个新事物，如果当前已经在事务中了，会挂起当前事务。\n\n内层事务结束，内层就提交了，不用等着外层一起提交。\n\n外层报错回滚，不影响内层。\n\n内层报错回滚，外层try-catch内层的异常，外层不会回滚。\n\n内层报错回滚，然后又会抛出异常，外层如果没有捕获处理内层抛出来的这个异常，外层还是会回滚的。这是重点！！！网上有些文章的例子给错了！！！\n\n例子：\n\n1.调用addStudent的外层方法有事务，外层报错回滚，内层无错\n\n外层方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        studentService.addStudent(student);\n        int j =  10/ 0; // 外层报错\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.REQUIRES_NEW)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        \n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n内层的addStudent方法执行结束后，这个内层的事务就提交了，student表中就已经插入了数据了。\n\n外层addUser方法报错，只是回滚了外层的这个事务，user表中没有插入数据。\n\n2.调用addStudent的外层方法有事务，外层无错，内层报错回滚\n\n外层方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        studentService.addStudent(student);\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n内层方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.REQUIRES_NEW)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        int j =  10/ 0;\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n内层的addStudent方法执行报错 ，内层事务回滚，然后再向外抛出这个异常。student表中没有插入数据。\n\n外层addUser，如果没有捕获处理内层抛出来的异常，外层一会回滚。user表中没有插入数据。\n\n# 2.1.3 NESTED：\n\n该传播行为解释：支持事务。如果当前已经在一个事务中了，则嵌套在已有的事务中作为一个子事务。如果当前没在事务中则开启一个事务。\n\n内层事务结束，要等着外层一起提交。\n\n外层回滚，内层也回滚。\n\n如果只是内层回滚，不影响外层。\n\n这个内层回滚不影响外层的特性是有前提的，否则内外都回滚。\n\n使用前提：\n\n1.JDK版本要在1.4以上，有java.sql.Savepoint。因为nested就是用savepoint来实现的。\n\n2.事务管理器的nestedTransactionAllowed属性为true。\n\n3.外层try-catch内层的异常。\n\n例子：\n\n1.调用addStudent的外层方法有事务，外层报错回滚，内层无错\n\n外层调用方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        studentService.addStudent(student);\n        int i1 =  10/ 0; // 外层报错回滚\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层调用方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.NESTED)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentMapper.insertSelective(student);方法执行后，数据库student表中并没有插入数据，要等到外层addUser方法的事务结束后，才一起提交。而此时，外层报错了，回滚，student表和user表都无数据插入。\n\n2.调用addStudent的外层方法有事务，外层无错，内层报错回滚\n\n外层调用方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        // 强调一下，内层是nested模式下，外层要try-catch内层的异常，外层才不会回滚\n        // 而内层是REQUIRED模式的话，即是外层try-catch内层异常，外层同样会回滚的\n        try {\n            studentService.addStudent(student); \n        }catch (Exception e){\n            //不抛出\n        }\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n内层调用方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.NESTED)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        int j =  10/ 0; // 内层报错\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\nstudentMapper.insertSelective(student);方法执行后，数据库student表中并没有插入数据，要等到外层addUser方法的事务结束后，才一起提交。而此时，自己内层报错了回滚，并不影响外层addUser方法的事务。 student表无数据插入。User表数据插入成功。\n\n强调一下：\n\n内层是nested模式下，外层要try-catch内层的异常，外层才不会回滚 而内层是REQUIRED模式的话，即是外层try-catch内层异常，外层同样会回滚的\n\n# 2.1.4.SUPPORTS：\n\n该传播行为解释：支持事务。当前有事务就支持。当前没有事务就算了，不会开启一个事物。\n\n例子：\n\n1.直接从外面调这个addStudent方法，外面没有事务，这个addStudent方法的事务传播行为是SUPPORTS。\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.SUPPORTS)// 这个addStudent方法的事务传播行为是SUPPORTS。\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\n此时相当于addStudent方法没有事务。执行了insertSelective后，数据就已经插入到Mysql对应的student表中了。\n\n等于说@Transactional(propagation = Propagation.SUPPORTS)修饰的方法本身是没有事务性的。\n\n2.调用addStudent的外层方法有事务\n\n外层调用方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional //有事务\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        studentService.addStudent(student);// 调用addStudent方法，addStudent方法的事务传播机制是SUPPORTS\n        return  i;\n    }\n \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层传播机制为SUPPORTS的方法：强调，外层方法和内层方法不在同一个类中\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.SUPPORTS) // 这个addStudent方法的事务传播行为是SUPPORTS\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentMapper.insertSelective(student);方法执行后，数据库student表中并没有插入数据，要等到外层addUser方法的事务结束后，才一起提交。\n\n# 2.1.5.MANDATORY\n\n该传播行为解释：支持事务，如果业务方法执行时已经在一个事务中，则加入当前事务。否则抛出异常。\n\n例子：\n\n1.直接从外面调这个addStudent方法，外面没有事务\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.MANDATORY)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：抛出异常\n\norg.springframework.transaction.IllegalTransactionStateException: No existing transaction found for transaction marked with propagation \'mandatory\' 2.调用addStudent的外层方法有事务\n\n外层调用方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional //有事务\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        studentService.addStudent(student);// 调用addStudent方法\n        return  i;\n    }\n \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.MANDATORY)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentMapper.insertSelective(student);方法执行后，数据库student表中并没有插入数据，要等到外层addUser方法的事务结束后，才一起提交。\n\n# 2.1.6.NOT_SUPPORTED\n\n不支持事务，如果业务方法执行时已经在一个事务中，则挂起当前事务，等方法执行完毕后，事务恢复进行。\n\n例子：\n\n1.调用addStudent的外层方法有事务\n\n外层调用方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        studentService.addStudent(student);\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n内层调用方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.NOT_SUPPORTED)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentMapper.insertSelective(student);方法执行后，数据库student表中已经插入了数据，不用等到自己的addStudent方法的事务结束后才提交。\n\n# 2.1.7.NEVER\n\n不支持事务。如果当前已经在一个事务中了，抛出异常。\n\n例子：\n\n1.调用addStudent的外层方法有事务\n\n外层调用方法：\n\n@Service\npublic class UserServiceImp implements UserService {\n \n    @Resource\n    private UserMapper userMapper;\n \n    @Autowired\n    StudentService studentService;\n \n    @Override\n    @Transactional\n    public int addUser(User user) {\n        int i = userMapper.insertSelective(user);\n        Student student = new Student();\n        student.setCourse("cs");\n        student.setName("sid");\n        studentService.addStudent(student);\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n内层调用方法：\n\n@Service\npublic class StudentServiceImp implements StudentService {\n \n    @Resource\n    private StudentMapper studentMapper;\n \n    @Override\n    @Transactional(propagation = Propagation.NEVER)\n    public int addStudent(Student student) {\n        int i = studentMapper.insertSelective(student);\n        \n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n外层addUser方法在调内层方法addStudent的时候，因为内层方法不支持事务，而外层方法开启了事务，则报错\n\norg.springframework.transaction.IllegalTransactionStateException: Existing transaction found for transaction marked with propagation \'never\'\n\n\n# 二、事务的隔离机制\n\n# 2.1事务隔离级别\n\n1.DEFAULT ,这是spring默认的隔离级别，表示使用数据库默认的事务隔离级别。另外四个与JDBC的隔离级别相对应。\n\n2.READ_UNCOMMITTED 这是事务最低的隔离级别，它充许别外一个事务可以看到这个事务未提交的数据。这种隔离级别会产生脏读，不可重复读和幻读。\n\n3.READ_COMMITTED 保证一个事务修改的数据提交后才能被另外一个事务读取。这种事务隔离级别可以避免脏读出现，但是可能会出现不可重复读和幻读。\n\n4.REPEATABLE_READ这种事务隔离级别可以防止脏读，不可重复读。但是可能出现幻读。\n\n5.SERIALIZABLE 事务被处理为顺序执行。防止脏读，不可重复读，防止幻读。\n\n示例：\n\n@Transactional(isolation=Isolation.REPEATABLE_READ)\n\nMysql innodb默认提供的是REPEATABLE_READ\n\n# 2.2脏读、不可重复读、幻读解释：\n\n1.脏读:脏读就是指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。\n\nMary的原工资为1000,财务人员将Mary的工资改为了8000，但未提交事务 与此同时，Mary正在读取自己的工资.Mary发现自己的工资变为了8000，欢天喜地！ （脏读） 而财务发现操作有误，而回滚了事务,Mary的工资又变为了1000. 2.不可重复读:在一个事务中前后两次读取的结果并不致，导致了不可重复读。\n\n在事务1中，Mary 读取了自己的工资为1000,操作并没有完成 . 在事务2中，这时财务人员修改了Mary的工资为2000,并提交了事务. 在事务1中，Mary 再次读取自己的工资时，工资变为了2000. 3.幻读：第一个事务对一个表中的全部数据行进行了修改。同时，第二个事务向表中插入一行新数据。那么操作第一个事务的用户发现表中还有未修改的数据行。\n\n 目前工资为1000的员工有10人。\n\n\n事务1,读取所有工资为1000的员工。 这时事务2向employee表插入了一条员工记录，工资也为1000 事务1再次读取所有工资为1000的员工 共读取到了11条记录\n\n\n# 参考\n\n',normalizedContent:'# 一、事务传播机制：\n\n事务的传播行为是针对嵌套事务而言。 示例：\n\n@transactional(propagation = propagation.required)\n\n在transactiondefinition定义中包括了如下几个表示传播行为的常量：\n\n常量                                                含义\ntransactiondefinition.propagation_required        如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。这是默认值。\ntransactiondefinition.propagation_requires_new    创建一个新的事务，如果当前存在事务，则把当前事务挂起。\ntransactiondefinition.propagation_supports        如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。\ntransactiondefinition.propagation_not_supported   以非事务方式运行，如果当前存在事务，则把当前事务挂起。\ntransactiondefinition.propagation_never           以非事务方式运行，如果当前存在事务，则抛出异常。\ntransactiondefinition.propagation_mandatory       如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。\ntransactiondefinition.propagation_nested          如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于transactiondefinition.propagation_required。\n\n# 2.1.1 required\n\nspring默认的事务传播行为就是它。\n\n支持事务。如果业务方法执行时已经在一个事务中，则加入当前事务，否则重新开启一个事务。\n\n外层事务提交了，内层才会提交。\n\n内/外只要有报错，他俩会一起回滚。\n\n只要内层方法报错抛出异常，即使外层有try-catch，该事务也会回滚！\n\n因为内外层方法在同一个事务中，内层只要抛出了异常，这个事务就会被设置成rollback-only，即使外层try-catch内层的异常，该事务也会回滚。\n\n例子：\n\n外层方法在调用内层方法的时候包裹住try-catch，内层方法报错抛出异常。\n\n外层方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        try {\n            studentservice.addstudent(student);\n        }catch (exception e){\n            //不抛出\n        }\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n内层方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional//(propagation = propagation.nested)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        int j =  10/ 0;  // 内层报错抛出异常\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n事务回滚，user表和student表都没有插入数据。\n\n因为内外层方法在同一个事务中，内层只要抛出了异常，这个事务就会被设置成rollback-only，即使外层try-catch内层的异常，该事务也会回滚。\n\n报错\n\norg.springframework.transaction.unexpectedrollbackexception: transaction rolled back because it has been marked as rollback-only\n\n# 2.1.2 requires_new\n\n支持事务。每次都是创建一个新事物，如果当前已经在事务中了，会挂起当前事务。\n\n内层事务结束，内层就提交了，不用等着外层一起提交。\n\n外层报错回滚，不影响内层。\n\n内层报错回滚，外层try-catch内层的异常，外层不会回滚。\n\n内层报错回滚，然后又会抛出异常，外层如果没有捕获处理内层抛出来的这个异常，外层还是会回滚的。这是重点！！！网上有些文章的例子给错了！！！\n\n例子：\n\n1.调用addstudent的外层方法有事务，外层报错回滚，内层无错\n\n外层方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        studentservice.addstudent(student);\n        int j =  10/ 0; // 外层报错\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.requires_new)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        \n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n内层的addstudent方法执行结束后，这个内层的事务就提交了，student表中就已经插入了数据了。\n\n外层adduser方法报错，只是回滚了外层的这个事务，user表中没有插入数据。\n\n2.调用addstudent的外层方法有事务，外层无错，内层报错回滚\n\n外层方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        studentservice.addstudent(student);\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n内层方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.requires_new)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        int j =  10/ 0;\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n内层的addstudent方法执行报错 ，内层事务回滚，然后再向外抛出这个异常。student表中没有插入数据。\n\n外层adduser，如果没有捕获处理内层抛出来的异常，外层一会回滚。user表中没有插入数据。\n\n# 2.1.3 nested：\n\n该传播行为解释：支持事务。如果当前已经在一个事务中了，则嵌套在已有的事务中作为一个子事务。如果当前没在事务中则开启一个事务。\n\n内层事务结束，要等着外层一起提交。\n\n外层回滚，内层也回滚。\n\n如果只是内层回滚，不影响外层。\n\n这个内层回滚不影响外层的特性是有前提的，否则内外都回滚。\n\n使用前提：\n\n1.jdk版本要在1.4以上，有java.sql.savepoint。因为nested就是用savepoint来实现的。\n\n2.事务管理器的nestedtransactionallowed属性为true。\n\n3.外层try-catch内层的异常。\n\n例子：\n\n1.调用addstudent的外层方法有事务，外层报错回滚，内层无错\n\n外层调用方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        studentservice.addstudent(student);\n        int i1 =  10/ 0; // 外层报错回滚\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层调用方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.nested)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentmapper.insertselective(student);方法执行后，数据库student表中并没有插入数据，要等到外层adduser方法的事务结束后，才一起提交。而此时，外层报错了，回滚，student表和user表都无数据插入。\n\n2.调用addstudent的外层方法有事务，外层无错，内层报错回滚\n\n外层调用方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        // 强调一下，内层是nested模式下，外层要try-catch内层的异常，外层才不会回滚\n        // 而内层是required模式的话，即是外层try-catch内层异常，外层同样会回滚的\n        try {\n            studentservice.addstudent(student); \n        }catch (exception e){\n            //不抛出\n        }\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n内层调用方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.nested)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        int j =  10/ 0; // 内层报错\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\nstudentmapper.insertselective(student);方法执行后，数据库student表中并没有插入数据，要等到外层adduser方法的事务结束后，才一起提交。而此时，自己内层报错了回滚，并不影响外层adduser方法的事务。 student表无数据插入。user表数据插入成功。\n\n强调一下：\n\n内层是nested模式下，外层要try-catch内层的异常，外层才不会回滚 而内层是required模式的话，即是外层try-catch内层异常，外层同样会回滚的\n\n# 2.1.4.supports：\n\n该传播行为解释：支持事务。当前有事务就支持。当前没有事务就算了，不会开启一个事物。\n\n例子：\n\n1.直接从外面调这个addstudent方法，外面没有事务，这个addstudent方法的事务传播行为是supports。\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.supports)// 这个addstudent方法的事务传播行为是supports。\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\n此时相当于addstudent方法没有事务。执行了insertselective后，数据就已经插入到mysql对应的student表中了。\n\n等于说@transactional(propagation = propagation.supports)修饰的方法本身是没有事务性的。\n\n2.调用addstudent的外层方法有事务\n\n外层调用方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional //有事务\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        studentservice.addstudent(student);// 调用addstudent方法，addstudent方法的事务传播机制是supports\n        return  i;\n    }\n \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层传播机制为supports的方法：强调，外层方法和内层方法不在同一个类中\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.supports) // 这个addstudent方法的事务传播行为是supports\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentmapper.insertselective(student);方法执行后，数据库student表中并没有插入数据，要等到外层adduser方法的事务结束后，才一起提交。\n\n# 2.1.5.mandatory\n\n该传播行为解释：支持事务，如果业务方法执行时已经在一个事务中，则加入当前事务。否则抛出异常。\n\n例子：\n\n1.直接从外面调这个addstudent方法，外面没有事务\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.mandatory)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：抛出异常\n\norg.springframework.transaction.illegaltransactionstateexception: no existing transaction found for transaction marked with propagation \'mandatory\' 2.调用addstudent的外层方法有事务\n\n外层调用方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional //有事务\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        studentservice.addstudent(student);// 调用addstudent方法\n        return  i;\n    }\n \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n内层方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.mandatory)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentmapper.insertselective(student);方法执行后，数据库student表中并没有插入数据，要等到外层adduser方法的事务结束后，才一起提交。\n\n# 2.1.6.not_supported\n\n不支持事务，如果业务方法执行时已经在一个事务中，则挂起当前事务，等方法执行完毕后，事务恢复进行。\n\n例子：\n\n1.调用addstudent的外层方法有事务\n\n外层调用方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        studentservice.addstudent(student);\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n内层调用方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.not_supported)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n结果：\n\nstudentmapper.insertselective(student);方法执行后，数据库student表中已经插入了数据，不用等到自己的addstudent方法的事务结束后才提交。\n\n# 2.1.7.never\n\n不支持事务。如果当前已经在一个事务中了，抛出异常。\n\n例子：\n\n1.调用addstudent的外层方法有事务\n\n外层调用方法：\n\n@service\npublic class userserviceimp implements userservice {\n \n    @resource\n    private usermapper usermapper;\n \n    @autowired\n    studentservice studentservice;\n \n    @override\n    @transactional\n    public int adduser(user user) {\n        int i = usermapper.insertselective(user);\n        student student = new student();\n        student.setcourse("cs");\n        student.setname("sid");\n        studentservice.addstudent(student);\n        return  i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n内层调用方法：\n\n@service\npublic class studentserviceimp implements studentservice {\n \n    @resource\n    private studentmapper studentmapper;\n \n    @override\n    @transactional(propagation = propagation.never)\n    public int addstudent(student student) {\n        int i = studentmapper.insertselective(student);\n        \n        return i;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n结果：\n\n外层adduser方法在调内层方法addstudent的时候，因为内层方法不支持事务，而外层方法开启了事务，则报错\n\norg.springframework.transaction.illegaltransactionstateexception: existing transaction found for transaction marked with propagation \'never\'\n\n\n# 二、事务的隔离机制\n\n# 2.1事务隔离级别\n\n1.default ,这是spring默认的隔离级别，表示使用数据库默认的事务隔离级别。另外四个与jdbc的隔离级别相对应。\n\n2.read_uncommitted 这是事务最低的隔离级别，它充许别外一个事务可以看到这个事务未提交的数据。这种隔离级别会产生脏读，不可重复读和幻读。\n\n3.read_committed 保证一个事务修改的数据提交后才能被另外一个事务读取。这种事务隔离级别可以避免脏读出现，但是可能会出现不可重复读和幻读。\n\n4.repeatable_read这种事务隔离级别可以防止脏读，不可重复读。但是可能出现幻读。\n\n5.serializable 事务被处理为顺序执行。防止脏读，不可重复读，防止幻读。\n\n示例：\n\n@transactional(isolation=isolation.repeatable_read)\n\nmysql innodb默认提供的是repeatable_read\n\n# 2.2脏读、不可重复读、幻读解释：\n\n1.脏读:脏读就是指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。\n\nmary的原工资为1000,财务人员将mary的工资改为了8000，但未提交事务 与此同时，mary正在读取自己的工资.mary发现自己的工资变为了8000，欢天喜地！ （脏读） 而财务发现操作有误，而回滚了事务,mary的工资又变为了1000. 2.不可重复读:在一个事务中前后两次读取的结果并不致，导致了不可重复读。\n\n在事务1中，mary 读取了自己的工资为1000,操作并没有完成 . 在事务2中，这时财务人员修改了mary的工资为2000,并提交了事务. 在事务1中，mary 再次读取自己的工资时，工资变为了2000. 3.幻读：第一个事务对一个表中的全部数据行进行了修改。同时，第二个事务向表中插入一行新数据。那么操作第一个事务的用户发现表中还有未修改的数据行。\n\n 目前工资为1000的员工有10人。\n\n\n事务1,读取所有工资为1000的员工。 这时事务2向employee表插入了一条员工记录，工资也为1000 事务1再次读取所有工资为1000的员工 共读取到了11条记录\n\n\n# 参考\n\n',charsets:{cjk:!0}},{title:"SQLite解析",frontmatter:{title:"SQLite解析",date:"2022-05-29T19:26:18.000Z",permalink:"/pages/7b8498/",categories:["数据","数据库"],tags:["数据库"],readingShow:"top"},regularPath:"/30.%E6%95%B0%E6%8D%AE/20.%E6%95%B0%E6%8D%AE%E5%BA%93/SQLite%E8%A7%A3%E6%9E%90.html",relativePath:"30.数据/20.数据库/SQLite解析.md",key:"v-5a148b1e",path:"/pages/7b8498/",headers:[{level:2,title:"WAL2设计",slug:"wal2设计",normalizedTitle:"wal2设计",charIndex:2},{level:3,title:"解决方案概述",slug:"解决方案概述",normalizedTitle:"解决方案概述",charIndex:402},{level:3,title:"Checkpoint",slug:"checkpoint",normalizedTitle:"checkpoint",charIndex:877},{level:3,title:"WAL-INDEX格式",slug:"wal-index格式",normalizedTitle:"wal-index格式",charIndex:1463},{level:3,title:"锁",slug:"锁",normalizedTitle:"锁",charIndex:1842},{level:3,title:"启动/恢复",slug:"启动-恢复",normalizedTitle:"启动/恢复",charIndex:2497}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"WAL2设计 解决方案概述 Checkpoint WAL-INDEX格式 锁 启动/恢复",content:'# WAL2设计\n\n在传统wal模式下，如果Writer希望在检查点正在进行时写入数据库，它可能会将帧附加到现有wal文件中。 这意味着在检查点完成后，wal文件由一大块检查点帧组成，然后是一大块未检查点帧。 在以大量写流量为特点的部署中，这可能意味着wal文件从未被完全检查过。因此会无限增长。\n\n另一种方法是使用"PRAGMA journal_mode = wal2"或类似命令强制完成wal文件的checkpoint。 但这必须： 1）等待所有现有读取操作完成 2）等待任何现有写入操作，然后阻止所有新写入操作 3）执行checkpoint 4）等待在步骤2和3期间启动的任何新读取操作。写入操作在此步骤中仍被阻止。\n\n这意味着，为了避免wal文件在繁忙的系统中无限增长，Writer必须定期暂停以完成checkpoint。在具有长时间运行的读取操作的系统中，这种暂停可能会持续很长时间。\n\n\n# 解决方案概述\n\nWal2模式使用两个wal文件。\n\nWriter将第一个wal文件扩展到pre-configured size后，开始将事务附加到第二个wal文件。 一旦所有现有reader都在读取足够新的快照以包含整个第一个wal文件，就可以对其进行checkpoint。\n\n与此同时，Writer正在将事务写入第二个wal文件。 一旦wal文件的大小超过pre-configured size，每个新的Writer都会检查：\n\n * 第一个wal文件是否已被检查；\n * 如果已被检查，是否没有reader还在读取第一个wal文件（一旦被检查，新的reader将只从第二个wal文件读取）。\n\n如果这两个条件都为真，Writer可以切换回第一个wal文件。 最后，checkpoint可以检查第二个wal文件，依此类推。\n\nWriter当前追加到的wal文件（写入前无需检查上述两个条件的文件）称为“当前”wal文件。 第一个wal文件的名称与传统wal模式系统中的wal文件的名称相同-db>-wal。 第二个名为<db>-wal2。\n\n\n# Checkpoint\n\n上述pre-configured size是由PRAGMA journal_size_limit设置的值。 或者，如果未设置journal_size_limit，则为1000页。\n\nwal2模式中只有一种类型的检查点（没有truncate、restart等），它总是checkpoint单个wal文件的全部内容。 只有在Writer将第一个事务写入另一个wal文件，并且所有Reader都在读取包含另一个wal文件中至少一个事务的快照之后，才能检查wal文件。\n\n> 译者注：通俗来说，就是单个WAL文件只有没有写入和读取事务的时候，才能checkpoint。\n\n如果注册了wal-hook，则在提交写入事务后调用wal-hook，就像在传统wal模式中一样。\n\n传递给wal-hook的整数参数是两个wal文件中未checkpoint帧的总数。\n\n除此之外，如果没有可以checkpoint的帧，则该参数设置为零。这在两种情况下发生：\n\n 1. 另一个wal文件（writter还没有追加的那个文件）是完全空的\n 2. 另一个wal文件（writter还没有追加的那个文件）已被检查点。\n\nWAL文件格式wal2模式下每个WAL文件使用的文件格式与传统WAL模式相同。 除此之外，文件格式字段设置为3021000，而不是3007000。\n\n\n# WAL-INDEX格式\n\nWAL索引格式也非常相似。 尽管有两个wal文件，但仍有一个wal索引共享内存区域（默认unix或win32 VFS的shm文件）。 wal索引标头的大小相同，但有以下例外： 版本字段设置为3021000，而不是3007000。 传统wal索引头中未使用的32位字段现在用于存储（a）单个位，指示两个wal文件Writer中的哪一个应该附加到wal文件，以及（b）第二个wal文件中的帧数（31位）。 wal索引中的第一个哈希表包含与存储在第一个wal文件中的第一个 HASHTABLE_NPAGE_ONE frames相对应的条目。 wal索引中的第二个哈希表包含索引第二个wal文件中第一个HASHTABLE_NPAGE帧的条目。 第三个哈希表包含第一个wal文件中的下一个HASHTABLE_NPAGE帧，依此类推。\n\n\n# 锁\n\n读锁比传统wal模式更简单。 没有包含帧编号的锁定插槽。 相反，Reader可能持有四种不同的读锁组合：\n\n 1. WAL_LOCK_PART1：第一个WAL上的“part”锁，没有第二个WAL。\n 2. WAL_LOCK_PART1_FULL2：“part”锁定第一个WAL，“full”锁定第二个WAL。\n 3. WAL_LOCK_PART2：第一个WAL上没有锁，第二个WAL上有“part”锁。\n 4. WAL_LOCK_PART2_FULL1：第一个WAL上“full”锁定，“part”锁定第二个WAL。\n\n当Reader在打开读取事务时读取wal索引头时，它会对当前wal文件进行"part" lock。 “Part”，因为当读取事务处于活动状态时，wal文件可能会增长，在这种情况下，Reader将只读取wal文件的一部分。\n\n"part" lock可防止检查点程序检查其所在的wal文件。 如果非当前wal文件中有未检查的数据，则Reader会对该wal文件进行"full" lock。\n\n"full" lock表示Reader正在使用整个wal文件。 "full" lock可防止Writer覆盖其所在的wal文件，但不会阻止检查点程序对其进行检查。\n\n仍然只有一个WRITER和一个CHECKPOINTER锁。 恢复过程仍然在整个SQLITE_SHM_NLOCK shm-locks范围内使用相同的独占锁。 这是因为上面的读锁使用传统wal模式使用的六个读锁插槽中的四个。\n\n\n# 启动/恢复\n\nwal2数据库中数据库头的读写版本字段设置为0x03，而不是传统wal模式中的0x02。 wal2模式中使用的wal文件格式与传统wal模式中使用的格式相同。\n\n但是，为了支持恢复，wal文件头字段的填充方式有两个不同，如下所示： 第一个wal文件首次创建时，wal文件头中的“nCkpt”字段设置为0。 此后，每次编写器切换wal文件时，都会将新wal文件头中的nCkpt字段设置为 ((nCkpt0 + 1) & 0x0F)，其中nCkpt0是前一个wal文件头中的值。 这意味着第一个wal文件在nCkpt字段中始终具有偶数值，而第二个wal文件始终具有奇数值。 当Writer切换wal文件时，它会将新wal文件中的salt值设置为前一wal文件中最后一帧的校验和的副本。\n\n恢复处理过程如下：\n\n 1. 每个wal文件都是单独恢复的。 除此之外，如果第一个wal文件不存在或大小为零字节，则第二个wal文件在“恢复”之前将被截断(truncated)为零字节。\n\n 2. 如果两个wal文件都包含有效的headers，则会比较nCkpt字段，以查看两个wal文件中哪个旧。如果第二个wal文件中的salt密钥与旧wal文件中的最终帧校验和匹配，则使用两个wal文件。否则，将忽略较新的wal文件。或者，如果只有一个或两个wal文件都没有有效的头，则只有一个或没有wal文件恢复到重建的wal索引中。',normalizedContent:'# wal2设计\n\n在传统wal模式下，如果writer希望在检查点正在进行时写入数据库，它可能会将帧附加到现有wal文件中。 这意味着在检查点完成后，wal文件由一大块检查点帧组成，然后是一大块未检查点帧。 在以大量写流量为特点的部署中，这可能意味着wal文件从未被完全检查过。因此会无限增长。\n\n另一种方法是使用"pragma journal_mode = wal2"或类似命令强制完成wal文件的checkpoint。 但这必须： 1）等待所有现有读取操作完成 2）等待任何现有写入操作，然后阻止所有新写入操作 3）执行checkpoint 4）等待在步骤2和3期间启动的任何新读取操作。写入操作在此步骤中仍被阻止。\n\n这意味着，为了避免wal文件在繁忙的系统中无限增长，writer必须定期暂停以完成checkpoint。在具有长时间运行的读取操作的系统中，这种暂停可能会持续很长时间。\n\n\n# 解决方案概述\n\nwal2模式使用两个wal文件。\n\nwriter将第一个wal文件扩展到pre-configured size后，开始将事务附加到第二个wal文件。 一旦所有现有reader都在读取足够新的快照以包含整个第一个wal文件，就可以对其进行checkpoint。\n\n与此同时，writer正在将事务写入第二个wal文件。 一旦wal文件的大小超过pre-configured size，每个新的writer都会检查：\n\n * 第一个wal文件是否已被检查；\n * 如果已被检查，是否没有reader还在读取第一个wal文件（一旦被检查，新的reader将只从第二个wal文件读取）。\n\n如果这两个条件都为真，writer可以切换回第一个wal文件。 最后，checkpoint可以检查第二个wal文件，依此类推。\n\nwriter当前追加到的wal文件（写入前无需检查上述两个条件的文件）称为“当前”wal文件。 第一个wal文件的名称与传统wal模式系统中的wal文件的名称相同-db>-wal。 第二个名为<db>-wal2。\n\n\n# checkpoint\n\n上述pre-configured size是由pragma journal_size_limit设置的值。 或者，如果未设置journal_size_limit，则为1000页。\n\nwal2模式中只有一种类型的检查点（没有truncate、restart等），它总是checkpoint单个wal文件的全部内容。 只有在writer将第一个事务写入另一个wal文件，并且所有reader都在读取包含另一个wal文件中至少一个事务的快照之后，才能检查wal文件。\n\n> 译者注：通俗来说，就是单个wal文件只有没有写入和读取事务的时候，才能checkpoint。\n\n如果注册了wal-hook，则在提交写入事务后调用wal-hook，就像在传统wal模式中一样。\n\n传递给wal-hook的整数参数是两个wal文件中未checkpoint帧的总数。\n\n除此之外，如果没有可以checkpoint的帧，则该参数设置为零。这在两种情况下发生：\n\n 1. 另一个wal文件（writter还没有追加的那个文件）是完全空的\n 2. 另一个wal文件（writter还没有追加的那个文件）已被检查点。\n\nwal文件格式wal2模式下每个wal文件使用的文件格式与传统wal模式相同。 除此之外，文件格式字段设置为3021000，而不是3007000。\n\n\n# wal-index格式\n\nwal索引格式也非常相似。 尽管有两个wal文件，但仍有一个wal索引共享内存区域（默认unix或win32 vfs的shm文件）。 wal索引标头的大小相同，但有以下例外： 版本字段设置为3021000，而不是3007000。 传统wal索引头中未使用的32位字段现在用于存储（a）单个位，指示两个wal文件writer中的哪一个应该附加到wal文件，以及（b）第二个wal文件中的帧数（31位）。 wal索引中的第一个哈希表包含与存储在第一个wal文件中的第一个 hashtable_npage_one frames相对应的条目。 wal索引中的第二个哈希表包含索引第二个wal文件中第一个hashtable_npage帧的条目。 第三个哈希表包含第一个wal文件中的下一个hashtable_npage帧，依此类推。\n\n\n# 锁\n\n读锁比传统wal模式更简单。 没有包含帧编号的锁定插槽。 相反，reader可能持有四种不同的读锁组合：\n\n 1. wal_lock_part1：第一个wal上的“part”锁，没有第二个wal。\n 2. wal_lock_part1_full2：“part”锁定第一个wal，“full”锁定第二个wal。\n 3. wal_lock_part2：第一个wal上没有锁，第二个wal上有“part”锁。\n 4. wal_lock_part2_full1：第一个wal上“full”锁定，“part”锁定第二个wal。\n\n当reader在打开读取事务时读取wal索引头时，它会对当前wal文件进行"part" lock。 “part”，因为当读取事务处于活动状态时，wal文件可能会增长，在这种情况下，reader将只读取wal文件的一部分。\n\n"part" lock可防止检查点程序检查其所在的wal文件。 如果非当前wal文件中有未检查的数据，则reader会对该wal文件进行"full" lock。\n\n"full" lock表示reader正在使用整个wal文件。 "full" lock可防止writer覆盖其所在的wal文件，但不会阻止检查点程序对其进行检查。\n\n仍然只有一个writer和一个checkpointer锁。 恢复过程仍然在整个sqlite_shm_nlock shm-locks范围内使用相同的独占锁。 这是因为上面的读锁使用传统wal模式使用的六个读锁插槽中的四个。\n\n\n# 启动/恢复\n\nwal2数据库中数据库头的读写版本字段设置为0x03，而不是传统wal模式中的0x02。 wal2模式中使用的wal文件格式与传统wal模式中使用的格式相同。\n\n但是，为了支持恢复，wal文件头字段的填充方式有两个不同，如下所示： 第一个wal文件首次创建时，wal文件头中的“nckpt”字段设置为0。 此后，每次编写器切换wal文件时，都会将新wal文件头中的nckpt字段设置为 ((nckpt0 + 1) & 0x0f)，其中nckpt0是前一个wal文件头中的值。 这意味着第一个wal文件在nckpt字段中始终具有偶数值，而第二个wal文件始终具有奇数值。 当writer切换wal文件时，它会将新wal文件中的salt值设置为前一wal文件中最后一帧的校验和的副本。\n\n恢复处理过程如下：\n\n 1. 每个wal文件都是单独恢复的。 除此之外，如果第一个wal文件不存在或大小为零字节，则第二个wal文件在“恢复”之前将被截断(truncated)为零字节。\n\n 2. 如果两个wal文件都包含有效的headers，则会比较nckpt字段，以查看两个wal文件中哪个旧。如果第二个wal文件中的salt密钥与旧wal文件中的最终帧校验和匹配，则使用两个wal文件。否则，将忽略较新的wal文件。或者，如果只有一个或两个wal文件都没有有效的头，则只有一个或没有wal文件恢复到重建的wal索引中。',charsets:{cjk:!0}},{title:"JDBC基础",frontmatter:{title:"JDBC基础",date:"2020-12-09T11:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["数据库","SQL"],publish:!0,permalink:"/pages/ede450/",readingShow:"top"},regularPath:"/30.%E6%95%B0%E6%8D%AE/30.%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE/JDBC%E5%9F%BA%E7%A1%80.html",relativePath:"30.数据/30.数据访问/JDBC基础.md",key:"v-06d2254f",path:"/pages/ede450/",headers:[{level:3,title:"JDBC简介",slug:"jdbc简介",normalizedTitle:"jdbc简介",charIndex:2},{level:3,title:"JDBC驱动类型",slug:"jdbc驱动类型",normalizedTitle:"jdbc驱动类型",charIndex:532},{level:4,title:"类型1：JDBC-ODBC 桥驱动程序：",slug:"类型1-jdbc-odbc-桥驱动程序",normalizedTitle:"类型1：jdbc-odbc 桥驱动程序：",charIndex:813},{level:4,title:"类型2：JDBC-Native API",slug:"类型2-jdbc-native-api",normalizedTitle:"类型2：jdbc-native api",charIndex:1041},{level:4,title:"类型3：JDBC-Net 纯 Java",slug:"类型3-jdbc-net-纯-java",normalizedTitle:"类型3：jdbc-net 纯 java",charIndex:1313},{level:4,title:"类型4：100％纯 Java",slug:"类型4-100-纯-java",normalizedTitle:"类型4：100％纯 java",charIndex:1621},{level:3,title:"相关知识",slug:"相关知识",normalizedTitle:"相关知识",charIndex:2026},{level:4,title:"ODBC",slug:"odbc",normalizedTitle:"odbc",charIndex:822},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:3332}],lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:"JDBC简介 JDBC驱动类型 类型1：JDBC-ODBC 桥驱动程序： 类型2：JDBC-Native API 类型3：JDBC-Net 纯 Java 类型4：100％纯 Java 相关知识 ODBC 参考文献",content:'# JDBC简介\n\n在web开发中，不可避免的地要使用数据库来存储和管理数据。为了在java语言中提供数据库访问的支持，Sun公司于1996年提供了一套访问数据的标准Java类库，即JDBC。\n\nJDBC的全称是Java数据库连接(Java Database connect)，它是一套用于执行SQL语句的Java API。应用程序可通过这套API连接到关系数据库，并使用SQL语句来完成对数据库中数据的查询、更新和删除等操作。应用程序使用JDBC访问数据库的方式如下图所示。\n\n\n\nJDBC的实现包括三部分。\n\n(1)JDBC驱动管理器：负责注册特定的JDBC驱动器，主要通过java.sql. Driver Manager类实现。\n\n(2)JDBC驱动器API：由Sun公司负责制定，其中最主要的接口是java.sql. Driver接口。\n\n(3)JDBC驱动器：它是一种数据库驱动，由数据库厂商创建，也称为JDBC驱动程序JDBC驱动器实现了JDBC驱动器API，负责与特定的数据库连接，以及处理通信细节。\n\n常用的类与接口就是DriverManager、Connection、Statement、Result、PreparedStatement\n\n\n# JDBC驱动类型\n\nJDBC 驱动实现了 JDBC API 中定义的接口，该接口用于与数据库服务器进行交互。\n\n例如，使用 JDBC 驱动程序可以让你打开数据库连接，并通过发送 SQL 或数据库命令，然后通过 Java 接收结果。\n\njava.sql 包中附带的 JDK，包含了定义各种类与他们的行为和实际实现，这些类都在第三方驱动程序中完成。第三方供应商在他们的数据库驱动程序中都实现了 java.sql.Driver 接口。\n\nJDBC 驱动程序的实现，因为各种各样的操作系统和 Java 运行在硬件平台的不同而不同。Sun 公司将实现类型分为四类：\n\n# 类型1：JDBC-ODBC 桥驱动程序：\n\n在类型1驱动程序中，一个 JDBC 桥接器是用来访问安装在每个客户机上的 ODBC 驱动程序。为了使用 ODBC，需要在目标数据库上配置系统数据源名称（DSN）。\n\n当 Java 刚出来时，这是一个很有用的驱动程序，因为大多数的数据库只支持 ODBC 访问，但现在此类型的驱动程序仅适用于实验用途或在没有其他选择的情况。 自带 JDK 1.2 中的 JDBC-ODBC 桥是这类驱动程序的一个很好的例子。\n\n# 类型2：JDBC-Native API\n\n在类型2驱动程序中，JDBC API 调用转换成原生的 C/C++ API 调用，这对于数据库来说具有唯一性。这些驱动程序通常由数据库供应商提供，并和 JDBC-ODBC 桥驱动程序同样的方式使用。该供应商的驱动程序必须安装在每台客户机上。\n\n如果我们改变了当前数据库，我们必须改变原生 API ，因为它是具体到某一个数据库，并且他们大多已经失效了。即使这样用类型2驱动程序也能提高一些速度，因为他消除了 ODBC 的开销。 Oracle 调用接口（OCI）驱动程序是一个类型2驱动程序的示例。\n\n# 类型3：JDBC-Net 纯 Java\n\n在类型3驱动程序中，一般用三层方法来访问数据库。JDBC 客户端使用标准的网络套接字与中间件应用服务器进行通信。套接字的相关信息被中间件应用服务器转换为数据库管理系统所要求的的调用格式，并转发到数据库服务器。\n\n这种驱动程序是非常灵活的，因为它不需要在客户端上安装代码，而且单个驱动程序能提供访问多个数据库。 你可以将应用服务器作为一个 JDBC “代理”，这意味着它会调用客户端应用程序。因此，你需要一些有关服务器配置方面的知识，这样可以高效地使用此驱动程序类型。\n\n你的应用服务器可能使用类型1，2，或4驱动程序与数据库进行通信，了解它们的细微之处将会很有帮助。\n\n# 类型4：100％纯 Java\n\n在类型4驱动程序中，一个纯粹的基于 Java 的驱动程序通过 socket 连接与供应商的数据库进行通信。这是可用于数据库的最高性能的驱动程序，并且通常由供应商自身提供。\n\n这种驱动器是非常灵活的，你不需要在客户端或服务端上安装特殊的软件。此外，这些驱动程序是可以动态下载的。\n\nMySQL Connector/J 的驱动程序是一个类型4驱动程序。因为它们的网络协议的专有属性，数据库供应商通常提供类型4的驱动程序。\n\n该使用哪种驱动程序？ 如果你正在访问一个数据库，如 Oracle，Sybase 或 IBM，首选的驱动程序是类型4。\n\n如果你的 Java 应用程序同时访问多个数据库类型，类型3是首选的驱动程序。\n\n类型2驱动程序是在你的数据库没有提供类型3或类型4驱动程序时使用的。\n\n类型1驱动程序不被认为是部署级的驱动程序，它存在的目的通常仅用于开发和测试。\n\n\n# 相关知识\n\n# ODBC\n\nODBC（Open Database Connectivity）是一组对数据库访问的标准API，这些API通过SQL来完成大部分任务，而且它本身也支持SQL语言，支持用户发来的SQL。ODBC定义了访问数据库API的一组规范，这些API独立于形色各异的DBMS和编程语言。\n\n也就是说，一个基于ODBC的应用程序，对数据库的操作不依赖任何DBMS，不直接与DBMS打交道，所有的数据库操作由对应的DBMS的ODBC驱动程序完成。不论是SQL Server、Access还是Oracle数据库，均可用ODBC API进行访问。\n\n由此可见，ODBC的最大优点是能以统一的方式处理所有的数据库。\n\nJDBC（JavaDatabase Connectivity）是Java与数据库的接口规范，JDBC定义了一个支持标准SQL功能的通用低层API，它由Java 语言编写的类和接口组成，旨在让各数据库开发商为Java程序员提供标准的数据库API。\n\nJDBC API定义了若干Java中的类，表示数据库连接、SQL指令、结果集、数据库元数据等。它允许Java程序员发送SQL指令并处理结果。\n\n共同点：\n\n 1. 比如，JDBC与ODBC都是基于X/Open的SQL调用级接口；\n 2. 从结构上来讲，JDBC的总体结构类似于ODBC,都有四个组件：应用程序、驱动程序管理器、驱动程序和数据源,工作原 理亦大体相同；\n 3. 在内容交互方面，JDBC保持了ODBC的基本特性,也独立于特定数据库. 而且都不是直接与数据库交互，而是通过驱动程序管理器。\n\n区别： 我们知道，ODBC几乎能在所有平台上连接几乎所有的数据库。为什么 Java 不使用 ODBC？ 答案是：Java 可以使用 ODBC，但最好是以JDBC-ODBC桥的形式使用（Java连接总体分为Java直连和JDBC-ODBC桥两种形式）。 那为什么还需要 JDBC？\n\n 1. 因为ODBC 不适合直接在 Java 中使用，因为它使用 C 语言接口。从Java 调用本地 C代码在安全性、实现、坚固性和程序的自动移植性方面都有许多缺点。从 ODBC C API 到 Java API 的字面翻译是不可取的。例如，Java 没有指针，而 ODBC 却对指针用得很广泛（包括很容易出错的指针"void *"）。\n 2. 另外，ODBC 比较复杂，而JDBC 尽量保证简单功能的简便性，同时在必要时允许使用高级功能。如果使用ODBC，就必须手动地将 ODBC 驱动程序管理器和驱动程序安装在每台客户机上。如果完全用 Java 编写 JDBC 驱动程序则 JDBC代码在所有 Java 平台上（从网络计算机到大型机）都可以自 动安装、移植并保证安全性。\n\n总之，JDBC 在很大程度上是借鉴了ODBC的，从他的基础上发展而来。JDBC 保留了 ODBC 的基本设计特征，因此，熟悉 ODBC 的程序员将发现 JDBC 很容易使用。它们之间最大的区别在于：JDBC 以 Java 风格与优点为基础并进行优化，因此更加易于使用。\n\n\n# 参考文献\n\nJDBC指南',normalizedContent:'# jdbc简介\n\n在web开发中，不可避免的地要使用数据库来存储和管理数据。为了在java语言中提供数据库访问的支持，sun公司于1996年提供了一套访问数据的标准java类库，即jdbc。\n\njdbc的全称是java数据库连接(java database connect)，它是一套用于执行sql语句的java api。应用程序可通过这套api连接到关系数据库，并使用sql语句来完成对数据库中数据的查询、更新和删除等操作。应用程序使用jdbc访问数据库的方式如下图所示。\n\n\n\njdbc的实现包括三部分。\n\n(1)jdbc驱动管理器：负责注册特定的jdbc驱动器，主要通过java.sql. driver manager类实现。\n\n(2)jdbc驱动器api：由sun公司负责制定，其中最主要的接口是java.sql. driver接口。\n\n(3)jdbc驱动器：它是一种数据库驱动，由数据库厂商创建，也称为jdbc驱动程序jdbc驱动器实现了jdbc驱动器api，负责与特定的数据库连接，以及处理通信细节。\n\n常用的类与接口就是drivermanager、connection、statement、result、preparedstatement\n\n\n# jdbc驱动类型\n\njdbc 驱动实现了 jdbc api 中定义的接口，该接口用于与数据库服务器进行交互。\n\n例如，使用 jdbc 驱动程序可以让你打开数据库连接，并通过发送 sql 或数据库命令，然后通过 java 接收结果。\n\njava.sql 包中附带的 jdk，包含了定义各种类与他们的行为和实际实现，这些类都在第三方驱动程序中完成。第三方供应商在他们的数据库驱动程序中都实现了 java.sql.driver 接口。\n\njdbc 驱动程序的实现，因为各种各样的操作系统和 java 运行在硬件平台的不同而不同。sun 公司将实现类型分为四类：\n\n# 类型1：jdbc-odbc 桥驱动程序：\n\n在类型1驱动程序中，一个 jdbc 桥接器是用来访问安装在每个客户机上的 odbc 驱动程序。为了使用 odbc，需要在目标数据库上配置系统数据源名称（dsn）。\n\n当 java 刚出来时，这是一个很有用的驱动程序，因为大多数的数据库只支持 odbc 访问，但现在此类型的驱动程序仅适用于实验用途或在没有其他选择的情况。 自带 jdk 1.2 中的 jdbc-odbc 桥是这类驱动程序的一个很好的例子。\n\n# 类型2：jdbc-native api\n\n在类型2驱动程序中，jdbc api 调用转换成原生的 c/c++ api 调用，这对于数据库来说具有唯一性。这些驱动程序通常由数据库供应商提供，并和 jdbc-odbc 桥驱动程序同样的方式使用。该供应商的驱动程序必须安装在每台客户机上。\n\n如果我们改变了当前数据库，我们必须改变原生 api ，因为它是具体到某一个数据库，并且他们大多已经失效了。即使这样用类型2驱动程序也能提高一些速度，因为他消除了 odbc 的开销。 oracle 调用接口（oci）驱动程序是一个类型2驱动程序的示例。\n\n# 类型3：jdbc-net 纯 java\n\n在类型3驱动程序中，一般用三层方法来访问数据库。jdbc 客户端使用标准的网络套接字与中间件应用服务器进行通信。套接字的相关信息被中间件应用服务器转换为数据库管理系统所要求的的调用格式，并转发到数据库服务器。\n\n这种驱动程序是非常灵活的，因为它不需要在客户端上安装代码，而且单个驱动程序能提供访问多个数据库。 你可以将应用服务器作为一个 jdbc “代理”，这意味着它会调用客户端应用程序。因此，你需要一些有关服务器配置方面的知识，这样可以高效地使用此驱动程序类型。\n\n你的应用服务器可能使用类型1，2，或4驱动程序与数据库进行通信，了解它们的细微之处将会很有帮助。\n\n# 类型4：100％纯 java\n\n在类型4驱动程序中，一个纯粹的基于 java 的驱动程序通过 socket 连接与供应商的数据库进行通信。这是可用于数据库的最高性能的驱动程序，并且通常由供应商自身提供。\n\n这种驱动器是非常灵活的，你不需要在客户端或服务端上安装特殊的软件。此外，这些驱动程序是可以动态下载的。\n\nmysql connector/j 的驱动程序是一个类型4驱动程序。因为它们的网络协议的专有属性，数据库供应商通常提供类型4的驱动程序。\n\n该使用哪种驱动程序？ 如果你正在访问一个数据库，如 oracle，sybase 或 ibm，首选的驱动程序是类型4。\n\n如果你的 java 应用程序同时访问多个数据库类型，类型3是首选的驱动程序。\n\n类型2驱动程序是在你的数据库没有提供类型3或类型4驱动程序时使用的。\n\n类型1驱动程序不被认为是部署级的驱动程序，它存在的目的通常仅用于开发和测试。\n\n\n# 相关知识\n\n# odbc\n\nodbc（open database connectivity）是一组对数据库访问的标准api，这些api通过sql来完成大部分任务，而且它本身也支持sql语言，支持用户发来的sql。odbc定义了访问数据库api的一组规范，这些api独立于形色各异的dbms和编程语言。\n\n也就是说，一个基于odbc的应用程序，对数据库的操作不依赖任何dbms，不直接与dbms打交道，所有的数据库操作由对应的dbms的odbc驱动程序完成。不论是sql server、access还是oracle数据库，均可用odbc api进行访问。\n\n由此可见，odbc的最大优点是能以统一的方式处理所有的数据库。\n\njdbc（javadatabase connectivity）是java与数据库的接口规范，jdbc定义了一个支持标准sql功能的通用低层api，它由java 语言编写的类和接口组成，旨在让各数据库开发商为java程序员提供标准的数据库api。\n\njdbc api定义了若干java中的类，表示数据库连接、sql指令、结果集、数据库元数据等。它允许java程序员发送sql指令并处理结果。\n\n共同点：\n\n 1. 比如，jdbc与odbc都是基于x/open的sql调用级接口；\n 2. 从结构上来讲，jdbc的总体结构类似于odbc,都有四个组件：应用程序、驱动程序管理器、驱动程序和数据源,工作原 理亦大体相同；\n 3. 在内容交互方面，jdbc保持了odbc的基本特性,也独立于特定数据库. 而且都不是直接与数据库交互，而是通过驱动程序管理器。\n\n区别： 我们知道，odbc几乎能在所有平台上连接几乎所有的数据库。为什么 java 不使用 odbc？ 答案是：java 可以使用 odbc，但最好是以jdbc-odbc桥的形式使用（java连接总体分为java直连和jdbc-odbc桥两种形式）。 那为什么还需要 jdbc？\n\n 1. 因为odbc 不适合直接在 java 中使用，因为它使用 c 语言接口。从java 调用本地 c代码在安全性、实现、坚固性和程序的自动移植性方面都有许多缺点。从 odbc c api 到 java api 的字面翻译是不可取的。例如，java 没有指针，而 odbc 却对指针用得很广泛（包括很容易出错的指针"void *"）。\n 2. 另外，odbc 比较复杂，而jdbc 尽量保证简单功能的简便性，同时在必要时允许使用高级功能。如果使用odbc，就必须手动地将 odbc 驱动程序管理器和驱动程序安装在每台客户机上。如果完全用 java 编写 jdbc 驱动程序则 jdbc代码在所有 java 平台上（从网络计算机到大型机）都可以自 动安装、移植并保证安全性。\n\n总之，jdbc 在很大程度上是借鉴了odbc的，从他的基础上发展而来。jdbc 保留了 odbc 的基本设计特征，因此，熟悉 odbc 的程序员将发现 jdbc 很容易使用。它们之间最大的区别在于：jdbc 以 java 风格与优点为基础并进行优化，因此更加易于使用。\n\n\n# 参考文献\n\njdbc指南',charsets:{cjk:!0}},{title:"解决Docker启动java进程号1的问题",frontmatter:{title:"解决Docker启动java进程号1的问题",date:"2022-11-29T19:35:36.000Z",permalink:"/pages/58ac01/",categories:["运维"],tags:[null],readingShow:"top"},regularPath:"/40.%E8%BF%90%E7%BB%B4/%E8%A7%A3%E5%86%B3Docker%E5%90%AF%E5%8A%A8java%E8%BF%9B%E7%A8%8B%E5%8F%B71%E7%9A%84%E9%97%AE%E9%A2%98.html",relativePath:"40.运维/解决Docker启动java进程号1的问题.md",key:"v-09c34755",path:"/pages/58ac01/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"解决spring boot应用以docker容器方式启动后，进程ID是1而导致的jstack和jmap等命令不可用的现象",slug:"解决spring-boot应用以docker容器方式启动后-进程id是1而导致的jstack和jmap等命令不可用的现象",normalizedTitle:"解决spring boot应用以docker容器方式启动后，进程id是1而导致的jstack和jmap等命令不可用的现象",charIndex:62},{level:3,title:"解决办法",slug:"解决办法",normalizedTitle:"解决办法",charIndex:863},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1675},{level:3,title:"相关问题",slug:"相关问题",normalizedTitle:"相关问题",charIndex:1715},{level:3,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:1854}],excerpt:'<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>我们在Java容器中，经常需要用到jmap等命令，但是默认Java启动的进程号是1，无法使用这些命令。</p>\n',lastUpdated:"12/4/2022, 6:55:46 PM",lastUpdatedTimestamp:1670151346e3,headersStr:"前言 解决spring boot应用以docker容器方式启动后，进程ID是1而导致的jstack和jmap等命令不可用的现象 解决办法 总结 相关问题 参考资料",content:'# 前言\n\n我们在Java容器中，经常需要用到jmap等命令，但是默认Java启动的进程号是1，无法使用这些命令。\n\n\n# 解决spring boot应用以docker容器方式启动后，进程ID是1而导致的jstack和jmap等命令不可用的现象\n\n默认将spring boot工程打包成镜像的方式\n\n 1. 当我们把spring boot打包成一个可执行jar\n 2. 编写Dockerfile 将jarcopy到容器中，在cmd 中执行java -jar ***.jar 启动，Dockerfile文件如下\n\n#基础镜像基于openjdk，利用alpine  \nFROM openjdk:8u212-jdk-alpine  \n#所属团队  \nMAINTAINER chengf  \n  \nENV JAVA_OPTS="-server -Xms512m -Xmx512m" LOGGING_LEVEL="INFO"  \n#编译时变量无法在运行时用，此处做一次转换  \nENV TARGET_JAR="spring-boot-sample-0.0.1-SNAPSHOT.jar"  \n  \n#将编译好的工程jar包copy到镜像容器中  \nCOPY ${TARGET_JAR} /usr/src/${TARGET_JAR}  \n  \n  \nENV OPTS=${JAVA_OPTS}" -Dfile.encoding=UTF8    -Duser.timezone=GMT+08"  \nWORKDIR /usr/src  \n#程序入口  \n  \n  \nCMD java -jar ${OPTS} ${TARGET_JAR} --logging.level.root=${LOGGING_LEVEL}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n启动镜像后执行docker exec 进入到容器内部，执行ps可以看到容器中进程号是1的就是我们的应用启动进程\n\n\n# 解决办法\n\n解决办法 因为jstack jmap等jdk自带的tools放发无法对1号进程分析，那我们就想办法把java进程变为非1号进程对应的Dockerfile\n\n#基础镜像基于openjdk，利用alpine  \nFROM openjdk:8u212-jdk-alpine  \n\nENV JAVA_OPTS="-server -Xms512m -Xmx512m" LOGGING_LEVEL="INFO"  \n#编译时变量无法在运行时用，此处做一次转换\nENV TARGET_JAR="spring-boot-sample-0.0.1-SNAPSHOT.jar"\n\n#将编译好的工程jar包copy到镜像容器中  \nCOPY ${TARGET_JAR} /usr/src/${TARGET_JAR}  \n\nENV OPTS=${JAVA_OPTS}" -Dfile.encoding=UTF8    -Duser.timezone=GMT+08"\nWORKDIR /usr/src  \n#程序入口  \n\n#CMD java -jar ${OPTS} ${TARGET_JAR} --logging.level.root=${LOGGING_LEVEL}  \n\nRUN echo "java -jar \\${OPTS} \\${TARGET_JAR} --logging.level.root=\\${LOGGING_LEVEL}" > start.sh \\\n             && chmod 777 start.sh\n# CMD ./start.sh\nENTRYPOINT ["./start.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n这样启动后1号进程就变成了 start.sh 由1号进程启动的进程才是我们的java进程\n\n\n# 总结\n\n不管通过什么方式 只要让启动命令不是第一个执行的就能解决问题。\n\n\n# 相关问题\n\nhttps://github.com/alibaba/arthas/issues/362 https://github.com/docker-library/openjdk/issues/76 https://github.com/krallin/tini\n\n\n# 参考资料\n\n解决spring boot应用以docker容器方式启动后，进程ID是1而导致的jstack和jmap等命令不可用的问题 https://www.iteye.com/blog/fengyilin-2451011',normalizedContent:'# 前言\n\n我们在java容器中，经常需要用到jmap等命令，但是默认java启动的进程号是1，无法使用这些命令。\n\n\n# 解决spring boot应用以docker容器方式启动后，进程id是1而导致的jstack和jmap等命令不可用的现象\n\n默认将spring boot工程打包成镜像的方式\n\n 1. 当我们把spring boot打包成一个可执行jar\n 2. 编写dockerfile 将jarcopy到容器中，在cmd 中执行java -jar ***.jar 启动，dockerfile文件如下\n\n#基础镜像基于openjdk，利用alpine  \nfrom openjdk:8u212-jdk-alpine  \n#所属团队  \nmaintainer chengf  \n  \nenv java_opts="-server -xms512m -xmx512m" logging_level="info"  \n#编译时变量无法在运行时用，此处做一次转换  \nenv target_jar="spring-boot-sample-0.0.1-snapshot.jar"  \n  \n#将编译好的工程jar包copy到镜像容器中  \ncopy ${target_jar} /usr/src/${target_jar}  \n  \n  \nenv opts=${java_opts}" -dfile.encoding=utf8    -duser.timezone=gmt+08"  \nworkdir /usr/src  \n#程序入口  \n  \n  \ncmd java -jar ${opts} ${target_jar} --logging.level.root=${logging_level}  \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n启动镜像后执行docker exec 进入到容器内部，执行ps可以看到容器中进程号是1的就是我们的应用启动进程\n\n\n# 解决办法\n\n解决办法 因为jstack jmap等jdk自带的tools放发无法对1号进程分析，那我们就想办法把java进程变为非1号进程对应的dockerfile\n\n#基础镜像基于openjdk，利用alpine  \nfrom openjdk:8u212-jdk-alpine  \n\nenv java_opts="-server -xms512m -xmx512m" logging_level="info"  \n#编译时变量无法在运行时用，此处做一次转换\nenv target_jar="spring-boot-sample-0.0.1-snapshot.jar"\n\n#将编译好的工程jar包copy到镜像容器中  \ncopy ${target_jar} /usr/src/${target_jar}  \n\nenv opts=${java_opts}" -dfile.encoding=utf8    -duser.timezone=gmt+08"\nworkdir /usr/src  \n#程序入口  \n\n#cmd java -jar ${opts} ${target_jar} --logging.level.root=${logging_level}  \n\nrun echo "java -jar \\${opts} \\${target_jar} --logging.level.root=\\${logging_level}" > start.sh \\\n             && chmod 777 start.sh\n# cmd ./start.sh\nentrypoint ["./start.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n这样启动后1号进程就变成了 start.sh 由1号进程启动的进程才是我们的java进程\n\n\n# 总结\n\n不管通过什么方式 只要让启动命令不是第一个执行的就能解决问题。\n\n\n# 相关问题\n\nhttps://github.com/alibaba/arthas/issues/362 https://github.com/docker-library/openjdk/issues/76 https://github.com/krallin/tini\n\n\n# 参考资料\n\n解决spring boot应用以docker容器方式启动后，进程id是1而导致的jstack和jmap等命令不可用的问题 https://www.iteye.com/blog/fengyilin-2451011',charsets:{cjk:!0}},{title:"Idea插件开发快速入门",frontmatter:{title:"Idea插件开发快速入门",date:"2022-12-04T12:06:42.000Z",permalink:"/pages/905694/",sticky:1,titleTag:"原创",categories:["工具"],tags:["Idea插件"],readingShow:"top"},regularPath:"/50.%E5%B7%A5%E5%85%B7/10.Idea%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",relativePath:"50.工具/10.Idea插件开发快速入门.md",key:"v-5b98320c",path:"/pages/905694/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一、环境准备",slug:"一、环境准备",normalizedTitle:"一、环境准备",charIndex:101},{level:3,title:"1.1 JDK11",slug:"_1-1-jdk11",normalizedTitle:"1.1 jdk11",charIndex:112},{level:3,title:"1.2 Idea2020以上",slug:"_1-2-idea2020以上",normalizedTitle:"1.2 idea2020以上",charIndex:251},{level:2,title:"二、Idea插件工程创建",slug:"二、idea插件工程创建",normalizedTitle:"二、idea插件工程创建",charIndex:370},{level:2,title:"三、Idea工程结构介绍",slug:"三、idea工程结构介绍",normalizedTitle:"三、idea工程结构介绍",charIndex:720},{level:3,title:"plugin.xml介绍：",slug:"plugin-xml介绍",normalizedTitle:"plugin.xml介绍：",charIndex:988},{level:2,title:"四、解决乱码问题",slug:"四、解决乱码问题",normalizedTitle:"四、解决乱码问题",charIndex:1124},{level:3,title:"4.1 编译时乱码解决",slug:"_4-1-编译时乱码解决",normalizedTitle:"4.1 编译时乱码解决",charIndex:1137},{level:3,title:"4.2 控制台乱码解决",slug:"_4-2-控制台乱码解决",normalizedTitle:"4.2 控制台乱码解决",charIndex:1331},{level:2,title:"五、第一行插件代码",slug:"五、第一行插件代码",normalizedTitle:"五、第一行插件代码",charIndex:1568},{level:3,title:"5.1 添加Action",slug:"_5-1-添加action",normalizedTitle:"5.1 添加action",charIndex:1582},{level:3,title:"5.2 填写Action信息",slug:"_5-2-填写action信息",normalizedTitle:"5.2 填写action信息",charIndex:1697},{level:3,title:"5.3 实现弹窗Hello World",slug:"_5-3-实现弹窗hello-world",normalizedTitle:"5.3 实现弹窗hello world",charIndex:1751},{level:2,title:"六、插件运行",slug:"六、插件运行",normalizedTitle:"六、插件运行",charIndex:1883},{level:2,title:"七、给插件添加Logo",slug:"七、给插件添加logo",normalizedTitle:"七、给插件添加logo",charIndex:2217},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:2528}],excerpt:'<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>用了这么多年的Idea，也用过不少Idea插件，今年刚好认真去学习了一下Idea插件的开发。</p>\n<p>这篇文章主要是进行Idea插件开发的快速入门，能够快速把Hello world搞定。</p>\n',lastUpdated:"12/5/2022, 9:00:10 PM",lastUpdatedTimestamp:167024521e4,headersStr:"前言 一、环境准备 1.1 JDK11 1.2 Idea2020以上 二、Idea插件工程创建 三、Idea工程结构介绍 plugin.xml介绍： 四、解决乱码问题 4.1 编译时乱码解决 4.2 控制台乱码解决 五、第一行插件代码 5.1 添加Action 5.2 填写Action信息 5.3 实现弹窗Hello World 六、插件运行 七、给插件添加Logo 参考资料",content:'# 前言\n\n用了这么多年的Idea，也用过不少Idea插件，今年刚好认真去学习了一下Idea插件的开发。\n\n这篇文章主要是进行Idea插件开发的快速入门，能够快速把Hello world搞定。\n\n\n# 一、环境准备\n\n\n# 1.1 JDK11\n\nidea开发需要准备一个基础JDK，主要是用于源码编译。\n\n我们使用Gradle创建工程，可以直接引入idea开发的gradle插件，会自动引入idea开发自身需要的sdk。\n\n如果不通过gradle创建插件，那么是需要单独配置idea的SDK的\n\n\n# 1.2 Idea2020以上\n\n通过Gradle创建项目，可以在gradle中指定用于调试的idea版本，gradle将会自动下载\n\n如果下载太慢，可以配置使用本地idea用于调试，但是必须指定本地社区版本idea才可以进行调试\n\n\n# 二、Idea插件工程创建\n\n\n\n上图是Idea2021版本的创建工程视图，对于Idea2022版本，有着较大的区别。\n\nstep1: 选择Gradle\n\nstep2: Project SDK选择 JDK11\n\nstep3: 依赖包勾选Java和Intellij Platform Plugin\n\nstep4: 点击Next\n\n提示\n\nKotlin DSL build script，这个勾选了，那么Gradle会使用.kts文件管理依赖，不勾选，那么使用的是Groovy管理依赖 如果项目中有kotlin代码，那么还需要勾选 Kotlin/JVM的依赖 当然，上面选择的都是可以在打开工程后修改的\n\nstep5:\n\n\n\n填写项目名和项目保存地址\n\nFinish\n\n完成后等待Idea打开项目\n\n\n# 三、Idea工程结构介绍\n\n\n\n.gradle目录是gradle使用的 gradle目录是配置wrapper，用于指定编译使用的gradle版本，wrapper目录需要上传git，保证所有人使用相同gradle版本编译项目 gradlew是linux/macos的gradle脚本 gradlew.bat是windows的gradle脚本 settings.gradle是配置gradle工程信息的 build.gradle文件是项目核心配置，其中group相当于maven的坐标，version是jar的版本，也是插件的版本\n\n\n# plugin.xml介绍：\n\n\n\ndenpends是用于声明依赖的：\n\n表示该插件必须在具备这些依赖的idea上面才可以正常运行\n\n例如，该插件依赖maven，那么只有在有maven模块的InteliJ平台运行，比如idea，而例如pycharm就不能运行该插件\n\n\n# 四、解决乱码问题\n\n\n# 4.1 编译时乱码解决\n\n编译时报 GBK 错误 解决方案 : 在 build.gradle 中添加如下代码 , 该项在根节点下即可 , 与 plugins , repositories , dependencies 同级 ;\n\ntasks.withType(JavaCompile) {\n    options.encoding = "UTF-8"\n}\n\n\n\n1\n2\n3\n4\n\n\n\n# 4.2 控制台乱码解决\n\n * 方案一： 打开 IntelliJ IDEA 安装目录 , 在 bin 目录下找到 idea64.exe.vmoptions 文件 , 在文件的最后一行添加 -Dfile.encoding=utf-8 内容 ;\n\n * 方案二： 如果闲找文件太麻烦 , 可以按照如下路径操作 , 菜单 -> Help -> Edit Custom VM OPtions , 也可以修改对应的 ideaXX.exe.vmoptions 文件配置 ;\n\n\n\n\n# 五、第一行插件代码\n\n\n# 5.1 添加Action\n\n\n\n通过快捷创建Action的方式，可以自动生成对应的类，并且将Action添加到plugin.xml的action中\n\n除了这种方式，也可以手动创建Java类，并配置plugin.xml文件\n\n\n# 5.2 填写Action信息\n\n创建Action需要配置的基本信息\n\n\n\n填写完成后，点击Ok按钮\n\n\n# 5.3 实现弹窗Hello World\n\n我们在actionPerformed中实现触发action之后的功能代码\n\n这里通过Messages.showInfoMessage接口，弹出一个信息提示弹窗，展示西方古老的问候语Hello world!\n\n\n\n\n\n\n# 六、插件运行\n\n如果我们是新建的插件工程，那么字tools bar工具栏可以直接点击按钮运行\n\n\n\n如果我们是打开的Gradle工程，可能tool bar没有信息 我们可以通过gradle runIde命令直接启动运行插件\n\n\n\n插件点击运行后，会自动打开一个调试插件用的idea窗口\n\n这个调试的idea是社区版的\n\n我们可以选择创建一个项目、或者打开一个项目，来体验我们的插件功能\n\n\n\n可以看到，我们刚刚定义的插件，在Tools的View PSI Structure…的下一个位置\n\n点击Say Helo，idea弹窗展示了古老问候语， 同样的，我们也可以按刚刚设置的快捷键ctrl+K，弹出该信息 点击Ok，你将正式成为一名idea插件开发入门者\n\n\n\n\n# 七、给插件添加Logo\n\n官方文档: https://plugins.jetbrains.com/docs/intellij/plugin-icon-file.html#adding-plugin-logo-files-to-a-plugin-project\n\n命名规则：\n\npluginIcon.svg 默认图标。如果包含深色主题图标，那么该图标仅在亮色主题显示 pluginIcon_dark.svg  深色主题图标，该文件是可选的，如果存在该文件，那么深色主题使用该图标\n\n文件位置： 放在项目resources/META-INF目录下\n\n文件格式：\n\n必须使用svg格式矢量图标，理想大小为2-3KB\n\n\n\n\n# 参考资料\n\n 1. 官方文档',normalizedContent:'# 前言\n\n用了这么多年的idea，也用过不少idea插件，今年刚好认真去学习了一下idea插件的开发。\n\n这篇文章主要是进行idea插件开发的快速入门，能够快速把hello world搞定。\n\n\n# 一、环境准备\n\n\n# 1.1 jdk11\n\nidea开发需要准备一个基础jdk，主要是用于源码编译。\n\n我们使用gradle创建工程，可以直接引入idea开发的gradle插件，会自动引入idea开发自身需要的sdk。\n\n如果不通过gradle创建插件，那么是需要单独配置idea的sdk的\n\n\n# 1.2 idea2020以上\n\n通过gradle创建项目，可以在gradle中指定用于调试的idea版本，gradle将会自动下载\n\n如果下载太慢，可以配置使用本地idea用于调试，但是必须指定本地社区版本idea才可以进行调试\n\n\n# 二、idea插件工程创建\n\n\n\n上图是idea2021版本的创建工程视图，对于idea2022版本，有着较大的区别。\n\nstep1: 选择gradle\n\nstep2: project sdk选择 jdk11\n\nstep3: 依赖包勾选java和intellij platform plugin\n\nstep4: 点击next\n\n提示\n\nkotlin dsl build script，这个勾选了，那么gradle会使用.kts文件管理依赖，不勾选，那么使用的是groovy管理依赖 如果项目中有kotlin代码，那么还需要勾选 kotlin/jvm的依赖 当然，上面选择的都是可以在打开工程后修改的\n\nstep5:\n\n\n\n填写项目名和项目保存地址\n\nfinish\n\n完成后等待idea打开项目\n\n\n# 三、idea工程结构介绍\n\n\n\n.gradle目录是gradle使用的 gradle目录是配置wrapper，用于指定编译使用的gradle版本，wrapper目录需要上传git，保证所有人使用相同gradle版本编译项目 gradlew是linux/macos的gradle脚本 gradlew.bat是windows的gradle脚本 settings.gradle是配置gradle工程信息的 build.gradle文件是项目核心配置，其中group相当于maven的坐标，version是jar的版本，也是插件的版本\n\n\n# plugin.xml介绍：\n\n\n\ndenpends是用于声明依赖的：\n\n表示该插件必须在具备这些依赖的idea上面才可以正常运行\n\n例如，该插件依赖maven，那么只有在有maven模块的intelij平台运行，比如idea，而例如pycharm就不能运行该插件\n\n\n# 四、解决乱码问题\n\n\n# 4.1 编译时乱码解决\n\n编译时报 gbk 错误 解决方案 : 在 build.gradle 中添加如下代码 , 该项在根节点下即可 , 与 plugins , repositories , dependencies 同级 ;\n\ntasks.withtype(javacompile) {\n    options.encoding = "utf-8"\n}\n\n\n\n1\n2\n3\n4\n\n\n\n# 4.2 控制台乱码解决\n\n * 方案一： 打开 intellij idea 安装目录 , 在 bin 目录下找到 idea64.exe.vmoptions 文件 , 在文件的最后一行添加 -dfile.encoding=utf-8 内容 ;\n\n * 方案二： 如果闲找文件太麻烦 , 可以按照如下路径操作 , 菜单 -> help -> edit custom vm options , 也可以修改对应的 ideaxx.exe.vmoptions 文件配置 ;\n\n\n\n\n# 五、第一行插件代码\n\n\n# 5.1 添加action\n\n\n\n通过快捷创建action的方式，可以自动生成对应的类，并且将action添加到plugin.xml的action中\n\n除了这种方式，也可以手动创建java类，并配置plugin.xml文件\n\n\n# 5.2 填写action信息\n\n创建action需要配置的基本信息\n\n\n\n填写完成后，点击ok按钮\n\n\n# 5.3 实现弹窗hello world\n\n我们在actionperformed中实现触发action之后的功能代码\n\n这里通过messages.showinfomessage接口，弹出一个信息提示弹窗，展示西方古老的问候语hello world!\n\n\n\n\n\n\n# 六、插件运行\n\n如果我们是新建的插件工程，那么字tools bar工具栏可以直接点击按钮运行\n\n\n\n如果我们是打开的gradle工程，可能tool bar没有信息 我们可以通过gradle runide命令直接启动运行插件\n\n\n\n插件点击运行后，会自动打开一个调试插件用的idea窗口\n\n这个调试的idea是社区版的\n\n我们可以选择创建一个项目、或者打开一个项目，来体验我们的插件功能\n\n\n\n可以看到，我们刚刚定义的插件，在tools的view psi structure…的下一个位置\n\n点击say helo，idea弹窗展示了古老问候语， 同样的，我们也可以按刚刚设置的快捷键ctrl+k，弹出该信息 点击ok，你将正式成为一名idea插件开发入门者\n\n\n\n\n# 七、给插件添加logo\n\n官方文档: https://plugins.jetbrains.com/docs/intellij/plugin-icon-file.html#adding-plugin-logo-files-to-a-plugin-project\n\n命名规则：\n\npluginicon.svg 默认图标。如果包含深色主题图标，那么该图标仅在亮色主题显示 pluginicon_dark.svg  深色主题图标，该文件是可选的，如果存在该文件，那么深色主题使用该图标\n\n文件位置： 放在项目resources/meta-inf目录下\n\n文件格式：\n\n必须使用svg格式矢量图标，理想大小为2-3kb\n\n\n\n\n# 参考资料\n\n 1. 官方文档',charsets:{cjk:!0}},{title:"Idea启动Java报错Shorten command line",frontmatter:{title:"Idea启动Java报错Shorten command line",date:"2021-03-25T12:00:00.000Z",sidebar:"auto",categories:["工具"],tags:["Idea","工具"],publish:!0,permalink:"/pages/f59a3a/",readingShow:"top"},regularPath:"/50.%E5%B7%A5%E5%85%B7/Idea%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8Java.html",relativePath:"50.工具/Idea无法启动Java.md",key:"v-29c3dbd6",path:"/pages/f59a3a/",headers:[{level:3,title:"问题描述",slug:"问题描述",normalizedTitle:"问题描述",charIndex:2},{level:3,title:"解决方案：",slug:"解决方案",normalizedTitle:"解决方案：",charIndex:290},{level:3,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:439}],lastUpdated:"12/4/2022, 6:55:46 PM",lastUpdatedTimestamp:1670151346e3,headersStr:"问题描述 解决方案： 参考资料",content:'# 问题描述\n\n启动控制台报错： Command line is too long. Shorten command line for SpringBootMainApplication or also for Application\n\nError running \'SpringBootMainApplication\': Command line is too long. Shorten command line for SpringBootMainApplication or also for Application default configuration.\n\n\n# 解决方案：\n\n修改项目下 .idea\\workspace.xml\n\n找到标签 <component name="PropertiesComponent">。在标签里加一行 ：\n\n<property name="dynamic.classpath" value="true" />\n\n\n1\n\n\n\n# 参考资料\n\nCommand line is too long. Shorten command line for SpringBootMainApplication or also for Application\n\nhttps://blog.csdn.net/weixin_42941486/article/details/105784849',normalizedContent:'# 问题描述\n\n启动控制台报错： command line is too long. shorten command line for springbootmainapplication or also for application\n\nerror running \'springbootmainapplication\': command line is too long. shorten command line for springbootmainapplication or also for application default configuration.\n\n\n# 解决方案：\n\n修改项目下 .idea\\workspace.xml\n\n找到标签 <component name="propertiescomponent">。在标签里加一行 ：\n\n<property name="dynamic.classpath" value="true" />\n\n\n1\n\n\n\n# 参考资料\n\ncommand line is too long. shorten command line for springbootmainapplication or also for application\n\nhttps://blog.csdn.net/weixin_42941486/article/details/105784849',charsets:{cjk:!0}},{title:"设计模式之门面模式/外观模式",frontmatter:{title:"设计模式之门面模式/外观模式",date:"2020-12-10T09:00:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/bcbecf/",readingShow:"top"},regularPath:"/60.%E6%9E%B6%E6%9E%84/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F-%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F.html",relativePath:"60.架构/10.设计模式/01.设计模式之门面模式-外观模式.md",key:"v-53c62012",path:"/pages/bcbecf/",headers:[{level:3,title:"基本概念",slug:"基本概念",normalizedTitle:"基本概念",charIndex:17},{level:3,title:"目的",slug:"目的",normalizedTitle:"目的",charIndex:212},{level:3,title:"实现方案",slug:"实现方案",normalizedTitle:"实现方案",charIndex:260},{level:3,title:"编程实现",slug:"编程实现",normalizedTitle:"编程实现",charIndex:415},{level:3,title:"门面模式的优点",slug:"门面模式的优点",normalizedTitle:"门面模式的优点",charIndex:1305},{level:3,title:"缺点",slug:"缺点",normalizedTitle:"缺点",charIndex:1546},{level:3,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:1596},{level:3,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:1682},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:1982}],lastUpdated:"12/4/2022, 6:55:46 PM",lastUpdatedTimestamp:1670151346e3,headersStr:"基本概念 目的 实现方案 编程实现 门面模式的优点 缺点 应用场景 注意事项 参考文献",content:"> 门面模式也叫外观模式\n\n\n# 基本概念\n\n提供一个统一的接口去访问多个子系统的多个不同的接口，它为子系统中的一组接口提供一个统一的高层接口。使用子系统更容易使用。\n\n本质：就是化零为整；引入一个中介类，把各个分散的功能组合成一个整体，相当于聚合各个类的各个接口，客户端要访问或者调用，只需要看门面接口就行了；\n\n这两年流行微服务，即化整为零，把一个大服务拆分成一个个零部件； 而门面模式则是反其道，是化零为整；\n\n\n# 目的\n\n为了用户使用方便，把过度拆分的分散功能，组合成一个整体，对外提供一个统一的接口\n\n\n# 实现方案\n\n本质：引入一个第三方中介类，这个类集合了多个零部件类的功能，实际功能则委托给这些零部件对象，这个类只是做为对外的统一接口，只是一个马甲；\n\n引入中介对象 有许多细粒度的小对象 中介对象暴露了这些小对象的功能； 中介对象实际功能委托给这些小对象 中介对象提供给外部使用（对外隐藏那些小对象）\n\n\n# 编程实现\n\nclass ModuleA {\n    /**\n     * 提供给子系统外部使用的方法\n     */\n    public void a1(){};\n    /**\n     * 子系统内部模块之间相互调用时使用的方法\n     */\n    private void a2(){};\n    private void a3(){};\n}\nclass ModuleB {\n    /**\n     * 提供给子系统外部使用的方法\n     */\n    public void b1(){};\n    \n    /**\n     * 子系统内部模块之间相互调用时使用的方法\n     */\n    private void b2(){};\n    private void b3(){};\n}\nclass ModuleFacade {\n    \n    ModuleA a = new ModuleA();\n    ModuleB b = new ModuleB();\n    /**\n     * 下面这些是A、B模块对子系统外部提供的方法\n     */\n    public void a1(){\n        a.a1();\n    }\n    public void b1(){\n        b.b1();\n    }\n}\n\n// 客户端调用，只需要看门面即可，与具体模块解耦合\nclass Client {\n    public static void main(String[] args) {\n        Facade facade = new Facade();\n        facade.a1();\n        facade.a2();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n\n# 门面模式的优点\n\n松散耦合: 门面模式松散了客户端与子系统的耦合关系，让子系统内部的模块能更容易扩展和维护。\n\n简单易用: 门面模式让子系统更加易用，客户端不再需要了解子系统内部的实现，也不需要跟众多子系统内部的模块进行交互，只需要跟门面类交互就可以了。\n\n更好的划分访问层次: 通过合理使用Facade，可以帮助我们更好地划分访问的层次。有些方法是对系统外的，有些方法是系统内部使用的。把需要暴露给外部的功能集中到门面中，这样既方便客户端使用，也很好地隐藏了内部的细节。\n\n\n# 缺点\n\n不规范的编程方式 没有面向抽象编程，而是通过增加中介层，转换服务提供方的服务接口；\n\n\n# 应用场景\n\nA：简化子系统复杂性时。 B：监控所有子系统时；通过门面控制了入口，可以统一监控； C：希望封装和隐藏子系统时； D：两历史系统进行改造并打通关系时；\n\n\n# 注意事项\n\n“与代理模式的区别” 在了解门面模式时，会发现它不仅与代理模式很像，与装饰器模式也很类似； 它们之间到底有什么样的区别呢?\n\n相似点：\n\n * 都引入了中介类（对象）\n * 中介对象都引用并把功能委托给了原对象\n * 都起到了”代理”功能\n\n区别\n\n * 代理侧重于对原对象的访问控制（当然也可以不是控制而是功能增强）\n * 代理与原类实现相同的抽象（相同接口或直接继承原业）\n * 代理只代理一个类\n * 门面侧重于功能整合（多个小系统或小对象整合成一个功能丰富的大对象）\n * 门面可以与子系统具有不同的抽象（具有不同的接口，可以对方法重新起名）\n * 门面代理的是一系列类\n\n\n# 参考文献\n\n23种设计模式-门面模式(外观模式)",normalizedContent:"> 门面模式也叫外观模式\n\n\n# 基本概念\n\n提供一个统一的接口去访问多个子系统的多个不同的接口，它为子系统中的一组接口提供一个统一的高层接口。使用子系统更容易使用。\n\n本质：就是化零为整；引入一个中介类，把各个分散的功能组合成一个整体，相当于聚合各个类的各个接口，客户端要访问或者调用，只需要看门面接口就行了；\n\n这两年流行微服务，即化整为零，把一个大服务拆分成一个个零部件； 而门面模式则是反其道，是化零为整；\n\n\n# 目的\n\n为了用户使用方便，把过度拆分的分散功能，组合成一个整体，对外提供一个统一的接口\n\n\n# 实现方案\n\n本质：引入一个第三方中介类，这个类集合了多个零部件类的功能，实际功能则委托给这些零部件对象，这个类只是做为对外的统一接口，只是一个马甲；\n\n引入中介对象 有许多细粒度的小对象 中介对象暴露了这些小对象的功能； 中介对象实际功能委托给这些小对象 中介对象提供给外部使用（对外隐藏那些小对象）\n\n\n# 编程实现\n\nclass modulea {\n    /**\n     * 提供给子系统外部使用的方法\n     */\n    public void a1(){};\n    /**\n     * 子系统内部模块之间相互调用时使用的方法\n     */\n    private void a2(){};\n    private void a3(){};\n}\nclass moduleb {\n    /**\n     * 提供给子系统外部使用的方法\n     */\n    public void b1(){};\n    \n    /**\n     * 子系统内部模块之间相互调用时使用的方法\n     */\n    private void b2(){};\n    private void b3(){};\n}\nclass modulefacade {\n    \n    modulea a = new modulea();\n    moduleb b = new moduleb();\n    /**\n     * 下面这些是a、b模块对子系统外部提供的方法\n     */\n    public void a1(){\n        a.a1();\n    }\n    public void b1(){\n        b.b1();\n    }\n}\n\n// 客户端调用，只需要看门面即可，与具体模块解耦合\nclass client {\n    public static void main(string[] args) {\n        facade facade = new facade();\n        facade.a1();\n        facade.a2();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n\n# 门面模式的优点\n\n松散耦合: 门面模式松散了客户端与子系统的耦合关系，让子系统内部的模块能更容易扩展和维护。\n\n简单易用: 门面模式让子系统更加易用，客户端不再需要了解子系统内部的实现，也不需要跟众多子系统内部的模块进行交互，只需要跟门面类交互就可以了。\n\n更好的划分访问层次: 通过合理使用facade，可以帮助我们更好地划分访问的层次。有些方法是对系统外的，有些方法是系统内部使用的。把需要暴露给外部的功能集中到门面中，这样既方便客户端使用，也很好地隐藏了内部的细节。\n\n\n# 缺点\n\n不规范的编程方式 没有面向抽象编程，而是通过增加中介层，转换服务提供方的服务接口；\n\n\n# 应用场景\n\na：简化子系统复杂性时。 b：监控所有子系统时；通过门面控制了入口，可以统一监控； c：希望封装和隐藏子系统时； d：两历史系统进行改造并打通关系时；\n\n\n# 注意事项\n\n“与代理模式的区别” 在了解门面模式时，会发现它不仅与代理模式很像，与装饰器模式也很类似； 它们之间到底有什么样的区别呢?\n\n相似点：\n\n * 都引入了中介类（对象）\n * 中介对象都引用并把功能委托给了原对象\n * 都起到了”代理”功能\n\n区别\n\n * 代理侧重于对原对象的访问控制（当然也可以不是控制而是功能增强）\n * 代理与原类实现相同的抽象（相同接口或直接继承原业）\n * 代理只代理一个类\n * 门面侧重于功能整合（多个小系统或小对象整合成一个功能丰富的大对象）\n * 门面可以与子系统具有不同的抽象（具有不同的接口，可以对方法重新起名）\n * 门面代理的是一系列类\n\n\n# 参考文献\n\n23种设计模式-门面模式(外观模式)",charsets:{cjk:!0}},{title:"设计模式之委托模式",frontmatter:{title:"设计模式之委托模式",date:"2020-12-10T10:30:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/92d4ab/",readingShow:"top"},regularPath:"/60.%E6%9E%B6%E6%9E%84/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%A7%94%E6%89%98%E6%A8%A1%E5%BC%8F.html",relativePath:"60.架构/10.设计模式/10.设计模式之委托模式.md",key:"v-ec7b20e8",path:"/pages/92d4ab/",headers:[{level:3,title:"基本概念",slug:"基本概念",normalizedTitle:"基本概念",charIndex:118},{level:3,title:"解释",slug:"解释",normalizedTitle:"解释",charIndex:301},{level:3,title:"委派模式的作用：",slug:"委派模式的作用",normalizedTitle:"委派模式的作用：",charIndex:482},{level:3,title:"和策略模式的对比",slug:"和策略模式的对比",normalizedTitle:"和策略模式的对比",charIndex:515},{level:3,title:"经验",slug:"经验",normalizedTitle:"经验",charIndex:622},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:660},{level:3,title:"扩展",slug:"扩展",normalizedTitle:"扩展",charIndex:740}],lastUpdated:"12/4/2022, 6:55:46 PM",lastUpdatedTimestamp:1670151346e3,headersStr:"基本概念 解释 委派模式的作用： 和策略模式的对比 经验 总结 扩展",content:"> 首先我们需要知道，在实际开发中，往往并不会完全固定的遵循某一类设计模式，而是参照多种设计模式，基本原则，进行特定的设计。所以我们在实际中可以同时在代码中看见多种设计模式的影子，并且很难完全区分使用的是某一种特定的设计模式。\n\n\n# 基本概念\n\n委托： Delegete ，也叫作委派。\n\n委托模式是软件设计模式中的一项基本技巧。在委托模式中，有两个对象参与处理同一个请求，接受请求的对象将请求委托给另一个对象来处理。\n\n委派模式不属于23种gof,委派模式就是将一个类下达的任务交给另外一个类去做，双亲委派机制其实就是这个道理，当某个类加载器需要执行某个类时先交给父类看父类是否能够执行。\n\n\n# 解释\n\n委托模式是一项基本技巧，许多其他的模式，如 状态模式、策略模式、访问者模式 本质上是在更特殊的场合采用了委托模式。\n\n委托模式使得我们可以用聚合来替代继承，它还使我们可以模拟mixin。\n\n委托是指在一个类中包含了其它的类或者接口，通过这借助多态，实现一些动态行为，委托只能算是设计模式中的一部分，代理中有用到委托的，在策略模式中也可能会用到。\n\n\n# 委派模式的作用：\n\n基本作用就是负责任务的调用和分配任务\n\n\n# 和策略模式的对比\n\n策略模式在实际业务开发中，采用的实际上就是有委派的影子，可以看做一种特定场景的实现。\n\n委派模式不仅仅在策略模式中体现，双类加载亲委派机制这种也是委派。\n\n代理模式也是一种委派的实现。\n\n\n# 经验\n\n一般Delegate，Dispatcher结尾的都是委派。\n\n\n# 总结\n\n总而言之：只要不是自己去做实际的事情，是加上都包含了委托/委派的基本思想。 这也是为什么委派模式十分常见但却不在23种设计模式之中的一个原因。\n\n\n# 扩展\n\n许多编程语言，编程框架都有专门的Delegete，可以进一步对比学习了解\n\n比如C#,Kotlin",normalizedContent:"> 首先我们需要知道，在实际开发中，往往并不会完全固定的遵循某一类设计模式，而是参照多种设计模式，基本原则，进行特定的设计。所以我们在实际中可以同时在代码中看见多种设计模式的影子，并且很难完全区分使用的是某一种特定的设计模式。\n\n\n# 基本概念\n\n委托： delegete ，也叫作委派。\n\n委托模式是软件设计模式中的一项基本技巧。在委托模式中，有两个对象参与处理同一个请求，接受请求的对象将请求委托给另一个对象来处理。\n\n委派模式不属于23种gof,委派模式就是将一个类下达的任务交给另外一个类去做，双亲委派机制其实就是这个道理，当某个类加载器需要执行某个类时先交给父类看父类是否能够执行。\n\n\n# 解释\n\n委托模式是一项基本技巧，许多其他的模式，如 状态模式、策略模式、访问者模式 本质上是在更特殊的场合采用了委托模式。\n\n委托模式使得我们可以用聚合来替代继承，它还使我们可以模拟mixin。\n\n委托是指在一个类中包含了其它的类或者接口，通过这借助多态，实现一些动态行为，委托只能算是设计模式中的一部分，代理中有用到委托的，在策略模式中也可能会用到。\n\n\n# 委派模式的作用：\n\n基本作用就是负责任务的调用和分配任务\n\n\n# 和策略模式的对比\n\n策略模式在实际业务开发中，采用的实际上就是有委派的影子，可以看做一种特定场景的实现。\n\n委派模式不仅仅在策略模式中体现，双类加载亲委派机制这种也是委派。\n\n代理模式也是一种委派的实现。\n\n\n# 经验\n\n一般delegate，dispatcher结尾的都是委派。\n\n\n# 总结\n\n总而言之：只要不是自己去做实际的事情，是加上都包含了委托/委派的基本思想。 这也是为什么委派模式十分常见但却不在23种设计模式之中的一个原因。\n\n\n# 扩展\n\n许多编程语言，编程框架都有专门的delegete，可以进一步对比学习了解\n\n比如c#,kotlin",charsets:{cjk:!0}},{title:"设计模式之责任链模式",frontmatter:{title:"设计模式之责任链模式",date:"2020-12-29T17:30:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式","行为模式"],publish:!0,permalink:"/pages/3b8b65/",readingShow:"top"},regularPath:"/60.%E6%9E%B6%E6%9E%84/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F.html",relativePath:"60.架构/10.设计模式/20.设计模式之责任链模式.md",key:"v-d3678320",path:"/pages/3b8b65/",headers:[{level:3,title:"概念",slug:"概念",normalizedTitle:"概念",charIndex:2},{level:3,title:"优点",slug:"优点",normalizedTitle:"优点",charIndex:156},{level:3,title:"缺点",slug:"缺点",normalizedTitle:"缺点",charIndex:486},{level:3,title:"使用场景",slug:"使用场景",normalizedTitle:"使用场景",charIndex:670},{level:3,title:"模式的扩展",slug:"模式的扩展",normalizedTitle:"模式的扩展",charIndex:786},{level:3,title:"典型案例",slug:"典型案例",normalizedTitle:"典型案例",charIndex:955},{level:3,title:"代码实现",slug:"代码实现",normalizedTitle:"代码实现",charIndex:1037}],lastUpdated:"12/4/2022, 6:55:46 PM",lastUpdatedTimestamp:1670151346e3,headersStr:"概念 优点 缺点 使用场景 模式的扩展 典型案例 代码实现",content:'# 概念\n\n责任链模式（Chain of Responsibility Pattern） 为了避免请求发送者与多个请求处理者耦合在一起，于是将所有请求的处理者通过前一对象记住其下一个对象的引用而连成一条链；当有请求发生时，可将请求沿着这条链传递，直到有对象处理它为止。\n\n责任链模式是一种对象 行为模式\n\n\n# 优点\n\n 1. 降低了对象之间的耦合度。该模式使得一个对象无须知道到底是哪一个对象处理其请求以及链的结构，发送者和接收者也无须拥有对方的明确信息。\n 2. 增强了系统的可扩展性。可以根据需要增加新的请求处理类，满足开闭原则。\n 3. 增强了给对象指派职责的灵活性。当工作流程发生变化，可以动态地改变链内的成员或者调动它们的次序，也可动态地新增或者删除责任。\n 4. 责任链简化了对象之间的连接。每个对象只需保持一个指向其后继者的引用，不需保持其他所有处理者的引用，这避免了使用众多的 if 或者 if···else 语句。\n 5. 责任分担。每个类只需要处理自己该处理的工作，不该处理的传递给下一个对象完成，明确各类的责任范围，符合类的单一职责原则。\n\n\n# 缺点\n\n 1. 不能保证每个请求一定被处理。由于一个请求没有明确的接收者，所以不能保证它一定会被处理，该请求可能一直传到链的末端都得不到处理。\n 2. 对比较长的职责链，请求的处理可能涉及多个处理对象，系统性能将受到一定影响。\n 3. 职责链建立的合理性要靠客户端来保证，增加了客户端的复杂性，可能会由于职责链的错误设置而导致系统出错，如可能会造成循环调用。\n\n\n# 使用场景\n\n 1. 多个对象可以处理一个请求，但具体由哪个对象处理该请求在运行时自动确定。\n 2. 可动态指定一组对象处理请求，或添加新的处理者。\n 3. 需要在不明确指定请求处理者的情况下，向多个处理者中的一个提交请求。\n\n\n# 模式的扩展\n\n * 纯的职责链模式：一个请求必须被某一个处理者对象所接收，且一个具体处理者对某个请求的处理只能采用以下两种行为之一：自己处理（承担责任）；把责任推给下家处理。\n * 不纯的职责链模式：允许出现某一个具体处理者对象在承担了请求的一部分责任后又将剩余的责任传给下家的情况，且一个请求可以最终不被任何接收端对象所接收。\n\n\n# 典型案例\n\n 1. MyBatis的拦截器\n 2. Spring Mvc的拦截器\n 3. Dubbo的拦截器\n 4. 最经典的Servlet拦截器、过滤器\n\n\n# 代码实现\n\nabstract class MsgProcessor {\n\n    var next: MsgProcessor? = null\n\n    /**\n     * @param content 收到的文本消息内容\n     * @return 要回复的内容，没有匹配到返回null\n     */\n    abstract fun process(content: String, msgContext: MsgContext): String?\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n@Component\nclass ShareTableMsgProcessor : MsgProcessor() {\n\n    private val regex = Regex("[0-9]+-[0-9]-[a-z0-9]{16}")\n\n    override fun process(content: String, msgContext: MsgContext): String? {\n        if(content.matches(regex)){\n            return "匹配到口令码xxx"\n        }\n        return next?.process(content, msgContext)\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n@Component\nclass FindStudentProcessor : MsgProcessor() {\n\n    @Resource\n    lateinit var studentService: IStudentService\n\n    override fun process(content: String, msgContext: MsgContext): String? {\n        if(DynamicConfigurations.isOpenFindStudent()){\n            //在这里匹配 查分班 关键词回复 查地图等\n            val studentList = studentService.getStudentByName(content)\n            if (studentList.isNotEmpty()){\n                return "匹配到学生信息：xxx"\n            }\n        }\n        return next?.process(content, msgContext)\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n使用：\n\n@Component\nclass MsgProcessorManager(\n    private final val shareTableMsgProcessor: ShareTableMsgProcessor,\n    private final val keywordsMsgProcessor: KeywordsMsgProcessor,\n    private final val findStudentProcessor: FindStudentProcessor\n) {\n\n    init {\n        shareTableMsgProcessor.next = keywordsMsgProcessor\n        keywordsMsgProcessor.next = findStudentProcessor\n    }\n\n    fun process(content: String, msgContext: MsgContext): String?{\n        return shareTableMsgProcessor.process(content, msgContext)\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n::: TIPS 提示 通过构造函数注入bean可以不用加@Autowire注解 :::',normalizedContent:'# 概念\n\n责任链模式（chain of responsibility pattern） 为了避免请求发送者与多个请求处理者耦合在一起，于是将所有请求的处理者通过前一对象记住其下一个对象的引用而连成一条链；当有请求发生时，可将请求沿着这条链传递，直到有对象处理它为止。\n\n责任链模式是一种对象 行为模式\n\n\n# 优点\n\n 1. 降低了对象之间的耦合度。该模式使得一个对象无须知道到底是哪一个对象处理其请求以及链的结构，发送者和接收者也无须拥有对方的明确信息。\n 2. 增强了系统的可扩展性。可以根据需要增加新的请求处理类，满足开闭原则。\n 3. 增强了给对象指派职责的灵活性。当工作流程发生变化，可以动态地改变链内的成员或者调动它们的次序，也可动态地新增或者删除责任。\n 4. 责任链简化了对象之间的连接。每个对象只需保持一个指向其后继者的引用，不需保持其他所有处理者的引用，这避免了使用众多的 if 或者 if···else 语句。\n 5. 责任分担。每个类只需要处理自己该处理的工作，不该处理的传递给下一个对象完成，明确各类的责任范围，符合类的单一职责原则。\n\n\n# 缺点\n\n 1. 不能保证每个请求一定被处理。由于一个请求没有明确的接收者，所以不能保证它一定会被处理，该请求可能一直传到链的末端都得不到处理。\n 2. 对比较长的职责链，请求的处理可能涉及多个处理对象，系统性能将受到一定影响。\n 3. 职责链建立的合理性要靠客户端来保证，增加了客户端的复杂性，可能会由于职责链的错误设置而导致系统出错，如可能会造成循环调用。\n\n\n# 使用场景\n\n 1. 多个对象可以处理一个请求，但具体由哪个对象处理该请求在运行时自动确定。\n 2. 可动态指定一组对象处理请求，或添加新的处理者。\n 3. 需要在不明确指定请求处理者的情况下，向多个处理者中的一个提交请求。\n\n\n# 模式的扩展\n\n * 纯的职责链模式：一个请求必须被某一个处理者对象所接收，且一个具体处理者对某个请求的处理只能采用以下两种行为之一：自己处理（承担责任）；把责任推给下家处理。\n * 不纯的职责链模式：允许出现某一个具体处理者对象在承担了请求的一部分责任后又将剩余的责任传给下家的情况，且一个请求可以最终不被任何接收端对象所接收。\n\n\n# 典型案例\n\n 1. mybatis的拦截器\n 2. spring mvc的拦截器\n 3. dubbo的拦截器\n 4. 最经典的servlet拦截器、过滤器\n\n\n# 代码实现\n\nabstract class msgprocessor {\n\n    var next: msgprocessor? = null\n\n    /**\n     * @param content 收到的文本消息内容\n     * @return 要回复的内容，没有匹配到返回null\n     */\n    abstract fun process(content: string, msgcontext: msgcontext): string?\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n@component\nclass sharetablemsgprocessor : msgprocessor() {\n\n    private val regex = regex("[0-9]+-[0-9]-[a-z0-9]{16}")\n\n    override fun process(content: string, msgcontext: msgcontext): string? {\n        if(content.matches(regex)){\n            return "匹配到口令码xxx"\n        }\n        return next?.process(content, msgcontext)\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n@component\nclass findstudentprocessor : msgprocessor() {\n\n    @resource\n    lateinit var studentservice: istudentservice\n\n    override fun process(content: string, msgcontext: msgcontext): string? {\n        if(dynamicconfigurations.isopenfindstudent()){\n            //在这里匹配 查分班 关键词回复 查地图等\n            val studentlist = studentservice.getstudentbyname(content)\n            if (studentlist.isnotempty()){\n                return "匹配到学生信息：xxx"\n            }\n        }\n        return next?.process(content, msgcontext)\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n使用：\n\n@component\nclass msgprocessormanager(\n    private final val sharetablemsgprocessor: sharetablemsgprocessor,\n    private final val keywordsmsgprocessor: keywordsmsgprocessor,\n    private final val findstudentprocessor: findstudentprocessor\n) {\n\n    init {\n        sharetablemsgprocessor.next = keywordsmsgprocessor\n        keywordsmsgprocessor.next = findstudentprocessor\n    }\n\n    fun process(content: string, msgcontext: msgcontext): string?{\n        return sharetablemsgprocessor.process(content, msgcontext)\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n::: tips 提示 通过构造函数注入bean可以不用加@autowire注解 :::',charsets:{cjk:!0}},{title:"设计模式之组合模式",frontmatter:{title:"设计模式之组合模式",date:"2020-12-11T13:30:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/38bd6b/",readingShow:"top"},regularPath:"/60.%E6%9E%B6%E6%9E%84/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html",relativePath:"60.架构/10.设计模式/30.设计模式之组合模式.md",key:"v-3f839182",path:"/pages/38bd6b/",headers:[{level:3,title:"引言",slug:"引言",normalizedTitle:"引言",charIndex:2},{level:3,title:"组合模式的概念",slug:"组合模式的概念",normalizedTitle:"组合模式的概念",charIndex:478},{level:3,title:"问题",slug:"问题",normalizedTitle:"问题",charIndex:66},{level:3,title:"组成元素：",slug:"组成元素",normalizedTitle:"组成元素：",charIndex:797},{level:3,title:"优点：",slug:"优点",normalizedTitle:"优点：",charIndex:998},{level:3,title:"缺点：",slug:"缺点",normalizedTitle:"缺点：",charIndex:1143},{level:3,title:"组合模式的使用场景：",slug:"组合模式的使用场景",normalizedTitle:"组合模式的使用场景：",charIndex:1269},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:1845}],lastUpdated:"12/4/2022, 6:55:46 PM",lastUpdatedTimestamp:1670151346e3,headersStr:"引言 组合模式的概念 问题 组成元素： 优点： 缺点： 组合模式的使用场景： 参考文献",content:"# 引言\n\n组合模式最大的特点就是运用的“树”这一数据结构。\n\n在面向对象开发中，许多情况我们可以直接运用“树”的数据结构就可以解决问题。\n\n举个例子： 在设计评论时，每篇文章可以有许多评论，每条评论可以有子评论，子评论也可以有子评论。 可以发现这就是一种树形结构。\n\n我们看一下代码实现：\n\npublic class Comment{\n    private Integer id;\n    private Integer articleId;\n    private String content;\n    private String author;\n    private List<Comment> reply;\n    // \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这就是“树”这一数据结构的简单运用。 当然，更特殊的“树”就是二叉树，可以定义为：\n\npublic class TreeNode{\n    public TreeNode left;\n    public TreeNode right;\n}\n\n\n1\n2\n3\n4\n\n\n\n# 组合模式的概念\n\n亦称： 对象树、­Object Tree、­Composite\n\n组合模式（Composite Pattern），又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。组合模式依据树形结构来组合对象，用来表示部分以及整体层次。这种类型的设计模式属于结构型模式，它创建了对象组的树形结构。\n\n简单来说就是：\n\n组合模式是一种结构型设计模式，你可以使用它将对象组合成树状结构，并且能像使用独立对象一样使用它们。\n\n\n# 问题\n\n在实际的开发过程中，我们遇到的场景往往并不是简单的树形结构，而是具有类似于树形结构。\n\n在这种情况向下，树结构中的每个节点，并不是同一个类型，这些显然无法直接将他们很好的组织起来。\n\n\n# 组成元素：\n\n 1. 抽象构件角色(Composite)：是组合中对象声明接口，实现所有类共有接口的默认行为。\n 2. 树叶构件角色(Leaf)：上述提到的单个对象，叶节点没有子节点。\n 3. 树枝构件角色(Composite)：定义有子部件的组合部件行为，存储子部件，在Component接口中实现与子部件有关的操作。\n 4. 客户端(Client)：使用 Component 部件的对象。\n\n\n# 优点：\n\n 1. 高层模块(客户端)调用简单。组合模式使得客户端代码可以一致地处理单个对象和组合对象，无须关心自己处理的是单个对象，还是组合对象，这简化了客户端代码；\n 2. 节点自由增加,更容易在组合体内加入新的对象，客户端不会因为加入了新的对象而更改源代码，满足“开闭原则”；\n\n\n# 缺点：\n\n 1. 在使用组合模式时，其叶子和树枝的声明都是实现类，而不是接口，违反了依赖倒置原则\n 2. 设计较复杂，客户端需要花更多时间理清类之间的层次关系；\n 3. 不容易限制容器中的构件；\n 4. 不容易用继承的方法来增加构件的新功能；\n\n\n# 组合模式的使用场景：\n\n 1. 你想表示对象的部分-整体层次结构，如树形菜单，文件、文件夹的管理。文件系统由文件和目录组成，每个文件里装有内容，而每个目录的内容可以有文件和目录，目录就相当于是由单个对象或组合对象组合而成，如果你想要描述的是这样的数据结构，那么你就可以使用组合模式。\n 2. 算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作符也可以是操作数、操作符和另一个操作数。\n 3. 在 JAVA AWT 和 SWING 中，对于 Button 和 Checkbox 是树叶，Container 是树枝。\n 4. 你希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。\n 5. 在现实生活中，存在很多“部分-整体”的关系。汽车与轮胎、发动机的关系。医院与科室、医生的关系。学校与学院、学生、老师的关系\n\n * 如果你需要实现树状对象结构， 可以使用组合模式。\n * 组合模式为你提供了两种共享公共接口的基本元素类型： 简单叶节点和复杂容器。 容器中可以包含叶节点和其他容器。 这使得你可以构建树状嵌套递归对象结构。\n * 如果你希望客户端代码以相同方式处理简单和复杂元素， 可以使用该模式。\n * 组合模式中定义的所有元素共用同一个接口。 在这一接口的帮助下， 客户端不必在意其所使用的对象的具体类。\n\n\n# 参考文献\n\n组合模式（Composite Pattern）总结",normalizedContent:"# 引言\n\n组合模式最大的特点就是运用的“树”这一数据结构。\n\n在面向对象开发中，许多情况我们可以直接运用“树”的数据结构就可以解决问题。\n\n举个例子： 在设计评论时，每篇文章可以有许多评论，每条评论可以有子评论，子评论也可以有子评论。 可以发现这就是一种树形结构。\n\n我们看一下代码实现：\n\npublic class comment{\n    private integer id;\n    private integer articleid;\n    private string content;\n    private string author;\n    private list<comment> reply;\n    // \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n这就是“树”这一数据结构的简单运用。 当然，更特殊的“树”就是二叉树，可以定义为：\n\npublic class treenode{\n    public treenode left;\n    public treenode right;\n}\n\n\n1\n2\n3\n4\n\n\n\n# 组合模式的概念\n\n亦称： 对象树、­object tree、­composite\n\n组合模式（composite pattern），又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。组合模式依据树形结构来组合对象，用来表示部分以及整体层次。这种类型的设计模式属于结构型模式，它创建了对象组的树形结构。\n\n简单来说就是：\n\n组合模式是一种结构型设计模式，你可以使用它将对象组合成树状结构，并且能像使用独立对象一样使用它们。\n\n\n# 问题\n\n在实际的开发过程中，我们遇到的场景往往并不是简单的树形结构，而是具有类似于树形结构。\n\n在这种情况向下，树结构中的每个节点，并不是同一个类型，这些显然无法直接将他们很好的组织起来。\n\n\n# 组成元素：\n\n 1. 抽象构件角色(composite)：是组合中对象声明接口，实现所有类共有接口的默认行为。\n 2. 树叶构件角色(leaf)：上述提到的单个对象，叶节点没有子节点。\n 3. 树枝构件角色(composite)：定义有子部件的组合部件行为，存储子部件，在component接口中实现与子部件有关的操作。\n 4. 客户端(client)：使用 component 部件的对象。\n\n\n# 优点：\n\n 1. 高层模块(客户端)调用简单。组合模式使得客户端代码可以一致地处理单个对象和组合对象，无须关心自己处理的是单个对象，还是组合对象，这简化了客户端代码；\n 2. 节点自由增加,更容易在组合体内加入新的对象，客户端不会因为加入了新的对象而更改源代码，满足“开闭原则”；\n\n\n# 缺点：\n\n 1. 在使用组合模式时，其叶子和树枝的声明都是实现类，而不是接口，违反了依赖倒置原则\n 2. 设计较复杂，客户端需要花更多时间理清类之间的层次关系；\n 3. 不容易限制容器中的构件；\n 4. 不容易用继承的方法来增加构件的新功能；\n\n\n# 组合模式的使用场景：\n\n 1. 你想表示对象的部分-整体层次结构，如树形菜单，文件、文件夹的管理。文件系统由文件和目录组成，每个文件里装有内容，而每个目录的内容可以有文件和目录，目录就相当于是由单个对象或组合对象组合而成，如果你想要描述的是这样的数据结构，那么你就可以使用组合模式。\n 2. 算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作符也可以是操作数、操作符和另一个操作数。\n 3. 在 java awt 和 swing 中，对于 button 和 checkbox 是树叶，container 是树枝。\n 4. 你希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。\n 5. 在现实生活中，存在很多“部分-整体”的关系。汽车与轮胎、发动机的关系。医院与科室、医生的关系。学校与学院、学生、老师的关系\n\n * 如果你需要实现树状对象结构， 可以使用组合模式。\n * 组合模式为你提供了两种共享公共接口的基本元素类型： 简单叶节点和复杂容器。 容器中可以包含叶节点和其他容器。 这使得你可以构建树状嵌套递归对象结构。\n * 如果你希望客户端代码以相同方式处理简单和复杂元素， 可以使用该模式。\n * 组合模式中定义的所有元素共用同一个接口。 在这一接口的帮助下， 客户端不必在意其所使用的对象的具体类。\n\n\n# 参考文献\n\n组合模式（composite pattern）总结",charsets:{cjk:!0}},{title:"策略模式、代理模式、委托模式的区别于联系",frontmatter:{title:"策略模式、代理模式、委托模式的区别于联系",date:"2020-12-10T11:15:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/3935f5/",readingShow:"top"},regularPath:"/60.%E6%9E%B6%E6%9E%84/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/40.%E7%AD%96%E7%95%A5%E4%BB%A3%E7%90%86%E5%A7%94%E6%89%98%E7%9A%84%E5%8C%BA%E5%88%AB.html",relativePath:"60.架构/10.设计模式/40.策略代理委托的区别.md",key:"v-31ef5fea",path:"/pages/3935f5/",headers:[{level:3,title:"策略模式：",slug:"策略模式",normalizedTitle:"策略模式：",charIndex:32},{level:3,title:"委派模式：",slug:"委派模式",normalizedTitle:"委派模式：",charIndex:235},{level:3,title:"代理模式：",slug:"代理模式",normalizedTitle:"代理模式：",charIndex:358},{level:3,title:"代理和策略的区别",slug:"代理和策略的区别",normalizedTitle:"代理和策略的区别",charIndex:545},{level:3,title:"代理和委派",slug:"代理和委派",normalizedTitle:"代理和委派",charIndex:674},{level:3,title:"委派和策略：",slug:"委派和策略",normalizedTitle:"委派和策略：",charIndex:912},{level:3,title:"经验",slug:"经验",normalizedTitle:"经验",charIndex:981},{level:3,title:"案例",slug:"案例",normalizedTitle:"案例",charIndex:1118},{level:3,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:1305}],lastUpdated:"12/4/2022, 6:55:46 PM",lastUpdatedTimestamp:1670151346e3,headersStr:"策略模式： 委派模式： 代理模式： 代理和策略的区别 代理和委派 委派和策略： 经验 案例 参考文献",content:"> 很多设计模式其实在一些优秀的框架中都是混合使用的。\n\n\n# 策略模式：\n\n策略模式是对算法的封装。定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换\n\n优点： 1、算法可以自由切换。 2、避免使用多重条件判断。 3、扩展性良好。\n\n缺点： 1、策略类会增多。 2、所有策略类都需要对外暴露。\n\n场景：\n\nSpring中Aop代理策略createAopProxy(下文讲解) Spring的对象实例化策略InstantiationStrategy\n\n\n# 委派模式：\n\n委派模式的基本作用就是负责任务的调度和分配任务\n\n场景：\n\n类加载的双亲委派机制 SpringMVC的DispatcherServlet Spring中bean解析的BeanDefinitionParserDelegate\n\n\n# 代理模式：\n\n代理模式为其他对象提供一种代理以控制对这个对象的访问\n\n优点： 1、职责清晰。 2、高扩展性。 3、智能化。\n\n缺点： 1、由于在客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢。 2、实现代理模式需要额外的工作，有些代理模式的实现非常复杂。\n\n场景：\n\nJDK动态代理和CGLIB动态代理 Spring的AOP\n\n\n# 代理和策略的区别\n\n代理是完全和具体实现有相同的接口。在一次处理中的一系列调用，往往都是使用的同一个实现类处理。\n\n策略实际上只是只是对某个接口，下面有多重实现方案，他们的功能是一样的，只不过算法不同，每次调用都会根据情况来选择一冲合适的策略执行。\n\n\n# 代理和委派\n\n * 委派模式的基本目的就是负责任务的调用和分配，和代理模式很像，可以看成是一个特殊的静态代理的全权代理\n * 但是代理模式注重过程()，委派模式注重结果(老板不关注任务是怎么完成的，只管把任务交给经理让他去委派调度)。\n * 代理模式中，代理类的被代理对象始终不变，而委派模式中委派类的被委托对象可以随时切换。\n * 委派模式中委派类相当于全权代理，而不是像代理模式是部分代理\n * 也有人理解为代理模式中二者是上下级关系，而委派模式中二者是平级关系\n\n\n# 委派和策略：\n\n委派往往是分派任务，这些任务往往并不是实现同一个功能 策略模式是选择策略，这些策略实现同一个功能，只是算法不同。\n\n\n# 经验\n\n要真正理解并掌握他们，完全抽象理解是不可行的。 我们需要阅读大量的代码，学习别人的设计实现，然后进行总结，才可以更加理解。 同样的，要掌握好，还需要我们亲自设计，编写大量的代码，不断的重构、优化，设计，总结，就能对此有更加深刻的理解，甚至是自己的一套经验。\n\n\n# 案例\n\nSpring中的DispatcherServlet DispatcherServlet，前端控制器收到请求后自己不进行处理，而是委托给其他的解析器进行处理，作为统一访问点，进行全局的流程控制。这体现了委派模式。\n\n而在DispatcherServlet中，又通过策略模式对流程每一部分选择具体的实现。\n\n所以在实际开发中，往往都是多种设计模式的混合体运用。\n\n\n# 参考文献\n\n【设计模式】——代理、策略、委派模式还在傻傻分不清？",normalizedContent:"> 很多设计模式其实在一些优秀的框架中都是混合使用的。\n\n\n# 策略模式：\n\n策略模式是对算法的封装。定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换\n\n优点： 1、算法可以自由切换。 2、避免使用多重条件判断。 3、扩展性良好。\n\n缺点： 1、策略类会增多。 2、所有策略类都需要对外暴露。\n\n场景：\n\nspring中aop代理策略createaopproxy(下文讲解) spring的对象实例化策略instantiationstrategy\n\n\n# 委派模式：\n\n委派模式的基本作用就是负责任务的调度和分配任务\n\n场景：\n\n类加载的双亲委派机制 springmvc的dispatcherservlet spring中bean解析的beandefinitionparserdelegate\n\n\n# 代理模式：\n\n代理模式为其他对象提供一种代理以控制对这个对象的访问\n\n优点： 1、职责清晰。 2、高扩展性。 3、智能化。\n\n缺点： 1、由于在客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢。 2、实现代理模式需要额外的工作，有些代理模式的实现非常复杂。\n\n场景：\n\njdk动态代理和cglib动态代理 spring的aop\n\n\n# 代理和策略的区别\n\n代理是完全和具体实现有相同的接口。在一次处理中的一系列调用，往往都是使用的同一个实现类处理。\n\n策略实际上只是只是对某个接口，下面有多重实现方案，他们的功能是一样的，只不过算法不同，每次调用都会根据情况来选择一冲合适的策略执行。\n\n\n# 代理和委派\n\n * 委派模式的基本目的就是负责任务的调用和分配，和代理模式很像，可以看成是一个特殊的静态代理的全权代理\n * 但是代理模式注重过程()，委派模式注重结果(老板不关注任务是怎么完成的，只管把任务交给经理让他去委派调度)。\n * 代理模式中，代理类的被代理对象始终不变，而委派模式中委派类的被委托对象可以随时切换。\n * 委派模式中委派类相当于全权代理，而不是像代理模式是部分代理\n * 也有人理解为代理模式中二者是上下级关系，而委派模式中二者是平级关系\n\n\n# 委派和策略：\n\n委派往往是分派任务，这些任务往往并不是实现同一个功能 策略模式是选择策略，这些策略实现同一个功能，只是算法不同。\n\n\n# 经验\n\n要真正理解并掌握他们，完全抽象理解是不可行的。 我们需要阅读大量的代码，学习别人的设计实现，然后进行总结，才可以更加理解。 同样的，要掌握好，还需要我们亲自设计，编写大量的代码，不断的重构、优化，设计，总结，就能对此有更加深刻的理解，甚至是自己的一套经验。\n\n\n# 案例\n\nspring中的dispatcherservlet dispatcherservlet，前端控制器收到请求后自己不进行处理，而是委托给其他的解析器进行处理，作为统一访问点，进行全局的流程控制。这体现了委派模式。\n\n而在dispatcherservlet中，又通过策略模式对流程每一部分选择具体的实现。\n\n所以在实际开发中，往往都是多种设计模式的混合体运用。\n\n\n# 参考文献\n\n【设计模式】——代理、策略、委派模式还在傻傻分不清？",charsets:{cjk:!0}},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1,readingShow:"top"},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-4b8e2ad1",path:"/archives/",lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1,readingShow:"top"},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-c72cbf9e",path:"/categories/",lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1,readingShow:"top"},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-0f04c75e",path:"/tags/",lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Home",frontmatter:{home:!0,heroText:"拾光小镇",tagline:"星空不问赶路人，时光不负有心人。",pageClass:"vdoing-index-class",bannerBg:"http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/349706sample.jpg",postList:"detailed",readingShow:"top"},regularPath:"/",relativePath:"index.md",key:"v-8b098c2c",path:"/",lastUpdated:"12/2/2022, 12:38:29 AM",lastUpdatedTimestamp:1669912709e3,headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Golang工程结构最佳实践",frontmatter:{title:"Golang工程结构最佳实践",date:"2022-12-04T13:21:20.000Z",permalink:"/pages/99581a/",categories:["后端"],tags:["Golang"],readingShow:"top"},regularPath:"/%E3%80%8AGolang%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E4%B8%93%E6%A0%8F%E3%80%8B/01.%E5%9F%BA%E7%A1%80%E7%AF%87/05.Golang%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html",relativePath:"《Golang微服务最佳实践专栏》/01.基础篇/05.Golang工程结构最佳实践.md",key:"v-75bb3f8e",path:"/pages/99581a/",headers:[{level:3,title:"一、前言",slug:"一、前言",normalizedTitle:"一、前言",charIndex:2},{level:3,title:"待办事项",slug:"待办事项",normalizedTitle:"待办事项",charIndex:299},{level:3,title:"二、Golang的包管理",slug:"二、golang的包管理",normalizedTitle:"二、golang的包管理",charIndex:406},{level:4,title:"2.2 如何发布公共组件",slug:"_2-2-如何发布公共组件",normalizedTitle:"2.2 如何发布公共组件",charIndex:695},{level:4,title:"2.3 Go如何使用私有仓库模块",slug:"_2-3-go如何使用私有仓库模块",normalizedTitle:"2.3 go如何使用私有仓库模块",charIndex:711},{level:3,title:"三、主流工程结构",slug:"三、主流工程结构",normalizedTitle:"三、主流工程结构",charIndex:732},{level:4,title:"3.1 K8S",slug:"_3-1-k8s",normalizedTitle:"3.1 k8s",charIndex:847},{level:4,title:"3.2 Docker",slug:"_3-2-docker",normalizedTitle:"3.2 docker",charIndex:858},{level:4,title:"3.3 Prometheus",slug:"_3-3-prometheus",normalizedTitle:"3.3 prometheus",charIndex:872},{level:4,title:"3.4 Grafana Loki",slug:"_3-4-grafana-loki",normalizedTitle:"3.4 grafana loki",charIndex:890},{level:3,title:"四、主流工程结构总结",slug:"四、主流工程结构总结",normalizedTitle:"四、主流工程结构总结",charIndex:1151},{level:4,title:"4.1 /cmd",slug:"_4-1-cmd",normalizedTitle:"4.1 /cmd",charIndex:1165},{level:4,title:"4.2 /internal",slug:"_4-2-internal",normalizedTitle:"4.2 /internal",charIndex:1384},{level:4,title:"4.3 /pkg",slug:"_4-3-pkg",normalizedTitle:"4.3 /pkg",charIndex:1430},{level:3,title:"五、最佳实践",slug:"五、最佳实践",normalizedTitle:"五、最佳实践",charIndex:1547},{level:4,title:"5.1 /cmd",slug:"_5-1-cmd",normalizedTitle:"5.1 /cmd",charIndex:1789},{level:4,title:"5.2 /internal",slug:"_5-2-internal",normalizedTitle:"5.2 /internal",charIndex:2008},{level:4,title:"5.3 /pkg",slug:"_5-3-pkg",normalizedTitle:"5.3 /pkg",charIndex:2054},{level:3,title:"六、模板工具",slug:"六、模板工具",normalizedTitle:"六、模板工具",charIndex:2171},{level:3,title:"七、参考资料",slug:"七、参考资料",normalizedTitle:"七、参考资料",charIndex:2534}],excerpt:'<h3 id="一、前言"><a class="header-anchor" href="#一、前言">#</a> 一、前言</h3>\n<p>学习一门语言的语法，我们往往只需要在一个文件中进行编码，甚至连IDE都不需要，一个简单的编辑器，然后通过命令行即可进行编译、运行。</p>\n<p>而我们一旦需要使用到数据库访问或者提供web服务的时候，单个文件就变得力不从心了。</p>\n',lastUpdated:"12/7/2022, 8:45:46 PM",lastUpdatedTimestamp:1670417146e3,headersStr:"一、前言 待办事项 二、Golang的包管理 2.2 如何发布公共组件 2.3 Go如何使用私有仓库模块 三、主流工程结构 3.1 K8S 3.2 Docker 3.3 Prometheus 3.4 Grafana Loki 四、主流工程结构总结 4.1 /cmd 4.2 /internal 4.3 /pkg 五、最佳实践 5.1 /cmd 5.2 /internal 5.3 /pkg 六、模板工具 七、参考资料",content:"# 一、前言\n\n学习一门语言的语法，我们往往只需要在一个文件中进行编码，甚至连IDE都不需要，一个简单的编辑器，然后通过命令行即可进行编译、运行。\n\n而我们一旦需要使用到数据库访问或者提供web服务的时候，单个文件就变得力不从心了。\n\n就说数据库访问，就涉及到解析数据库协议，远程通信，甚至为了提高性能，还会用到池化技术，这些能力显然是通用的，在开开源仓库中，早已有人造好了相关的轮子，我们只需要复用其代码即可。\n\n对于复用代码，我们能想到的最简单粗暴的方式可能便是将其源代码拷贝到我们的工程当中。\n\n当然，这对于成熟的软件工程领域，这显然是非常原始的做法，现在主流的方法是采用包管理工具\n\n\n# 待办事项\n\n 1. [ ] 区分kit工程与可运行工程\n 2. [ ] 解析主流go架构\n 3. [ ] 解析对比主流建模\n\n架构： https://github.com/go-kratos/kratos\n\n\n# 二、Golang的包管理\n\n在Java中，我们使用的包管理工具可以是Maven，也可以是Gradle；在JavaScript中，一般使用npm、yarn后者pnpm；对于Rust，则使用的是Cargo。\n\n而我们今天的主角Golang，也有自己的包管理工具。\n\n相比于其他语言的包管理工具，Golang的包管理工具则是被开发者们诟病已久。Golang官方曾多次对其包管理工具进行过改进和优化，下面我们来看看Go的包管理工具演进历史。\n\nGo 1.14 Go Modules 终于可以投入生产了\n\nGo从1.14版本开始，就是用了最新的Go Modules作为包管理工具。\n\n# 2.2 如何发布公共组件\n\n# 2.3 Go如何使用私有仓库模块\n\n\n# 三、主流工程结构\n\nhttps://github.com/golang-standards/project-layout\n\n整洁架构： https://github.com/evrone/go-clean-template\n\n# 3.1 K8S\n\n# 3.2 Docker\n\n# 3.3 Prometheus\n\n# 3.4 Grafana Loki\n\nhttps://github.com/etcd-io/etcd\n\nhttps://github.com/gogs/gogs\n\nhttps://github.com/grafana/grafana\n\nhttps://github.com/gin-gonic/gin\n\nhttps://github.com/kubernetes/kubernetes\n\nhttps://github.com/minio/minio\n\nhttps://github.com/pingcap/tidb\n\n\n# 四、主流工程结构总结\n\n# 4.1 /cmd\n\n这里放的是打包引用程序的入口，也就是包含main函数文件的地方。\n\n熟悉Java的同学，可以把它当做@SpringBoot注解使用的地方，也就是整个应用的入口。\n\n与Java不同，Java如果需要提供不同的main入口，那么是需要创建不同的模块，在pom中指定启动类。 Go只需要把main函数放在不同文件下，并且package名字为main，那么就可以通过打包命令选择不同的入口文件而打包为不同的应用程序了。\n\n# 4.2 /internal\n\n这个目录比较特别，这个是Go编译器内置的一个特殊目录，\n\n# 4.3 /pkg\n\n注意，这个目录是具有一定争议的，虽然有很多流行的项目都使用这种目录结构，但是也有不少社区并不喜欢。\n\n这个目录其实是社区相对internal建立的，目的是显示的表名这个目录下的代码，可以被第三方安全的引入\n\n\n# 五、最佳实践\n\n * root\n   * app\n     * moduleName\n       * modle\n       * api\n       * service\n   * boot\n   * middleware\n     * logger\n   * cmd\n   * main.go\n   * go.sum\n\n解析\n\n 1. cmd: 该目录一般用于放命令行相关工具\n 2. middleware，这儿一般存放公共模块，并且可以被其他项目所使用的部分\n 3. \n\n# 5.1 /cmd\n\n这里放的是打包引用程序的入口，也就是包含main函数文件的地方。\n\n熟悉Java的同学，可以把它当做@SpringBoot注解使用的地方，也就是整个应用的入口。\n\n与Java不同，Java如果需要提供不同的main入口，那么是需要创建不同的模块，在pom中指定启动类。 Go只需要把main函数放在不同文件下，并且package名字为main，那么就可以通过打包命令选择不同的入口文件而打包为不同的应用程序了。\n\n# 5.2 /internal\n\n这个目录比较特别，这个是Go编译器内置的一个特殊目录，\n\n# 5.3 /pkg\n\n注意，这个目录是具有一定争议的，虽然有很多流行的项目都使用这种目录结构，但是也有不少社区并不喜欢。\n\n这个目录其实是社区相对internal建立的，目的是显示的表名这个目录下的代码，可以被第三方安全的引入\n\n\n# 六、模板工具\n\n对于Java开发者来说，想必对SpringBoot的工程模板非常熟悉，在官方网页，只需要输入项目名称，选择基础依赖，便可以自动声场好一个项目基本框架。\n\n对于使用npm的JavaScript开发者来说，在模板工程方面做得则更加出色，只需要简单一行命令即可通过模板工程来初始化项目。 其出色的地方更在于，开发者们为npm提供大量的工程模板，有TypeScript有Vue的，有ELementUI的，有TailweendCss的，还有Electron的，自己搭建模板工程也是非常之方便。\n\n在Go中，目前还没有比较好的模板工具和生态，刚好趁着学习Go的机会，我们借此就自己造一个简单的模板工具，其目标就是只需要一条命令行即可初始化一个简单工程。\n\n后面我们有复杂的需求，还可以实现比如创建DDD工程模板。\n\n\n# 七、参考资料\n\n 1. Go如何使用私有仓库模块\n 2. Go语言(golang)包设计哲学/原则与项目结构组织最佳实践\n 3. 5 分钟搞懂 Monorepo\n 4. Go 工程化标准实践\n 5. 程序员进阶指南：文档团队Golang最佳实践和CR案例集分享",normalizedContent:"# 一、前言\n\n学习一门语言的语法，我们往往只需要在一个文件中进行编码，甚至连ide都不需要，一个简单的编辑器，然后通过命令行即可进行编译、运行。\n\n而我们一旦需要使用到数据库访问或者提供web服务的时候，单个文件就变得力不从心了。\n\n就说数据库访问，就涉及到解析数据库协议，远程通信，甚至为了提高性能，还会用到池化技术，这些能力显然是通用的，在开开源仓库中，早已有人造好了相关的轮子，我们只需要复用其代码即可。\n\n对于复用代码，我们能想到的最简单粗暴的方式可能便是将其源代码拷贝到我们的工程当中。\n\n当然，这对于成熟的软件工程领域，这显然是非常原始的做法，现在主流的方法是采用包管理工具\n\n\n# 待办事项\n\n 1. [ ] 区分kit工程与可运行工程\n 2. [ ] 解析主流go架构\n 3. [ ] 解析对比主流建模\n\n架构： https://github.com/go-kratos/kratos\n\n\n# 二、golang的包管理\n\n在java中，我们使用的包管理工具可以是maven，也可以是gradle；在javascript中，一般使用npm、yarn后者pnpm；对于rust，则使用的是cargo。\n\n而我们今天的主角golang，也有自己的包管理工具。\n\n相比于其他语言的包管理工具，golang的包管理工具则是被开发者们诟病已久。golang官方曾多次对其包管理工具进行过改进和优化，下面我们来看看go的包管理工具演进历史。\n\ngo 1.14 go modules 终于可以投入生产了\n\ngo从1.14版本开始，就是用了最新的go modules作为包管理工具。\n\n# 2.2 如何发布公共组件\n\n# 2.3 go如何使用私有仓库模块\n\n\n# 三、主流工程结构\n\nhttps://github.com/golang-standards/project-layout\n\n整洁架构： https://github.com/evrone/go-clean-template\n\n# 3.1 k8s\n\n# 3.2 docker\n\n# 3.3 prometheus\n\n# 3.4 grafana loki\n\nhttps://github.com/etcd-io/etcd\n\nhttps://github.com/gogs/gogs\n\nhttps://github.com/grafana/grafana\n\nhttps://github.com/gin-gonic/gin\n\nhttps://github.com/kubernetes/kubernetes\n\nhttps://github.com/minio/minio\n\nhttps://github.com/pingcap/tidb\n\n\n# 四、主流工程结构总结\n\n# 4.1 /cmd\n\n这里放的是打包引用程序的入口，也就是包含main函数文件的地方。\n\n熟悉java的同学，可以把它当做@springboot注解使用的地方，也就是整个应用的入口。\n\n与java不同，java如果需要提供不同的main入口，那么是需要创建不同的模块，在pom中指定启动类。 go只需要把main函数放在不同文件下，并且package名字为main，那么就可以通过打包命令选择不同的入口文件而打包为不同的应用程序了。\n\n# 4.2 /internal\n\n这个目录比较特别，这个是go编译器内置的一个特殊目录，\n\n# 4.3 /pkg\n\n注意，这个目录是具有一定争议的，虽然有很多流行的项目都使用这种目录结构，但是也有不少社区并不喜欢。\n\n这个目录其实是社区相对internal建立的，目的是显示的表名这个目录下的代码，可以被第三方安全的引入\n\n\n# 五、最佳实践\n\n * root\n   * app\n     * modulename\n       * modle\n       * api\n       * service\n   * boot\n   * middleware\n     * logger\n   * cmd\n   * main.go\n   * go.sum\n\n解析\n\n 1. cmd: 该目录一般用于放命令行相关工具\n 2. middleware，这儿一般存放公共模块，并且可以被其他项目所使用的部分\n 3. \n\n# 5.1 /cmd\n\n这里放的是打包引用程序的入口，也就是包含main函数文件的地方。\n\n熟悉java的同学，可以把它当做@springboot注解使用的地方，也就是整个应用的入口。\n\n与java不同，java如果需要提供不同的main入口，那么是需要创建不同的模块，在pom中指定启动类。 go只需要把main函数放在不同文件下，并且package名字为main，那么就可以通过打包命令选择不同的入口文件而打包为不同的应用程序了。\n\n# 5.2 /internal\n\n这个目录比较特别，这个是go编译器内置的一个特殊目录，\n\n# 5.3 /pkg\n\n注意，这个目录是具有一定争议的，虽然有很多流行的项目都使用这种目录结构，但是也有不少社区并不喜欢。\n\n这个目录其实是社区相对internal建立的，目的是显示的表名这个目录下的代码，可以被第三方安全的引入\n\n\n# 六、模板工具\n\n对于java开发者来说，想必对springboot的工程模板非常熟悉，在官方网页，只需要输入项目名称，选择基础依赖，便可以自动声场好一个项目基本框架。\n\n对于使用npm的javascript开发者来说，在模板工程方面做得则更加出色，只需要简单一行命令即可通过模板工程来初始化项目。 其出色的地方更在于，开发者们为npm提供大量的工程模板，有typescript有vue的，有elementui的，有tailweendcss的，还有electron的，自己搭建模板工程也是非常之方便。\n\n在go中，目前还没有比较好的模板工具和生态，刚好趁着学习go的机会，我们借此就自己造一个简单的模板工具，其目标就是只需要一条命令行即可初始化一个简单工程。\n\n后面我们有复杂的需求，还可以实现比如创建ddd工程模板。\n\n\n# 七、参考资料\n\n 1. go如何使用私有仓库模块\n 2. go语言(golang)包设计哲学/原则与项目结构组织最佳实践\n 3. 5 分钟搞懂 monorepo\n 4. go 工程化标准实践\n 5. 程序员进阶指南：文档团队golang最佳实践和cr案例集分享",charsets:{cjk:!0}},{title:"Golang容器化部署最佳实践",frontmatter:{title:"Golang容器化部署最佳实践",date:"2022-11-30T21:35:34.000Z",permalink:"/pages/a24792/",sticky:1,titleTag:"优质",tags:["Golang","微服务","后端"],categories:["后端"],readingShow:"top"},regularPath:"/%E3%80%8AGolang%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E4%B8%93%E6%A0%8F%E3%80%8B/01.%E5%9F%BA%E7%A1%80%E7%AF%87/10.Golang%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.html",relativePath:"《Golang微服务最佳实践专栏》/01.基础篇/10.Golang容器化部署最佳实践.md",key:"v-31eda728",path:"/pages/a24792/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一、最佳实践",slug:"一、最佳实践",normalizedTitle:"一、最佳实践",charIndex:188},{level:2,title:"二、讲解",slug:"二、讲解",normalizedTitle:"二、讲解",charIndex:1244},{level:2,title:"2.1 添加时区",slug:"_2-1-添加时区",normalizedTitle:"2.1 添加时区",charIndex:1309},{level:2,title:"2.2 服务名",slug:"_2-2-服务名",normalizedTitle:"2.2 服务名",charIndex:1728},{level:2,title:"2.3 运行权限",slug:"_2-3-运行权限",normalizedTitle:"2.3 运行权限",charIndex:1859},{level:3,title:"2.3.1 Linux /etc/passwd",slug:"_2-3-1-linux-etc-passwd",normalizedTitle:"2.3.1 linux /etc/passwd",charIndex:1994},{level:2,title:"2.4 Docker分阶段构建",slug:"_2-4-docker分阶段构建",normalizedTitle:"2.4 docker分阶段构建",charIndex:2169},{level:2,title:"三、Docker基础镜像（base image）：scratch 、busybox、alpine",slug:"三、docker基础镜像-base-image-scratch-、busybox、alpine",normalizedTitle:"三、docker基础镜像（base image）：scratch 、busybox、alpine",charIndex:2435},{level:3,title:"scratch：空镜像，基础镜像",slug:"scratch-空镜像-基础镜像",normalizedTitle:"scratch：空镜像，基础镜像",charIndex:2488},{level:3,title:"busybox",slug:"busybox",normalizedTitle:"busybox",charIndex:2469},{level:3,title:"Alpine",slug:"alpine",normalizedTitle:"alpine",charIndex:271},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:3301}],excerpt:'<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>相较于Java而言，Golang本身可以直接打包为各个平台的二进制文件，并不需要安装环境，所以直接采用虚拟机的方式部署也是非常方便的。</p>\n<p>但是如今云原生时代，部署并不仅仅是跑起来这么简单，还包括动态扩缩容、状态监控、资源管控等能力，容器化基本上是最佳选择。</p>\n<p>本文主要总结了Golang打包Docker的最佳实践，拥有非常小的体积，并且可以用于生产环境。</p>\n',lastUpdated:"12/5/2022, 9:00:10 PM",lastUpdatedTimestamp:167024521e4,headersStr:"前言 一、最佳实践 二、讲解 2.1 添加时区 2.2 服务名 2.3 运行权限 2.3.1 Linux /etc/passwd 2.4 Docker分阶段构建 三、Docker基础镜像（base image）：scratch 、busybox、alpine scratch：空镜像，基础镜像 busybox Alpine 参考资料",content:'# 前言\n\n相较于Java而言，Golang本身可以直接打包为各个平台的二进制文件，并不需要安装环境，所以直接采用虚拟机的方式部署也是非常方便的。\n\n但是如今云原生时代，部署并不仅仅是跑起来这么简单，还包括动态扩缩容、状态监控、资源管控等能力，容器化基本上是最佳选择。\n\n本文主要总结了Golang打包Docker的最佳实践，拥有非常小的体积，并且可以用于生产环境。\n\n\n# 一、最佳实践\n\n话不多说，先上可用域生产环境使用的Dockerfile文件：\n\nFROM golang:1.19-alpine3.16 AS builder\n\n#更新Alpine的软件源为国内源，提高下载速度\nRUN echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.16/main/" > /etc/apk/repositories\nRUN apk add --no-cache tzdata\n \nWORKDIR /build\nRUN adduser -u 10001 -D app-runner\n \nENV GOPROXY https://goproxy.cn\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n \nCOPY . .\nRUN CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -a -o httpserver .\n \nFROM alpine:3.16 AS final\n \nWORKDIR /app\nCOPY --from=builder /build/httpserver /app/\n#COPY --from=builder /build/config /app/config\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n\n# 设置时区\nENV TZ Asia/Shanghai\nCOPY --from=builder /usr/share/zoneinfo/${TZ} /usr/share/zoneinfo/${TZ}\n\nUSER app-runner\nENTRYPOINT ["/app/httpserver"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n提示\n\n我们实际上使用的是分阶段打包镜像\n\n其实我们也可以先打包为Linux二进制文件，Dockerfile只把二进制文件COPY到镜像，但是这种方式打包环境和容器基础镜像提供的环境有所不同，而且还要首先安装golang环境，所以并不推荐采用这种方式。\n\n\n# 二、讲解\n\n 1. Golang运行只需要Linux内核\n 2. Docker分阶段构建\n 3. 使用最小镜像alpha\n\n\n# 2.1 添加时区\n\naplha镜像默认时区是UTC，如果我们需要改为中国的时区，需要安装tzdata\n\n为了加速流水线下载速度，我添加镜像加速地址：\n\nRUN echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.16/main/" > /etc/apk/repositories\n\n\n1\n\n\n然后执行alpha镜像的安装命令：\n\nRUN apk add --no-cache tzdata\n\n\n1\n\n\n由于我们是在第一阶段的构建镜像中安装的时区，我们在第二阶段构建最终竟像时，需要把安装好的时区拷贝过去：\n\nENV TZ Asia/Shanghai\nCOPY --from=builder /usr/share/zoneinfo/${TZ} /usr/share/zoneinfo/${TZ}\n\n\n1\n2\n\n\n我们通过ENV TZ的方式声明我们使用上海的时区，也就是北京时间了\n\n\n# 2.2 服务名\n\n我们上面打包golang的二进制名字为httpserver，并且启动命令也是httpserver，我们实际上可以通过哦ARG命令把该名字传入进来\n\n使用具体的具备业务含义的名字，这样的好处是查询对应的进程信息时，方便区分不同的服务容器\n\n\n# 2.3 运行权限\n\nUSER app-runner\nENTRYPOINT ["/app/httpserver"]\n\n\n1\n2\n\n\n在启动应用之前，先使用命令USER指定用户，这样后面运行的指令将只用指定用户的权限，可以增强安全性，避免应用漏洞导致服务器诶侵入。\n\n\n# 2.3.1 Linux /etc/passwd\n\n在Linux系统中，/etc/passwd是一个文件，存储基本用户信息，其中一行就代表一条用户信息。\n\n我们通过cat /etc/passwd，可以查看到如下信息：\n\n其中每一行被:分割为7个部分，对应的含义为：\n\n> 用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell\n\n\n# 2.4 Docker分阶段构建\n\nDocker 17.05版本以后，官方就提供了一个新的特性：Multi-stage builds（多阶段构建）。\n\n利用多阶段构建，我们可以在一个 Dockerfile 中使用多个 FROM 语句。每个 FROM 指令都可以使用不同的基础镜像，并表示开始一个新的构建阶段。\n\n我们可以很方便的将一个阶段的文件复制到另外一个阶段，在最终的镜像只需要保留必要的内容。\n\n通过这种方式，我们可以很容易实现Docker镜像的瘦身，最终镜像只保留运行时需要的内容，而构建期间用到的内容都可以不保存。\n\n\n# 三、Docker基础镜像（base image）：scratch 、busybox、alpine\n\n\n# scratch：空镜像，基础镜像\n\nscratch是Docker中预留的最小的基础镜像。bosybox 、 Go语言编译打包的镜像都可以基于scratch来构建。\n\nscratch镜像不在镜像仓库中，但是可以在Dockerfile引用。\n\n如：\n\nFROM scratch\n\n\n1\n\n\n\n# busybox\n\nbusybox镜像只有几兆。\n\nBusyBox是一个集成了一百多个最常用Linux命令和工具（如cat、echo、grep、mount、telnet等）的精简工具箱，它只有几MB的大小，很方便进行各种快速验证，被誉为“Linux系统的瑞士军刀”。BusyBox可运行于多款POSIX环境的操作系统中，如Linux（包括Android）、Hurd、FreeBSD等。\n\n\n# Alpine\n\nAlpine镜像比busybox大一点，也只有几兆。\n\nAlpine操作系统是一个面向安全的轻型Linux发行版。它不同于通常的Linux发行版，Alpine采用了musl libc和BusyBox以减小系统的体积和运行时资源消耗，但功能上比BusyBox又完善得多。在保持瘦身的同时，Alpine还提供了自己的包管理工具apk，可以通过https://pkgs.alpinelinux.org/packages查询包信息，也可以通过apk命令直接查询和安装各种软件。\n\nAlpine Docker镜像也继承了Alpine Linux发行版的这些优势。相比于其他Docker镜像，它的容量非常小，仅仅只有5MB左右（Ubuntu系列镜像接近200MB），且拥有非常友好的包管理机制。官方镜像来自docker-alpine项目。\n\n目前Docker官方已开始推荐使用Alpine替代之前的Ubuntu作为基础镜像环境。这样会带来多个好处，包括镜像下载速度加快，镜像安全性提高，主机之间的切换更方便，占用更少磁盘空间等。\n\n\n# 参考资料\n\n 1. Golang Dockerfile的最佳实践\n 2. Golang - 如何使用Docker部署Go Web应用\n 3. 如何使用docker 部署 golang 编译环境最小版\n 4. docker基础镜像（base image）：scratch 、 busybox 、 alpine\n 5. Linux /etc/passwd\n 6. Linux中/etc/passwd文件详细解析\n 7. Docker多阶段构建',normalizedContent:'# 前言\n\n相较于java而言，golang本身可以直接打包为各个平台的二进制文件，并不需要安装环境，所以直接采用虚拟机的方式部署也是非常方便的。\n\n但是如今云原生时代，部署并不仅仅是跑起来这么简单，还包括动态扩缩容、状态监控、资源管控等能力，容器化基本上是最佳选择。\n\n本文主要总结了golang打包docker的最佳实践，拥有非常小的体积，并且可以用于生产环境。\n\n\n# 一、最佳实践\n\n话不多说，先上可用域生产环境使用的dockerfile文件：\n\nfrom golang:1.19-alpine3.16 as builder\n\n#更新alpine的软件源为国内源，提高下载速度\nrun echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.16/main/" > /etc/apk/repositories\nrun apk add --no-cache tzdata\n \nworkdir /build\nrun adduser -u 10001 -d app-runner\n \nenv goproxy https://goproxy.cn\ncopy go.mod .\ncopy go.sum .\nrun go mod download\n \ncopy . .\nrun cgo_enabled=0 goarch=amd64 goos=linux go build -a -o httpserver .\n \nfrom alpine:3.16 as final\n \nworkdir /app\ncopy --from=builder /build/httpserver /app/\n#copy --from=builder /build/config /app/config\ncopy --from=builder /etc/passwd /etc/passwd\ncopy --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n\n# 设置时区\nenv tz asia/shanghai\ncopy --from=builder /usr/share/zoneinfo/${tz} /usr/share/zoneinfo/${tz}\n\nuser app-runner\nentrypoint ["/app/httpserver"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n提示\n\n我们实际上使用的是分阶段打包镜像\n\n其实我们也可以先打包为linux二进制文件，dockerfile只把二进制文件copy到镜像，但是这种方式打包环境和容器基础镜像提供的环境有所不同，而且还要首先安装golang环境，所以并不推荐采用这种方式。\n\n\n# 二、讲解\n\n 1. golang运行只需要linux内核\n 2. docker分阶段构建\n 3. 使用最小镜像alpha\n\n\n# 2.1 添加时区\n\naplha镜像默认时区是utc，如果我们需要改为中国的时区，需要安装tzdata\n\n为了加速流水线下载速度，我添加镜像加速地址：\n\nrun echo "https://mirror.tuna.tsinghua.edu.cn/alpine/v3.16/main/" > /etc/apk/repositories\n\n\n1\n\n\n然后执行alpha镜像的安装命令：\n\nrun apk add --no-cache tzdata\n\n\n1\n\n\n由于我们是在第一阶段的构建镜像中安装的时区，我们在第二阶段构建最终竟像时，需要把安装好的时区拷贝过去：\n\nenv tz asia/shanghai\ncopy --from=builder /usr/share/zoneinfo/${tz} /usr/share/zoneinfo/${tz}\n\n\n1\n2\n\n\n我们通过env tz的方式声明我们使用上海的时区，也就是北京时间了\n\n\n# 2.2 服务名\n\n我们上面打包golang的二进制名字为httpserver，并且启动命令也是httpserver，我们实际上可以通过哦arg命令把该名字传入进来\n\n使用具体的具备业务含义的名字，这样的好处是查询对应的进程信息时，方便区分不同的服务容器\n\n\n# 2.3 运行权限\n\nuser app-runner\nentrypoint ["/app/httpserver"]\n\n\n1\n2\n\n\n在启动应用之前，先使用命令user指定用户，这样后面运行的指令将只用指定用户的权限，可以增强安全性，避免应用漏洞导致服务器诶侵入。\n\n\n# 2.3.1 linux /etc/passwd\n\n在linux系统中，/etc/passwd是一个文件，存储基本用户信息，其中一行就代表一条用户信息。\n\n我们通过cat /etc/passwd，可以查看到如下信息：\n\n其中每一行被:分割为7个部分，对应的含义为：\n\n> 用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录shell\n\n\n# 2.4 docker分阶段构建\n\ndocker 17.05版本以后，官方就提供了一个新的特性：multi-stage builds（多阶段构建）。\n\n利用多阶段构建，我们可以在一个 dockerfile 中使用多个 from 语句。每个 from 指令都可以使用不同的基础镜像，并表示开始一个新的构建阶段。\n\n我们可以很方便的将一个阶段的文件复制到另外一个阶段，在最终的镜像只需要保留必要的内容。\n\n通过这种方式，我们可以很容易实现docker镜像的瘦身，最终镜像只保留运行时需要的内容，而构建期间用到的内容都可以不保存。\n\n\n# 三、docker基础镜像（base image）：scratch 、busybox、alpine\n\n\n# scratch：空镜像，基础镜像\n\nscratch是docker中预留的最小的基础镜像。bosybox 、 go语言编译打包的镜像都可以基于scratch来构建。\n\nscratch镜像不在镜像仓库中，但是可以在dockerfile引用。\n\n如：\n\nfrom scratch\n\n\n1\n\n\n\n# busybox\n\nbusybox镜像只有几兆。\n\nbusybox是一个集成了一百多个最常用linux命令和工具（如cat、echo、grep、mount、telnet等）的精简工具箱，它只有几mb的大小，很方便进行各种快速验证，被誉为“linux系统的瑞士军刀”。busybox可运行于多款posix环境的操作系统中，如linux（包括android）、hurd、freebsd等。\n\n\n# alpine\n\nalpine镜像比busybox大一点，也只有几兆。\n\nalpine操作系统是一个面向安全的轻型linux发行版。它不同于通常的linux发行版，alpine采用了musl libc和busybox以减小系统的体积和运行时资源消耗，但功能上比busybox又完善得多。在保持瘦身的同时，alpine还提供了自己的包管理工具apk，可以通过https://pkgs.alpinelinux.org/packages查询包信息，也可以通过apk命令直接查询和安装各种软件。\n\nalpine docker镜像也继承了alpine linux发行版的这些优势。相比于其他docker镜像，它的容量非常小，仅仅只有5mb左右（ubuntu系列镜像接近200mb），且拥有非常友好的包管理机制。官方镜像来自docker-alpine项目。\n\n目前docker官方已开始推荐使用alpine替代之前的ubuntu作为基础镜像环境。这样会带来多个好处，包括镜像下载速度加快，镜像安全性提高，主机之间的切换更方便，占用更少磁盘空间等。\n\n\n# 参考资料\n\n 1. golang dockerfile的最佳实践\n 2. golang - 如何使用docker部署go web应用\n 3. 如何使用docker 部署 golang 编译环境最小版\n 4. docker基础镜像（base image）：scratch 、 busybox 、 alpine\n 5. linux /etc/passwd\n 6. linux中/etc/passwd文件详细解析\n 7. docker多阶段构建',charsets:{cjk:!0}},{title:"Spring事务管理源码分析",frontmatter:{title:"Spring事务管理源码分析",date:"2022-12-06T09:23:18.000Z",permalink:"/pages/13de43/",categories:["《Spring&SpringBoot源码专题》","源码分析"],tags:[null],readingShow:"top"},regularPath:"/%E3%80%8ASpring&SpringBoot%E6%BA%90%E7%A0%81%E4%B8%93%E9%A2%98%E3%80%8B/01.%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/10.Spring%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",relativePath:"《Spring&SpringBoot源码专题》/01.源码分析/10.Spring事务管理源码分析.md",key:"v-45a4b1a0",path:"/pages/13de43/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一、Spring事务包含哪些内容",slug:"一、spring事务包含哪些内容",normalizedTitle:"一、spring事务包含哪些内容",charIndex:121}],excerpt:'<h2 id="前言"><a class="header-anchor" href="#前言">#</a> 前言</h2>\n<p>了解Spring事务管理的底层实现对我们有什么帮助呢？</p>\n<p>我认为有以下帮助：</p>\n<ol>\n<li>学习Spring源码组织结构，增强自研框架研发的驾驭能力</li>\n<li>理解Spring事务管理的细节，有利于实现基于事务的二次扩展/集成</li>\n</ol>\n',lastUpdated:"12/7/2022, 8:45:46 PM",lastUpdatedTimestamp:1670417146e3,headersStr:"前言 一、Spring事务包含哪些内容",content:"# 前言\n\n了解Spring事务管理的底层实现对我们有什么帮助呢？\n\n我认为有以下帮助：\n\n 1. 学习Spring源码组织结构，增强自研框架研发的驾驭能力\n 2. 理解Spring事务管理的细节，有利于实现基于事务的二次扩展/集成\n\n\n# 一、Spring事务包含哪些内容\n\nSpring事务管理主要包含以下内容：\n\n 1. 对接数据源，事务是数据库连接的实际使用方\n 2. 实现事务的传递机制，包括开启独立事务、使用已存在事务、挂起事务等\n 3. 实现事务的AOP切换\n 4. 实现注解管理事务\n 5. 实现事务的回调",normalizedContent:"# 前言\n\n了解spring事务管理的底层实现对我们有什么帮助呢？\n\n我认为有以下帮助：\n\n 1. 学习spring源码组织结构，增强自研框架研发的驾驭能力\n 2. 理解spring事务管理的细节，有利于实现基于事务的二次扩展/集成\n\n\n# 一、spring事务包含哪些内容\n\nspring事务管理主要包含以下内容：\n\n 1. 对接数据源，事务是数据库连接的实际使用方\n 2. 实现事务的传递机制，包括开启独立事务、使用已存在事务、挂起事务等\n 3. 实现事务的aop切换\n 4. 实现注解管理事务\n 5. 实现事务的回调",charsets:{cjk:!0}}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"随笔",link:"/speak/"},{text:"语言",link:"/language/",items:[{text:"Golang",items:[{text:"基础",link:"/go/basic/"},{text:"第三方库",link:"/go/lib/"}]},{text:"前端",items:[{text:"Vue",link:"/front/vue/"},{text:"Flutter",link:"/front/flutter/"}]}]},{text:"工具",link:"/tools/",items:[{text:"开发工具",link:"/dev/"},{text:"系统工具",link:"/sys/"}]},{text:"项目",link:"/projects/",items:[{text:"Timer",link:"https://github.com/inooy/timer"}]},{text:"更多",link:"/more/",items:[{text:"时间线",link:"/archives/"},{text:"关于",link:"/about/"}]}],sidebarDepth:2,logo:"http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/8.svg",repo:"https://github.com/fanties",searchMaxSuggestions:10,lastUpdated:"更新时间",docsDir:"docs",editLinks:!1,editLinkText:"编辑此页",categoryText:"随笔",bodyBgImg:["http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/345764sample.jpg","http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/346957sample.jpg","http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/348043sample.jpg","http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/348511sample.jpg","http://picqq.oss-cn-shenzhen.aliyuncs.com//pic/md/348868sample.jpg"],bodyBgImgOpacity:.15,contentBgStyle:1,sidebar:{"/10.后端/":[{title:"理论",collapsable:!0,children:[["01.理论/01.幂等性.md","幂等性","/pages/cab623/"]]},{title:"Java",collapsable:!0,children:[["10.Java/01.Java动态代理之基础.md","Java动态代理基础","/pages/7ec854/"],["10.Java/02.Java线程池详解.md","Java线程池详解","/pages/c54936/"]]},{title:"方案",collapsable:!0,children:[["20.方案/01.JWT服务端主动失效方案.md","JWT服务端主动失效方案","/pages/2f4254/"]]},{title:"Spring专题",collapsable:!0,children:[["30.Spring专题/10.SpringBoot3.0快速上手.md","SpringBoot3.0快速上手","/pages/10dcf7/"]]}],catalogue:{},"/20.前端/":[{title:"Vue3",collapsable:!0,children:[["10.Vue3/01.使用pnpm搭建vite monorepo环境.md","使用pnpm搭建vite monorepo环境","/pages/1fe498/"]]},{title:"web",collapsable:!0,children:[]},{title:"flutter",collapsable:!0,children:[]}],"/30.数据/":[{title:"事务",collapsable:!0,children:[]},{title:"数据库",collapsable:!0,children:[]},{title:"数据访问",collapsable:!0,children:[]}],"/50.工具/":[["10.Idea插件开发快速入门.md","Idea插件开发快速入门","/pages/905694/","原创"]],"/60.架构/":[{title:"设计模式",collapsable:!0,children:[["10.设计模式/01.设计模式之门面模式-外观模式.md","设计模式之门面模式/外观模式","/pages/bcbecf/"],["10.设计模式/10.设计模式之委托模式.md","设计模式之委托模式","/pages/92d4ab/"],["10.设计模式/20.设计模式之责任链模式.md","设计模式之责任链模式","/pages/3b8b65/"],["10.设计模式/30.设计模式之组合模式.md","设计模式之组合模式","/pages/38bd6b/"],["10.设计模式/40.策略代理委托的区别.md","策略模式、代理模式、委托模式的区别于联系","/pages/3935f5/"]]}],"/《Golang微服务最佳实践专栏》/":[{title:"基础篇",collapsable:!0,children:[["01.基础篇/05.Golang工程结构最佳实践.md","Golang工程结构最佳实践","/pages/99581a/"],["01.基础篇/10.Golang容器化部署最佳实践.md","Golang容器化部署最佳实践","/pages/a24792/","优质"]]}],"/《Spring&SpringBoot源码专题》/":[{title:"源码分析",collapsable:!0,children:[["01.源码分析/10.Spring事务管理源码分析.md","Spring事务管理源码分析","/pages/13de43/"]]}]},blogInfo:{blogCreate:"2022-12-01",indexView:!0,pageView:!0,readingTime:!0,eachFileWords:[{name:"幂等性",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/10.后端/01.理论/01.幂等性.md",wordsCount:"3.2k",readingTime:"11.1m",title:"幂等性",date:"2020-12-05T00:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["理论"],publish:!0,permalink:"/pages/cab623/"},{name:"Java动态代理之基础",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/10.后端/10.Java/01.Java动态代理之基础.md",wordsCount:870,readingTime:"3.6m",title:"Java动态代理基础",date:"2020-12-10T15:40:00.000Z",sidebar:"auto",categories:["设计模式"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/7ec854/"},{name:"Java线程池详解",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/10.后端/10.Java/02.Java线程池详解.md",wordsCount:"8.7k",readingTime:"30.7m",title:"Java线程池详解",date:"2020-11-11T10:00:00.000Z",sidebar:"auto",sticky:2,categories:["后端"],tags:["线程池","Java"],publish:!0,permalink:"/pages/c54936/"},{name:"JWT服务端主动失效方案",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/10.后端/20.方案/01.JWT服务端主动失效方案.md",wordsCount:"1.7k",readingTime:"6m",title:"JWT服务端主动失效方案",date:"2020-09-11T00:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["后端"],publish:!0,permalink:"/pages/2f4254/"},{name:"使用pnpm搭建vite monorepo环境",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/10.Vue3/01.使用pnpm搭建vite monorepo环境.md",wordsCount:425,readingTime:"1.8m",title:"使用pnpm搭建vite monorepo环境",date:"2022-12-03T19:48:25.000Z",permalink:"/pages/1fe498/",categories:["前端","Vue3"],tags:[null]},{name:"Vue3中setup获取子组件",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/10.Vue3/Vue3中setup获取子组件.md",wordsCount:456,readingTime:"1.8m",title:"Vue3中setup()获取子组件实例",date:"2021-01-12T16:30:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue3"],publish:!0,permalink:"/pages/bbc17d/"},{name:"Vue3笔记之emits",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/10.Vue3/Vue3笔记之emits.md",wordsCount:658,readingTime:"2.6m",title:"Vue3笔记之emits",date:"2020-12-13T10:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/78f387/"},{name:"Vue3笔记之v-for与v-if优先级",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/10.Vue3/Vue3笔记之v-for与v-if优先级.md",wordsCount:349,readingTime:"1.5m",title:"Vue3笔记之v-for与v-if优先级",date:"2020-12-12T21:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/2ad2e9/"},{name:"Vue3笔记之事件",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/10.Vue3/Vue3笔记之事件.md",wordsCount:320,readingTime:"1.3m",title:"Vue3笔记之自定义指令",date:"2020-12-14T20:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/80877c/"},{name:"Vue3笔记之自定义指令",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/10.Vue3/Vue3笔记之自定义指令.md",wordsCount:766,readingTime:"3m",title:"Vue3笔记之自定义指令",date:"2020-12-13T10:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Vue3"],publish:!0,permalink:"/pages/04bd0a/"},{name:"Vue中使用Axios自动刷新Token",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/20.web/Vue中使用Axios自动刷新Token.md",wordsCount:956,readingTime:"3.9m",title:"Vue中使用Axios自动刷新Token",date:"2020-09-14T00:00:00.000Z",sidebar:"auto",categories:["前端"],tags:["Vue","Axios","Token"],publish:!0,permalink:"/pages/ac0f1b/"},{name:"yarn使用",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/20.web/yarn使用.md",wordsCount:"1.1k",readingTime:"4.4m",title:"yarn搭建与使用",date:"2021-01-28T11:29:00.000Z",sidebar:"auto",categories:["前端"],tags:["npm"],publish:!0,permalink:"/pages/eb33ad/"},{name:"Flutter Platform Channel数据类型对应关系",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/20.前端/30.flutter/Flutter Platform Channel数据类型对应关系.md",wordsCount:234,readingTime:"1.2m",title:"Flutter Platform channel 数据类型与Java对应关系",date:"2021-05-29T22:46:00.000Z",sidebar:"auto",categories:["前端"],tags:["Flutter","Dart"],publish:!0,permalink:"/pages/0e0bfe/"},{name:"事务专题一之事务理论",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/30.数据/10.事务/事务专题一之事务理论.md",wordsCount:"5.5k",readingTime:"19.2m",title:"事务专题一之事务理论",date:"2020-12-07T00:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["事务","分布式事务"],publish:!0,permalink:"/pages/12a234/"},{name:"事务专题之SpringBoot事务",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/30.数据/10.事务/事务专题之SpringBoot事务.md",wordsCount:"3.5k",readingTime:"14.3m",title:"事务专题一SpringBoot事务",date:"2021-02-06T20:50:00.000Z",sidebar:"auto",categories:["后端"],tags:["事务","分布式事务"],publish:!0,permalink:"/pages/8d33c7/"},{name:"SQLite解析",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/30.数据/20.数据库/SQLite解析.md",wordsCount:"1.8k",readingTime:"6.6m",title:"SQLite解析",date:"2022-05-29T19:26:18.000Z",permalink:"/pages/7b8498/",categories:["数据","数据库"],tags:["数据库"]},{name:"JDBC基础",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/30.数据/30.数据访问/JDBC基础.md",wordsCount:"2.3k",readingTime:"8.5m",title:"JDBC基础",date:"2020-12-09T11:00:00.000Z",sidebar:"auto",categories:["后端"],tags:["数据库","SQL"],publish:!0,permalink:"/pages/ede450/"},{name:"解决Docker启动java进程号1的问题",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/40.运维/解决Docker启动java进程号1的问题.md",wordsCount:595,readingTime:"2.5m",title:"解决Docker启动java进程号1的问题",date:"2022-11-29T19:35:36.000Z",permalink:"/pages/58ac01/",categories:["运维"],tags:[null]},{name:"Idea插件开发快速入门",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/50.工具/10.Idea插件开发快速入门.md",wordsCount:"1.5k",readingTime:"6m",title:"Idea插件开发快速入门",date:"2022-12-04T12:06:42.000Z",permalink:"/pages/905694/",sticky:1,titleTag:"原创",categories:["工具"],tags:["Idea插件"]},{name:"Idea无法启动Java",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/50.工具/Idea无法启动Java.md",wordsCount:140,readingTime:"1",title:"Idea启动Java报错Shorten command line",date:"2021-03-25T12:00:00.000Z",sidebar:"auto",categories:["工具"],tags:["Idea","工具"],publish:!0,permalink:"/pages/f59a3a/"},{name:"设计模式之门面模式-外观模式",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/60.架构/10.设计模式/01.设计模式之门面模式-外观模式.md",wordsCount:"1.1k",readingTime:"4m",title:"设计模式之门面模式/外观模式",date:"2020-12-10T09:00:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/bcbecf/"},{name:"设计模式之委托模式",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/60.架构/10.设计模式/10.设计模式之委托模式.md",wordsCount:662,readingTime:"2.2m",title:"设计模式之委托模式",date:"2020-12-10T10:30:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/92d4ab/"},{name:"设计模式之责任链模式",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/60.架构/10.设计模式/20.设计模式之责任链模式.md",wordsCount:"1.1k",readingTime:"4m",title:"设计模式之责任链模式",date:"2020-12-29T17:30:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式","行为模式"],publish:!0,permalink:"/pages/3b8b65/"},{name:"设计模式之组合模式",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/60.架构/10.设计模式/30.设计模式之组合模式.md",wordsCount:"1.2k",readingTime:"4.4m",title:"设计模式之组合模式",date:"2020-12-11T13:30:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/38bd6b/"},{name:"策略代理委托的区别",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/60.架构/10.设计模式/40.策略代理委托的区别.md",wordsCount:981,readingTime:"3.4m",title:"策略模式、代理模式、委托模式的区别于联系",date:"2020-12-10T11:15:00.000Z",sidebar:"auto",categories:["架构"],tags:["Java","设计模式"],publish:!0,permalink:"/pages/3935f5/"},{name:"Golang工程结构最佳实践",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/《Golang微服务最佳实践专栏》/01.基础篇/05.Golang工程结构最佳实践.md",wordsCount:"1.6k",readingTime:"5.9m",title:"Golang工程结构最佳实践",date:"2022-12-04T13:21:20.000Z",permalink:"/pages/99581a/",categories:["后端"],tags:["Golang"]},{name:"Golang容器化部署最佳实践",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/《Golang微服务最佳实践专栏》/01.基础篇/10.Golang容器化部署最佳实践.md",wordsCount:"1.7k",readingTime:"6.6m",title:"Golang容器化部署最佳实践",date:"2022-11-30T21:35:34.000Z",permalink:"/pages/a24792/",sticky:1,titleTag:"优质",tags:["Golang","微服务","后端"],categories:["后端"]},{name:"Spring事务管理源码分析",filePath:"/home/runner/work/fanties.github.io/fanties.github.io/docs/《Spring&SpringBoot源码专题》/01.源码分析/10.Spring事务管理源码分析.md",wordsCount:213,readingTime:"1",title:"Spring事务管理源码分析",date:"2022-12-06T09:23:18.000Z",permalink:"/pages/13de43/",categories:["《Spring&SpringBoot源码专题》","源码分析"],tags:[null]}],mdFileCountType:"archives",totalWords:"archives",moutedEvent:".tags-wrapper",indexIteration:2500,pageIteration:2500},indexImg:{navColor:1,switchNavColor:!1,bgTimeColor:!0,bgTimeColorArray:["transparent","rgba(255, 148, 48, .2)","rgba(0, 0, 0, .3)","rgba(0, 0, 0, .5)"],descFade:!0,desc:["星空不问赶路人，时光不负有心人","欲买桂花同载酒，终不似，少年游","请保持微笑的眼睛，才能看到更美的风景","答案交给时间寻觅，未来不负时光所期"],descFontSize:"1.4rem",descFadeInTime:1e3,descFadeOutTime:2e3,descNextTime:3e3,bubble:!0,bubblePosition:0,bubbleNum:20},author:{name:"知微坚果",link:"https://flyoo.cn/"},blogger:{avatar:"https://fanties.oss-cn-shenzhen.aliyuncs.com/avatar.jpeg",name:"知微坚果",slogan:"行者常至，为者常成"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:1244404139@qq.com"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/fanties"},{iconClass:"icon-erji",title:"听音乐",link:"https://music.163.com/#/playlist?id=503418750"}]},footer:{createYear:2022,copyrightInfo:'知微坚果 | 拾光小镇<br> <a href="http://beian.miit.gov.cn/" target="_blank">蜀ICP备17001150号-2</a>'}},locales:{"/":{lang:"zh-CN",title:"知微坚果的拾光小镇",description:"道虽迩，不行不至，事虽小，不为不成。",path:"/"}}};var cl=t(47),ul=(t(247),t(101)),dl=t(102),pl=t(11);var hl={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:r}}=n;return!(e||!1===t||!0===r)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(pl.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(pl.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(pl.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let r=0,i=n.length;r<i;r++){const{frontmatter:{categories:i,tags:a}}=n[r];"array"===Object(pl.n)(i)&&i.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[r]))}),"array"===Object(pl.n)(a)&&a.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[r]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Wt.component(ul.default),Wt.component(dl.default);function fl(n){return n.toString().padStart(2,"0")}t(250);Wt.component("Aplayer",()=>t.e(13).then(t.bind(null,367))),Wt.component("BlockToggle",()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,368))),Wt.component("Bubble",()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,369))),Wt.component("Card",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,370))),Wt.component("Fantasy",()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,371))),Wt.component("GlobalTip",()=>Promise.all([t.e(0),t.e(8)]).then(t.bind(null,372))),Wt.component("IndexBigImg",()=>Promise.all([t.e(0),t.e(9)]).then(t.bind(null,373))),Wt.component("LastReadingPopup",()=>Promise.resolve().then(t.bind(null,47))),Wt.component("SidebarReverse",()=>t.e(14).then(t.bind(null,374))),Wt.component("WebInfo",()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,365))),Wt.component("Badge",()=>Promise.all([t.e(0),t.e(10)]).then(t.bind(null,408))),Wt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,101))),Wt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,102)));t(251);var ml=(n,e,t)=>{if(!e.has(n))throw TypeError("Cannot "+t)},vl=(n,e,t)=>(ml(n,e,"read from private field"),t?t.call(n):e.get(n)),gl=(n,e,t)=>{if(e.has(n))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(n):e.set(n,t)},bl=(n,e,t,r)=>(ml(n,e,"write to private field"),r?r.call(n,t):e.set(n,t),t);var yl,wl;const kl=class{constructor(n,e,t,r=!0){gl(this,yl,void 0),gl(this,wl,void 0),bl(this,yl,{width:0,height:0});const{el:i,ctx:a}=kl.initCanvas(n);this.el=i,this.ctx=a,bl(this,wl,r),this.size={width:e||window.innerWidth,height:t||window.innerHeight}}get size(){return{...vl(this,yl)}}set size({width:n,height:e}){var t;if(vl(this,yl).width===n&&vl(this,yl).height===e)return;vl(this,yl).width=n,vl(this,yl).height=e;const r=null!=(t=vl(this,wl)?window.devicePixelRatio:1)?t:1;this.el.width=Math.round(vl(this,yl).width*r),this.el.height=Math.round(vl(this,yl).height*r),this.el.style.width=vl(this,yl).width+"px",this.el.style.height=vl(this,yl).height+"px",vl(this,wl)&&this.ctx.scale(r,r)}clear(){kl.clearCanvas(this.ctx,{...vl(this,yl)})}to(n){n.ctx.drawImage(this.el,0,0,vl(this,yl).width,vl(this,yl).height)}handleResize(n){this.size={width:window.innerWidth,height:window.innerHeight}}static setCanvasStyle(n,e,t){const r=n.style,{zIndex:i=0,opacity:a=1}=e;r.position="fixed",r.top="0",r.left="0",r.zIndex=i.toString(),r.width=(t?t.width:n.width).toString()+"px",r.height=(t?t.height:n.height).toString()+"px",1!==a&&(r.opacity=a.toString()),r.pointerEvents="none"}static initCanvas(n){n||(n=document.createElement("canvas"));const e=n.getContext("2d");return{el:n,ctx:e}}static createOffscreenCanvas(){return new kl}static clearCanvas(n,e){const{width:t,height:r}=e;n.clearRect(0,0,t,r)}};let xl=kl;var _l,Tl;yl=new WeakMap,wl=new WeakMap;class Sl{constructor(n,e,t,r=!0,i=!0,a={zIndex:0,opacity:1}){gl(this,_l,void 0),gl(this,Tl,void 0),bl(this,_l,new xl(n,e,t,r)),xl.setCanvasStyle(vl(this,_l).el,a,{width:e,height:t}),bl(this,Tl,i?new xl(void 0,e,t,r):null)}get size(){return vl(this,_l).size}draw(n){var e;const t=null!=(e=vl(this,Tl))?e:vl(this,_l);t.clear(),n(t.ctx,{...t.size})}render(){!vl(this,Tl)||(vl(this,_l).clear(),vl(this,Tl).to(vl(this,_l)))}handleResize(n){vl(this,_l).handleResize(n),vl(this,Tl)&&vl(this,Tl).handleResize(n)}clear(){vl(this,_l).clear(),vl(this,Tl)&&vl(this,Tl).clear()}}_l=new WeakMap,Tl=new WeakMap;var El=(n,e,t)=>{if(!e.has(n))throw TypeError("Cannot "+t)},Cl=(n,e,t)=>(El(n,e,"read from private field"),t?t.call(n):e.get(n));var Al;class jl{constructor(){((n,e,t)=>{if(e.has(n))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(n):e.set(n,t)})(this,Al,void 0),((n,e,t,r)=>{El(n,e,"write to private field"),r?r.call(n,t):e.set(n,t)})(this,Al,new Map)}add(n,e,t=window){Cl(this,Al).has(t)||Cl(this,Al).set(t,new Map);const r=Cl(this,Al).get(t);r.has(n)||r.set(n,new Set),r.get(n).add(e)}startAll(){for(const[n,e]of Cl(this,Al))for(const[t,r]of e)for(const e of r)n.addEventListener(t,e)}stopAll(){for(const[n,e]of Cl(this,Al))for(const[t,r]of e)for(const e of r)n.removeEventListener(t,e)}clear(){Cl(this,Al).clear()}}function Il(n){return!!n.touches}Al=new WeakMap;class Pl{static randomFloat(n,e){return Math.random()*(e-n)+n}static randomInt(n,e){return Math.floor(Pl.randomFloat(n,e))}static choice(n){const e=n.length;return n[Math.floor(e*Math.random())]}static color(n="0123456789ABCDEF"){return"#"+Pl.choice(n)+Pl.choice(n)+Pl.choice(n)+Pl.choice(n)+Pl.choice(n)+Pl.choice(n)}}var Ol,Bl,zl,Dl,Ml,$l=(n,e,t)=>{if(!e.has(n))throw TypeError("Cannot "+t)},Rl=(n,e,t)=>($l(n,e,"read from private field"),t?t.call(n):e.get(n)),Ll=(n,e,t)=>{if(e.has(n))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(n):e.set(n,t)},Nl=(n,e,t,r)=>($l(n,e,"write to private field"),r?r.call(n,t):e.set(n,t),t),Ul=(n,e,t)=>($l(n,e,"access private method"),t);class Fl{constructor(n,e,t,r,i){Ll(this,Ol,void 0),Ll(this,Bl,void 0),Ll(this,zl,void 0),this.size=t,this.color=r,Nl(this,zl,0),Nl(this,Ol,i),Nl(this,Bl,e),this.position={...n}}move(){this.position.x=Math.sin(Rl(this,Ol))*Rl(this,Bl)+this.position.x,this.position.y=Math.cos(Rl(this,Ol))*Rl(this,Bl)+this.position.y+.3*Rl(this,zl),((n,e,t,r)=>({set _(r){Nl(n,e,r,t)},get _(){return Rl(n,e,r)}}))(this,zl)._++}shouleRemove(n){return this.position.x<0||this.position.x>n.width||this.position.y>n.height}}Ol=new WeakMap,Bl=new WeakMap,zl=new WeakMap;Dl=new WeakMap;class Jl{static create(n,e,t,r,i,a){return new(this.shapeMap.get(n))(e,t,r,i,a)}}Jl.shapeMap=new Map([["star",class extends Fl{constructor(n,e,t,r,i){super(n,e,t,r,i),Ll(this,Dl,0)}draw(n,e){n.fillStyle=this.color,n.beginPath();const t=2*this.size,r=this.size;for(let e=0;e<5;e++)n.lineTo(Math.cos((18+72*e-Rl(this,Dl))/180*Math.PI)*t+this.position.x,-Math.sin((18+72*e-Rl(this,Dl))/180*Math.PI)*t+this.position.y),n.lineTo(Math.cos((54+72*e-Rl(this,Dl))/180*Math.PI)*r+this.position.x,-Math.sin((54+72*e-Rl(this,Dl))/180*Math.PI)*r+this.position.y);n.fill(),Nl(this,Dl,Rl(this,Dl)+5)}}],["circle",class extends Fl{draw(n,e){n.fillStyle=this.color,n.beginPath(),n.arc(this.position.x,this.position.y,this.size,0,2*Math.PI),n.fill()}}]]);class Vl{constructor(n,e,t,r){Ll(this,Ml,void 0),this.stopped=!1,Nl(this,Ml,new Set);for(let i=0;i<r;i++){const r=Jl.create(n,e,Pl.randomFloat(1,6),t,Pl.color("89ABCDEF"),Pl.randomFloat(Math.PI-1,Math.PI+1));Rl(this,Ml).add(r)}}move(n){for(const e of Rl(this,Ml))e.shouleRemove(n)?Rl(this,Ml).delete(e):e.move();0===Rl(this,Ml).size&&(this.stopped=!0)}draw(n,e){for(const t of Rl(this,Ml))t.draw(n,e)}}Ml=new WeakMap;var ql,Wl,Gl,Hl,Ql,Kl,Zl,Xl,Yl,nc,ec,tc,rc,ic,ac,oc,sc,lc,cc,uc;class dc{constructor({shape:n="star",size:e=2,numParticles:t=10}={},r={}){Ll(this,Yl),Ll(this,ec),Ll(this,rc),Ll(this,ac),Ll(this,sc),Ll(this,cc),Ll(this,ql,void 0),Ll(this,Wl,void 0),Ll(this,Gl,void 0),Ll(this,Hl,null),Ll(this,Ql,new Set),Ll(this,Kl,!1),Ll(this,Zl,void 0),Ll(this,Xl,new jl),Nl(this,ql,n),Nl(this,Wl,e),Nl(this,Gl,t),Nl(this,Zl,r),this.animate=this.animate.bind(this)}mount(n){Nl(this,Hl,new Sl(n,window.innerWidth,window.innerHeight,!0,!0,Rl(this,Zl))),Ul(this,Yl,nc).call(this),function(n,{leftColor:e="#fff",rightColor:t="#444",leftBgColor:r="#35495e",rightBgColor:i="#00ffc0"}={}){console.log(`%c ${n} %c v0.5.2 112fa81 %c`,`background: ${r}; padding: 2px; color: ${e}; font-weight: bold; text-transform: uppercase;`,`background: ${i}; padding: 2px; color: ${t}; font-weight: bold; text-transform: uppercase;`,"background: transparent")}("Theme Popper 🎉",{leftBgColor:"#ffb366"})}unmount(){Ul(this,ec,tc).call(this),Nl(this,Kl,!1)}animate(){if(Nl(this,Kl,!0),0===Rl(this,Ql).size)return Nl(this,Kl,!1),void Rl(this,Hl).clear();requestAnimationFrame(this.animate);for(const n of Rl(this,Ql)){if(n.stopped)return void Rl(this,Ql).delete(n);n.move(Rl(this,Hl).size)}Rl(this,Hl).draw((n,e)=>{for(const t of Rl(this,Ql))t.draw(n,e)}),Rl(this,Hl).render()}}ql=new WeakMap,Wl=new WeakMap,Gl=new WeakMap,Hl=new WeakMap,Ql=new WeakMap,Kl=new WeakMap,Zl=new WeakMap,Xl=new WeakMap,Yl=new WeakSet,nc=function(){/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?Rl(this,Xl).add("touchstart",Ul(this,rc,ic).bind(this)):Rl(this,Xl).add("mousedown",Ul(this,rc,ic).bind(this)),Rl(this,Xl).add("visibilitychange",Ul(this,sc,lc).bind(this)),Rl(this,Xl).add("resize",function(n,e,t){var r,i,a;void 0===e&&(e=50),void 0===t&&(t={});var o=null!=(r=t.isImmediate)&&r,s=null!=(i=t.callback)&&i,l=t.maxWait,c=Date.now(),u=[];function d(){if(void 0!==l){var n=Date.now()-c;if(n+e>=l)return l-n}return e}var p=function(){var e=[].slice.call(arguments),t=this;return new Promise((function(r,i){var l=o&&void 0===a;if(void 0!==a&&clearTimeout(a),a=setTimeout((function(){if(a=void 0,c=Date.now(),!o){var r=n.apply(t,e);s&&s(r),u.forEach((function(n){return(0,n.resolve)(r)})),u=[]}}),d()),l){var p=n.apply(t,e);return s&&s(p),r(p)}u.push({resolve:r,reject:i})}))};return p.cancel=function(n){void 0!==a&&clearTimeout(a),u.forEach((function(e){return(0,e.reject)(n)})),u=[]},p}(Ul(this,ac,oc).bind(this),500)),Rl(this,Xl).startAll()},ec=new WeakSet,tc=function(){Rl(this,Xl).stopAll(),Rl(this,Xl).clear()},rc=new WeakSet,ic=function(n){const e={x:Il(n)?n.touches[0].clientX:n.clientX,y:Il(n)?n.touches[0].clientY:n.clientY},t=new Vl(Rl(this,ql),{...e},Rl(this,Wl),Rl(this,Gl));Rl(this,Ql).add(t),Rl(this,Kl)||Ul(this,cc,uc).call(this)},ac=new WeakSet,oc=function(n){Rl(this,Hl).handleResize(n)},sc=new WeakSet,lc=function(n){Rl(this,Ql).clear(),Nl(this,Kl,!1)},cc=new WeakSet,uc=function(){requestAnimationFrame(this.animate)};var pc={name:"CursorEffects",data:()=>({popper:new dc({shape:"star",size:2},{opacity:1,zIndex:999999999})}),mounted(){this.popper.mount(this.$el)},beforeDestroy(){this.popper.unmount()}},hc=Object(al.a)(pc,(function(){return(0,this._self._c)("canvas",{attrs:{id:"vuepress-canvas-cursor"}})}),[],!1,null,null,null).exports,fc=(t(252),t(99)),mc=t.n(fc),vc=t(28);let gc,bc,yc;var wc;"valine"===(wc="gitalk")?t.e(52).then(t.t.bind(null,358,7)).then(n=>bc=n.default):"gitalk"===wc?Promise.all([t.e(0),t.e(51)]).then(t.t.bind(null,359,7)).then(()=>t.e(48).then(t.t.bind(null,360,7))).then(n=>gc=n.default):"artalk"===wc&&Promise.all([t.e(0),t.e(50)]).then(t.t.bind(null,361,7)).then(()=>t.e(12).then(t.bind(null,362))).then(n=>yc=n.default);function kc(n,e){const t={};return Reflect.ownKeys(n).forEach(r=>{if("string"==typeof n[r])try{t[r]=mc.a.render(n[r],e)}catch(e){console.warn(`Comment config option error at key named "${r}"`),console.warn("More info: "+e.message),t[r]=n[r]}else t[r]=n[r]}),t}console.log(`How to use "gitalk" in ${vc.name}@v${vc.version}:`,vc.homepage);const xc={gitalk:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t);new gc(kc({clientID:"a49669ea26b19e661005",clientSecret:"88eb9cf91f13e82a2440851fe575f27b1ac29aed",repo:"fanties.github.io",owner:"fanties",admin:["fanties"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"},{frontmatter:n})).render(e)},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}},valine:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t),new bc({...kc({clientID:"a49669ea26b19e661005",clientSecret:"88eb9cf91f13e82a2440851fe575f27b1ac29aed",repo:"fanties.github.io",owner:"fanties",admin:["fanties"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"},{frontmatter:n}),el:"#"+e})},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}},artalk:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t),new yc({el:"#"+e,pageKey:"",pageTitle:"",server:{clientID:"a49669ea26b19e661005",clientSecret:"88eb9cf91f13e82a2440851fe575f27b1ac29aed",repo:"fanties.github.io",owner:"fanties",admin:["fanties"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.server,site:{clientID:"a49669ea26b19e661005",clientSecret:"88eb9cf91f13e82a2440851fe575f27b1ac29aed",repo:"fanties.github.io",owner:"fanties",admin:["fanties"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.site}),setTimeout(()=>{if({clientID:"a49669ea26b19e661005",clientSecret:"88eb9cf91f13e82a2440851fe575f27b1ac29aed",repo:"fanties.github.io",owner:"fanties",admin:["fanties"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disableEmotion){document.querySelectorAll("span.atk-plug-btn").forEach(n=>{if(n.innerHTML.trim().indexOf("表情")>-1){var e=n;console.log(e),e.remove()}})}if({clientID:"a49669ea26b19e661005",clientSecret:"88eb9cf91f13e82a2440851fe575f27b1ac29aed",repo:"fanties.github.io",owner:"fanties",admin:["fanties"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disablePicture){document.querySelectorAll("span.atk-plug-btn").forEach(n=>{if(n.innerHTML.trim().indexOf("图片")>-1){var e=n;console.log(e),e.remove()}})}if({clientID:"a49669ea26b19e661005",clientSecret:"88eb9cf91f13e82a2440851fe575f27b1ac29aed",repo:"fanties.github.io",owner:"fanties",admin:["fanties"],distractionFreeMode:!1,pagerDirection:"last",id:"<%- (frontmatter.permalink || frontmatter.to.path).slice(-16) %>",title:"「评论」<%- frontmatter.title %>",labels:["Gitalk","Comment"],body:"页面：<%- window.location.origin + (frontmatter.to.path || window.location.pathname) %>"}.disablePreview){document.querySelectorAll("span.atk-plug-btn").forEach(n=>{if(n.innerHTML.trim().indexOf("预览")>-1){var e=n;console.log(e),e.remove()}})}},500)},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}}},_c="vuepress-plugin-vdoing-comment";let Tc=null;function Sc(n){return xc.gitalk.clear(_c)}function Ec(n){return!1!==n.comment&&!1!==n.comments}function Cc(n){clearTimeout(Tc);if(document.querySelector("main.page"))return xc.gitalk.render(n,_c);Tc=setTimeout(()=>Cc(n),200)}var Ac={mounted(){Tc=setTimeout(()=>{const n={to:{},from:{},...this.$frontmatter};Sc()&&Ec(n)&&Cc(n)},1e3),this.$router.afterEach((n,e)=>{if(n&&e&&n.path===e.path)return;const t={to:n,from:e,...this.$frontmatter};Sc()&&Ec(t)&&Cc(t)})}},jc=Object(al.a)(Ac,(function(){return(0,this._self._c)("div")}),[],!1,null,null,null).exports,Ic={props:{color:{required:!1,default:"rgb(66, 185, 131)"}}},Pc=(t(258),Object(al.a)(Ic,(function(){return(0,this._self._c)("div",{staticClass:"spinner",style:{background:this.color}})}),[],!1,null,"1bbcb91a",null).exports);const Oc={name:"Mermaid",props:{id:{type:String,required:!1,default:()=>"diagram_"+Date.now()},graph:{type:String,required:!1}},data:()=>({svg:void 0}),computed:{graphData(){return this.graph?this.graph:this.$slots.default[0].text}},render(n){return void 0===this.svg?n("Loading"):n("div",{class:["mermaid-diagram"],domProps:{innerHTML:this.svg,style:"width: 100%"}})},mounted(){t.e(49).then(t.t.bind(null,363,7)).then(n=>{n.initialize({startOnLoad:!0}),n.render(this.id,this.graphData,n=>{this.svg=n})})},components:{Loading:Pc}};var Bc={name:"ReadingProgress",data:()=>({readingTop:0,readingHeight:1,progressStyle:null,transform:void 0,running:!1}),watch:{$readingShow(){this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)}},mounted(){this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)},beforeDestroy(){this.$readingShow&&window.removeEventListener("scroll",this.base)},methods:{base(){this.running||(this.running=!0,requestAnimationFrame(this.getReadingBase))},getReadingBase(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle(),this.running=!1},getReadingHeight:()=>Math.max(document.body.scrollHeight,document.body.offsetHeight,0),getScreenHeight:()=>Math.max(window.innerHeight,document.documentElement.clientHeight,0),getReadingTop:()=>Math.max(window.pageYOffset,document.documentElement.scrollTop,0),getTransform(){const n=document.createElement("div");return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].find(e=>e in n.style)||void 0},getProgressStyle(){const n=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform?`${this.transform}: scaleX(${n})`:`width: ${100*n}%`;case"left":case"right":return this.transform?`${this.transform}: scaleY(${n})`:`height: ${100*n}%`;default:return null}}}},zc=(t(259),Object(al.a)(Bc,(function(){var n=this._self._c;return n("ClientOnly",[this.$readingShow?n("div",{staticClass:"reading-progress",class:this.$readingShow},[n("div",{staticClass:"progress",style:this.progressStyle})]):this._e()])}),[],!1,null,"3640397f",null).exports),Dc={name:"DynamicTitle",data:()=>({originTitle:"",recoverTimeout:null,config:{showIcon:"https://cdn.jsdelivr.net/gh/xingcxb/blog_img@blog1/blog/basic/favicon.ico",showText:"ヾ(≧▽≦*)o欢迎回来！",hideIcon:"https://cdn.jsdelivr.net/gh/xingcxb/blog_img@blog1/blog/basic/favicon.ico",hideText:"ಥ_ಥ不要走呀！",recoverTime:2e3}}),mounted(){this.originTitle=document.title,""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.addEventListener("visibilitychange",()=>{document.hidden?this.hidden():this.visible()})},methods:{hidden(){""!==this.config.hideIcon&&this.getIconElm().setAttribute("href",this.config.hideIcon),document.title=this.config.hideText,clearTimeout(this.recoverTimeout)},visible(){""!==this.config.showIcon&&this.getIconElm().setAttribute("href",this.config.showIcon),document.title=this.config.showText+this.originTitle,this.recoverTimeout=setTimeout(()=>{document.title=this.originTitle},this.config.recoverTime)},getIconElm(){let n=document.querySelector("link[rel=icon]");return null===n&&(n=document.createElement("link"),n.setAttribute("rel","icon"),document.head.appendChild(n)),n}},watch:{$route(n,e){n.path!==e.path&&(this.originTitle=document.title,clearTimeout(this.recoverTimeout))}}},Mc=Object(al.a)(Dc,(function(){return(0,this._self._c)("div")}),[],!1,null,null,null).exports,$c=t(100),Rc=t.n($c),Lc=[({Vue:n,options:e,router:t,siteData:r,isServer:i})=>{let a=!1;n.component(cl.default.name,cl.default),n.mixin({mounted(){a||(window.addEventListener("unload",this.saveLastReading),a=!0)},methods:{saveLastReading(){localStorage.setItem("lastReading",JSON.stringify({path:this.$route.path,scrollTop:document.documentElement.scrollTop,timestamp:(new Date).getTime()}))}}})},({Vue:n,options:e,router:t,siteData:r})=>{r.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${fl(n.getUTCMonth()+1)}-${fl(n.getUTCDate())} ${fl(n.getUTCHours())}:${fl(n.getUTCMinutes())}:${fl(n.getUTCSeconds())}`}(e)),t?n.author=t:r.themeConfig.author&&(n.author=r.themeConfig.author)}),n.mixin(hl)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:n})=>{n.component("CursorEffects",hc)},({Vue:n})=>{n.component("Comment",jc)},({Vue:n})=>{n.component(Oc.name,Oc)},({router:n})=>{"undefined"!=typeof window&&function(){var n=document.createElement("script"),e=window.location.protocol.split(":")[0];n.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)}()},({router:n})=>{"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?efdb43e9c4335da1fbabf3840b82c3ed";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}(),n.afterEach((function(n){_hmt.push(["_trackPageview",n.fullPath])})))},({Vue:n})=>{n.component(zc.name,zc),n.mixin({computed:{$readingShow(){return this.$page.frontmatter.readingShow}}})},({Vue:n})=>{n.component("DynamicTitle",Mc)},({Vue:n})=>n.use(Rc.a)],Nc=["BlockToggle","GlobalTip","Aplayer","CursorEffects","Comment","ReadingProgress","DynamicTitle"];class Uc extends class{constructor(){this.store=new Wt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Wt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(Uc.prototype,{getPageAsyncComponent:os,getLayoutAsyncComponent:ss,getAsyncComponent:ls,getVueComponent:cs});var Fc={install(n){const e=new Uc;n.$vuepress=e,n.prototype.$vuepress=e}};function Jc(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Vc={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return ds("pageKey",e),Wt.component(e)||Wt.component(e,os(e)),Wt.component(e)?n(e):n("")}},qc={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Wc={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Gc=(t(260),t(261),Object(al.a)(Wc,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Hc={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Wt.config.productionTip=!1,Wt.use(Vo),Wt.use(Fc),Wt.mixin(function(n,e,t=Wt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const r=new(n(t.$vuepress.$get("siteData"))),i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),a={};return Object.keys(i).reduce((n,e)=>(e.startsWith("$")&&(n[e]=i[e].get),n),a),{computed:a}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const r in n)"/"===r?t=n[r]:0===this.$page.path.indexOf(r)&&(e=n[r]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},ll)),Wt.component("Content",Vc),Wt.component("ContentSlotsDistributor",qc),Wt.component("OutboundLink",Gc),Wt.component("ClientOnly",Hc),Wt.component("Layout",ss("Layout")),Wt.component("NotFound",ss("NotFound")),Wt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.7",hash:"93efaca"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:ll.routerBase||ll.base,t=new Vo({base:e,mode:"history",fallback:!1,routes:sl,scrollBehavior:(n,e,t)=>t||(n.hash?!Wt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,r)=>{if(Jc(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Jc(n,t)?r(t):r()}else r();else{const t=e.path+"/",i=e.path+".html";Jc(n,i)?r(i):Jc(n,t)?r(t):r()}})}(t);const r={};try{await Promise.all(Lc.filter(n=>"function"==typeof n).map(e=>e({Vue:Wt,options:r,router:t,siteData:ll,isServer:n})))}catch(n){console.error(n)}return{app:new Wt(Object.assign(r,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Nc.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);